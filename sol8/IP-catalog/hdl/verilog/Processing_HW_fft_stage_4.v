// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Processing_HW_fft_stage_4 (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        S3_dout,
        S3_num_data_valid,
        S3_fifo_cap,
        S3_empty_n,
        S3_read,
        S4_din,
        S4_num_data_valid,
        S4_fifo_cap,
        S4_full_n,
        S4_write,
        numFFT_dout,
        numFFT_num_data_valid,
        numFFT_fifo_cap,
        numFFT_empty_n,
        numFFT_read,
        num_c36_din,
        num_c36_num_data_valid,
        num_c36_fifo_cap,
        num_c36_full_n,
        num_c36_write
);

parameter    ap_ST_fsm_state1 = 9'd1;
parameter    ap_ST_fsm_state2 = 9'd2;
parameter    ap_ST_fsm_state3 = 9'd4;
parameter    ap_ST_fsm_state4 = 9'd8;
parameter    ap_ST_fsm_state5 = 9'd16;
parameter    ap_ST_fsm_state6 = 9'd32;
parameter    ap_ST_fsm_state7 = 9'd64;
parameter    ap_ST_fsm_state8 = 9'd128;
parameter    ap_ST_fsm_state9 = 9'd256;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [63:0] S3_dout;
input  [10:0] S3_num_data_valid;
input  [10:0] S3_fifo_cap;
input   S3_empty_n;
output   S3_read;
output  [63:0] S4_din;
input  [10:0] S4_num_data_valid;
input  [10:0] S4_fifo_cap;
input   S4_full_n;
output   S4_write;
input  [9:0] numFFT_dout;
input  [1:0] numFFT_num_data_valid;
input  [1:0] numFFT_fifo_cap;
input   numFFT_empty_n;
output   numFFT_read;
output  [9:0] num_c36_din;
input  [1:0] num_c36_num_data_valid;
input  [1:0] num_c36_fifo_cap;
input   num_c36_full_n;
output   num_c36_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg S3_read;
reg[63:0] S4_din;
reg S4_write;
reg numFFT_read;
reg num_c36_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [8:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    numFFT_blk_n;
reg    num_c36_blk_n;
wire   [16:0] tmp_fu_144_p3;
reg   [16:0] tmp_reg_183;
reg   [3:0] In_re_address0;
reg    In_re_ce0;
reg    In_re_we0;
wire   [31:0] In_re_q0;
reg    In_re_ce1;
wire   [31:0] In_re_q1;
reg   [3:0] In_im_address0;
reg    In_im_ce0;
reg    In_im_we0;
wire   [31:0] In_im_q0;
reg    In_im_ce1;
wire   [31:0] In_im_q1;
reg   [2:0] OutBuff_re_address0;
reg    OutBuff_re_ce0;
reg    OutBuff_re_we0;
wire   [31:0] OutBuff_re_q0;
reg   [2:0] OutBuff_im_address0;
reg    OutBuff_im_ce0;
reg    OutBuff_im_we0;
wire   [31:0] OutBuff_im_q0;
wire    grp_fft_stage_4_Pipeline_stage_4_0_fu_104_ap_start;
wire    grp_fft_stage_4_Pipeline_stage_4_0_fu_104_ap_done;
wire    grp_fft_stage_4_Pipeline_stage_4_0_fu_104_ap_idle;
wire    grp_fft_stage_4_Pipeline_stage_4_0_fu_104_ap_ready;
wire    grp_fft_stage_4_Pipeline_stage_4_0_fu_104_S3_read;
wire   [3:0] grp_fft_stage_4_Pipeline_stage_4_0_fu_104_In_re_address0;
wire    grp_fft_stage_4_Pipeline_stage_4_0_fu_104_In_re_ce0;
wire    grp_fft_stage_4_Pipeline_stage_4_0_fu_104_In_re_we0;
wire   [31:0] grp_fft_stage_4_Pipeline_stage_4_0_fu_104_In_re_d0;
wire   [3:0] grp_fft_stage_4_Pipeline_stage_4_0_fu_104_In_im_address0;
wire    grp_fft_stage_4_Pipeline_stage_4_0_fu_104_In_im_ce0;
wire    grp_fft_stage_4_Pipeline_stage_4_0_fu_104_In_im_we0;
wire   [31:0] grp_fft_stage_4_Pipeline_stage_4_0_fu_104_In_im_d0;
wire    grp_fft_stage_4_Pipeline_stage_4_1_fu_112_ap_start;
wire    grp_fft_stage_4_Pipeline_stage_4_1_fu_112_ap_done;
wire    grp_fft_stage_4_Pipeline_stage_4_1_fu_112_ap_idle;
wire    grp_fft_stage_4_Pipeline_stage_4_1_fu_112_ap_ready;
wire   [63:0] grp_fft_stage_4_Pipeline_stage_4_1_fu_112_S4_din;
wire    grp_fft_stage_4_Pipeline_stage_4_1_fu_112_S4_write;
wire   [3:0] grp_fft_stage_4_Pipeline_stage_4_1_fu_112_In_re_address0;
wire    grp_fft_stage_4_Pipeline_stage_4_1_fu_112_In_re_ce0;
wire   [3:0] grp_fft_stage_4_Pipeline_stage_4_1_fu_112_In_re_address1;
wire    grp_fft_stage_4_Pipeline_stage_4_1_fu_112_In_re_ce1;
wire   [3:0] grp_fft_stage_4_Pipeline_stage_4_1_fu_112_In_im_address0;
wire    grp_fft_stage_4_Pipeline_stage_4_1_fu_112_In_im_ce0;
wire   [3:0] grp_fft_stage_4_Pipeline_stage_4_1_fu_112_In_im_address1;
wire    grp_fft_stage_4_Pipeline_stage_4_1_fu_112_In_im_ce1;
wire   [2:0] grp_fft_stage_4_Pipeline_stage_4_1_fu_112_OutBuff_re_address0;
wire    grp_fft_stage_4_Pipeline_stage_4_1_fu_112_OutBuff_re_ce0;
wire    grp_fft_stage_4_Pipeline_stage_4_1_fu_112_OutBuff_re_we0;
wire   [31:0] grp_fft_stage_4_Pipeline_stage_4_1_fu_112_OutBuff_re_d0;
wire   [2:0] grp_fft_stage_4_Pipeline_stage_4_1_fu_112_OutBuff_im_address0;
wire    grp_fft_stage_4_Pipeline_stage_4_1_fu_112_OutBuff_im_ce0;
wire    grp_fft_stage_4_Pipeline_stage_4_1_fu_112_OutBuff_im_we0;
wire   [31:0] grp_fft_stage_4_Pipeline_stage_4_1_fu_112_OutBuff_im_d0;
wire    grp_fft_stage_4_Pipeline_stage_4_2_fu_126_ap_start;
wire    grp_fft_stage_4_Pipeline_stage_4_2_fu_126_ap_done;
wire    grp_fft_stage_4_Pipeline_stage_4_2_fu_126_ap_idle;
wire    grp_fft_stage_4_Pipeline_stage_4_2_fu_126_ap_ready;
wire   [63:0] grp_fft_stage_4_Pipeline_stage_4_2_fu_126_S4_din;
wire    grp_fft_stage_4_Pipeline_stage_4_2_fu_126_S4_write;
wire   [2:0] grp_fft_stage_4_Pipeline_stage_4_2_fu_126_OutBuff_re_address0;
wire    grp_fft_stage_4_Pipeline_stage_4_2_fu_126_OutBuff_re_ce0;
wire   [2:0] grp_fft_stage_4_Pipeline_stage_4_2_fu_126_OutBuff_im_address0;
wire    grp_fft_stage_4_Pipeline_stage_4_2_fu_126_OutBuff_im_ce0;
reg    grp_fft_stage_4_Pipeline_stage_4_0_fu_104_ap_start_reg;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln1027_fu_160_p2;
wire    ap_CS_fsm_state3;
reg    grp_fft_stage_4_Pipeline_stage_4_1_fu_112_ap_start_reg;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
reg    grp_fft_stage_4_Pipeline_stage_4_2_fu_126_ap_start_reg;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
reg   [16:0] indvar_flatten_fu_70;
wire   [16:0] add_ln1027_fu_165_p2;
reg    ap_block_state1;
wire   [10:0] numFFT_cast1_fu_134_p1;
wire   [10:0] sub_i_i_fu_138_p2;
reg   [8:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
reg    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
reg    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
reg    ap_ST_fsm_state9_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 9'd1;
#0 grp_fft_stage_4_Pipeline_stage_4_0_fu_104_ap_start_reg = 1'b0;
#0 grp_fft_stage_4_Pipeline_stage_4_1_fu_112_ap_start_reg = 1'b0;
#0 grp_fft_stage_4_Pipeline_stage_4_2_fu_126_ap_start_reg = 1'b0;
end

Processing_HW_fft_stage_4_In_re_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
In_re_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(In_re_address0),
    .ce0(In_re_ce0),
    .we0(In_re_we0),
    .d0(grp_fft_stage_4_Pipeline_stage_4_0_fu_104_In_re_d0),
    .q0(In_re_q0),
    .address1(grp_fft_stage_4_Pipeline_stage_4_1_fu_112_In_re_address1),
    .ce1(In_re_ce1),
    .q1(In_re_q1)
);

Processing_HW_fft_stage_4_In_re_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
In_im_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(In_im_address0),
    .ce0(In_im_ce0),
    .we0(In_im_we0),
    .d0(grp_fft_stage_4_Pipeline_stage_4_0_fu_104_In_im_d0),
    .q0(In_im_q0),
    .address1(grp_fft_stage_4_Pipeline_stage_4_1_fu_112_In_im_address1),
    .ce1(In_im_ce1),
    .q1(In_im_q1)
);

Processing_HW_fft_stage_4_OutBuff_re_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
OutBuff_re_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(OutBuff_re_address0),
    .ce0(OutBuff_re_ce0),
    .we0(OutBuff_re_we0),
    .d0(grp_fft_stage_4_Pipeline_stage_4_1_fu_112_OutBuff_re_d0),
    .q0(OutBuff_re_q0)
);

Processing_HW_fft_stage_4_OutBuff_re_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
OutBuff_im_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(OutBuff_im_address0),
    .ce0(OutBuff_im_ce0),
    .we0(OutBuff_im_we0),
    .d0(grp_fft_stage_4_Pipeline_stage_4_1_fu_112_OutBuff_im_d0),
    .q0(OutBuff_im_q0)
);

Processing_HW_fft_stage_4_Pipeline_stage_4_0 grp_fft_stage_4_Pipeline_stage_4_0_fu_104(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_fft_stage_4_Pipeline_stage_4_0_fu_104_ap_start),
    .ap_done(grp_fft_stage_4_Pipeline_stage_4_0_fu_104_ap_done),
    .ap_idle(grp_fft_stage_4_Pipeline_stage_4_0_fu_104_ap_idle),
    .ap_ready(grp_fft_stage_4_Pipeline_stage_4_0_fu_104_ap_ready),
    .S3_dout(S3_dout),
    .S3_num_data_valid(11'd0),
    .S3_fifo_cap(11'd0),
    .S3_empty_n(S3_empty_n),
    .S3_read(grp_fft_stage_4_Pipeline_stage_4_0_fu_104_S3_read),
    .In_re_address0(grp_fft_stage_4_Pipeline_stage_4_0_fu_104_In_re_address0),
    .In_re_ce0(grp_fft_stage_4_Pipeline_stage_4_0_fu_104_In_re_ce0),
    .In_re_we0(grp_fft_stage_4_Pipeline_stage_4_0_fu_104_In_re_we0),
    .In_re_d0(grp_fft_stage_4_Pipeline_stage_4_0_fu_104_In_re_d0),
    .In_im_address0(grp_fft_stage_4_Pipeline_stage_4_0_fu_104_In_im_address0),
    .In_im_ce0(grp_fft_stage_4_Pipeline_stage_4_0_fu_104_In_im_ce0),
    .In_im_we0(grp_fft_stage_4_Pipeline_stage_4_0_fu_104_In_im_we0),
    .In_im_d0(grp_fft_stage_4_Pipeline_stage_4_0_fu_104_In_im_d0)
);

Processing_HW_fft_stage_4_Pipeline_stage_4_1 grp_fft_stage_4_Pipeline_stage_4_1_fu_112(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_fft_stage_4_Pipeline_stage_4_1_fu_112_ap_start),
    .ap_done(grp_fft_stage_4_Pipeline_stage_4_1_fu_112_ap_done),
    .ap_idle(grp_fft_stage_4_Pipeline_stage_4_1_fu_112_ap_idle),
    .ap_ready(grp_fft_stage_4_Pipeline_stage_4_1_fu_112_ap_ready),
    .S4_din(grp_fft_stage_4_Pipeline_stage_4_1_fu_112_S4_din),
    .S4_num_data_valid(11'd0),
    .S4_fifo_cap(11'd0),
    .S4_full_n(S4_full_n),
    .S4_write(grp_fft_stage_4_Pipeline_stage_4_1_fu_112_S4_write),
    .In_re_address0(grp_fft_stage_4_Pipeline_stage_4_1_fu_112_In_re_address0),
    .In_re_ce0(grp_fft_stage_4_Pipeline_stage_4_1_fu_112_In_re_ce0),
    .In_re_q0(In_re_q0),
    .In_re_address1(grp_fft_stage_4_Pipeline_stage_4_1_fu_112_In_re_address1),
    .In_re_ce1(grp_fft_stage_4_Pipeline_stage_4_1_fu_112_In_re_ce1),
    .In_re_q1(In_re_q1),
    .In_im_address0(grp_fft_stage_4_Pipeline_stage_4_1_fu_112_In_im_address0),
    .In_im_ce0(grp_fft_stage_4_Pipeline_stage_4_1_fu_112_In_im_ce0),
    .In_im_q0(In_im_q0),
    .In_im_address1(grp_fft_stage_4_Pipeline_stage_4_1_fu_112_In_im_address1),
    .In_im_ce1(grp_fft_stage_4_Pipeline_stage_4_1_fu_112_In_im_ce1),
    .In_im_q1(In_im_q1),
    .OutBuff_re_address0(grp_fft_stage_4_Pipeline_stage_4_1_fu_112_OutBuff_re_address0),
    .OutBuff_re_ce0(grp_fft_stage_4_Pipeline_stage_4_1_fu_112_OutBuff_re_ce0),
    .OutBuff_re_we0(grp_fft_stage_4_Pipeline_stage_4_1_fu_112_OutBuff_re_we0),
    .OutBuff_re_d0(grp_fft_stage_4_Pipeline_stage_4_1_fu_112_OutBuff_re_d0),
    .OutBuff_im_address0(grp_fft_stage_4_Pipeline_stage_4_1_fu_112_OutBuff_im_address0),
    .OutBuff_im_ce0(grp_fft_stage_4_Pipeline_stage_4_1_fu_112_OutBuff_im_ce0),
    .OutBuff_im_we0(grp_fft_stage_4_Pipeline_stage_4_1_fu_112_OutBuff_im_we0),
    .OutBuff_im_d0(grp_fft_stage_4_Pipeline_stage_4_1_fu_112_OutBuff_im_d0)
);

Processing_HW_fft_stage_4_Pipeline_stage_4_2 grp_fft_stage_4_Pipeline_stage_4_2_fu_126(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_fft_stage_4_Pipeline_stage_4_2_fu_126_ap_start),
    .ap_done(grp_fft_stage_4_Pipeline_stage_4_2_fu_126_ap_done),
    .ap_idle(grp_fft_stage_4_Pipeline_stage_4_2_fu_126_ap_idle),
    .ap_ready(grp_fft_stage_4_Pipeline_stage_4_2_fu_126_ap_ready),
    .S4_din(grp_fft_stage_4_Pipeline_stage_4_2_fu_126_S4_din),
    .S4_num_data_valid(11'd0),
    .S4_fifo_cap(11'd0),
    .S4_full_n(S4_full_n),
    .S4_write(grp_fft_stage_4_Pipeline_stage_4_2_fu_126_S4_write),
    .OutBuff_re_address0(grp_fft_stage_4_Pipeline_stage_4_2_fu_126_OutBuff_re_address0),
    .OutBuff_re_ce0(grp_fft_stage_4_Pipeline_stage_4_2_fu_126_OutBuff_re_ce0),
    .OutBuff_re_q0(OutBuff_re_q0),
    .OutBuff_im_address0(grp_fft_stage_4_Pipeline_stage_4_2_fu_126_OutBuff_im_address0),
    .OutBuff_im_ce0(grp_fft_stage_4_Pipeline_stage_4_2_fu_126_OutBuff_im_ce0),
    .OutBuff_im_q0(OutBuff_im_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln1027_fu_160_p2 == 1'd1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_fft_stage_4_Pipeline_stage_4_0_fu_104_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln1027_fu_160_p2 == 1'd0))) begin
            grp_fft_stage_4_Pipeline_stage_4_0_fu_104_ap_start_reg <= 1'b1;
        end else if ((grp_fft_stage_4_Pipeline_stage_4_0_fu_104_ap_ready == 1'b1)) begin
            grp_fft_stage_4_Pipeline_stage_4_0_fu_104_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_fft_stage_4_Pipeline_stage_4_1_fu_112_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state5)) begin
            grp_fft_stage_4_Pipeline_stage_4_1_fu_112_ap_start_reg <= 1'b1;
        end else if ((grp_fft_stage_4_Pipeline_stage_4_1_fu_112_ap_ready == 1'b1)) begin
            grp_fft_stage_4_Pipeline_stage_4_1_fu_112_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_fft_stage_4_Pipeline_stage_4_2_fu_126_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state8)) begin
            grp_fft_stage_4_Pipeline_stage_4_2_fu_126_ap_start_reg <= 1'b1;
        end else if ((grp_fft_stage_4_Pipeline_stage_4_2_fu_126_ap_ready == 1'b1)) begin
            grp_fft_stage_4_Pipeline_stage_4_2_fu_126_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((num_c36_full_n == 1'b0) | (numFFT_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_fu_70 <= 17'd0;
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln1027_fu_160_p2 == 1'd0))) begin
        indvar_flatten_fu_70 <= add_ln1027_fu_165_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        tmp_reg_183[16 : 6] <= tmp_fu_144_p3[16 : 6];
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        In_im_address0 = grp_fft_stage_4_Pipeline_stage_4_1_fu_112_In_im_address0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        In_im_address0 = grp_fft_stage_4_Pipeline_stage_4_0_fu_104_In_im_address0;
    end else begin
        In_im_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        In_im_ce0 = grp_fft_stage_4_Pipeline_stage_4_1_fu_112_In_im_ce0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        In_im_ce0 = grp_fft_stage_4_Pipeline_stage_4_0_fu_104_In_im_ce0;
    end else begin
        In_im_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        In_im_ce1 = grp_fft_stage_4_Pipeline_stage_4_1_fu_112_In_im_ce1;
    end else begin
        In_im_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        In_im_we0 = grp_fft_stage_4_Pipeline_stage_4_0_fu_104_In_im_we0;
    end else begin
        In_im_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        In_re_address0 = grp_fft_stage_4_Pipeline_stage_4_1_fu_112_In_re_address0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        In_re_address0 = grp_fft_stage_4_Pipeline_stage_4_0_fu_104_In_re_address0;
    end else begin
        In_re_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        In_re_ce0 = grp_fft_stage_4_Pipeline_stage_4_1_fu_112_In_re_ce0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        In_re_ce0 = grp_fft_stage_4_Pipeline_stage_4_0_fu_104_In_re_ce0;
    end else begin
        In_re_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        In_re_ce1 = grp_fft_stage_4_Pipeline_stage_4_1_fu_112_In_re_ce1;
    end else begin
        In_re_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        In_re_we0 = grp_fft_stage_4_Pipeline_stage_4_0_fu_104_In_re_we0;
    end else begin
        In_re_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        OutBuff_im_address0 = grp_fft_stage_4_Pipeline_stage_4_2_fu_126_OutBuff_im_address0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        OutBuff_im_address0 = grp_fft_stage_4_Pipeline_stage_4_1_fu_112_OutBuff_im_address0;
    end else begin
        OutBuff_im_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        OutBuff_im_ce0 = grp_fft_stage_4_Pipeline_stage_4_2_fu_126_OutBuff_im_ce0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        OutBuff_im_ce0 = grp_fft_stage_4_Pipeline_stage_4_1_fu_112_OutBuff_im_ce0;
    end else begin
        OutBuff_im_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        OutBuff_im_we0 = grp_fft_stage_4_Pipeline_stage_4_1_fu_112_OutBuff_im_we0;
    end else begin
        OutBuff_im_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        OutBuff_re_address0 = grp_fft_stage_4_Pipeline_stage_4_2_fu_126_OutBuff_re_address0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        OutBuff_re_address0 = grp_fft_stage_4_Pipeline_stage_4_1_fu_112_OutBuff_re_address0;
    end else begin
        OutBuff_re_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        OutBuff_re_ce0 = grp_fft_stage_4_Pipeline_stage_4_2_fu_126_OutBuff_re_ce0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        OutBuff_re_ce0 = grp_fft_stage_4_Pipeline_stage_4_1_fu_112_OutBuff_re_ce0;
    end else begin
        OutBuff_re_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        OutBuff_re_we0 = grp_fft_stage_4_Pipeline_stage_4_1_fu_112_OutBuff_re_we0;
    end else begin
        OutBuff_re_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        S3_read = grp_fft_stage_4_Pipeline_stage_4_0_fu_104_S3_read;
    end else begin
        S3_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        S4_din = grp_fft_stage_4_Pipeline_stage_4_2_fu_126_S4_din;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        S4_din = grp_fft_stage_4_Pipeline_stage_4_1_fu_112_S4_din;
    end else begin
        S4_din = grp_fft_stage_4_Pipeline_stage_4_2_fu_126_S4_din;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        S4_write = grp_fft_stage_4_Pipeline_stage_4_2_fu_126_S4_write;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        S4_write = grp_fft_stage_4_Pipeline_stage_4_1_fu_112_S4_write;
    end else begin
        S4_write = 1'b0;
    end
end

always @ (*) begin
    if (((num_c36_full_n == 1'b0) | (numFFT_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (real_start == 1'b0))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

always @ (*) begin
    if ((grp_fft_stage_4_Pipeline_stage_4_0_fu_104_ap_done == 1'b0)) begin
        ap_ST_fsm_state3_blk = 1'b1;
    end else begin
        ap_ST_fsm_state3_blk = 1'b0;
    end
end

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

always @ (*) begin
    if ((grp_fft_stage_4_Pipeline_stage_4_1_fu_112_ap_done == 1'b0)) begin
        ap_ST_fsm_state6_blk = 1'b1;
    end else begin
        ap_ST_fsm_state6_blk = 1'b0;
    end
end

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

always @ (*) begin
    if ((grp_fft_stage_4_Pipeline_stage_4_2_fu_126_ap_done == 1'b0)) begin
        ap_ST_fsm_state9_blk = 1'b1;
    end else begin
        ap_ST_fsm_state9_blk = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln1027_fu_160_p2 == 1'd1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (real_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln1027_fu_160_p2 == 1'd1))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        numFFT_blk_n = numFFT_empty_n;
    end else begin
        numFFT_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((num_c36_full_n == 1'b0) | (numFFT_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        numFFT_read = 1'b1;
    end else begin
        numFFT_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        num_c36_blk_n = num_c36_full_n;
    end else begin
        num_c36_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((num_c36_full_n == 1'b0) | (numFFT_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        num_c36_write = 1'b1;
    end else begin
        num_c36_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((num_c36_full_n == 1'b0) | (numFFT_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln1027_fu_160_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (grp_fft_stage_4_Pipeline_stage_4_0_fu_104_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (grp_fft_stage_4_Pipeline_stage_4_1_fu_112_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            if (((1'b1 == ap_CS_fsm_state9) & (grp_fft_stage_4_Pipeline_stage_4_2_fu_126_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1027_fu_165_p2 = (indvar_flatten_fu_70 + 17'd1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state1 = ((num_c36_full_n == 1'b0) | (numFFT_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (real_start == 1'b0));
end

assign ap_ready = internal_ap_ready;

assign grp_fft_stage_4_Pipeline_stage_4_0_fu_104_ap_start = grp_fft_stage_4_Pipeline_stage_4_0_fu_104_ap_start_reg;

assign grp_fft_stage_4_Pipeline_stage_4_1_fu_112_ap_start = grp_fft_stage_4_Pipeline_stage_4_1_fu_112_ap_start_reg;

assign grp_fft_stage_4_Pipeline_stage_4_2_fu_126_ap_start = grp_fft_stage_4_Pipeline_stage_4_2_fu_126_ap_start_reg;

assign icmp_ln1027_fu_160_p2 = ((indvar_flatten_fu_70 == tmp_reg_183) ? 1'b1 : 1'b0);

assign numFFT_cast1_fu_134_p1 = numFFT_dout;

assign num_c36_din = numFFT_dout;

assign start_out = real_start;

assign sub_i_i_fu_138_p2 = ($signed(numFFT_cast1_fu_134_p1) + $signed(11'd2045));

assign tmp_fu_144_p3 = {{sub_i_i_fu_138_p2}, {6'd0}};

always @ (posedge ap_clk) begin
    tmp_reg_183[5:0] <= 6'b000000;
end

endmodule //Processing_HW_fft_stage_4
