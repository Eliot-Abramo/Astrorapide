-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity fft_HW_load_nfft_value is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    m_axi_gmem0_AWVALID : OUT STD_LOGIC;
    m_axi_gmem0_AWREADY : IN STD_LOGIC;
    m_axi_gmem0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_WVALID : OUT STD_LOGIC;
    m_axi_gmem0_WREADY : IN STD_LOGIC;
    m_axi_gmem0_WDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem0_WSTRB : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem0_WLAST : OUT STD_LOGIC;
    m_axi_gmem0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_ARVALID : OUT STD_LOGIC;
    m_axi_gmem0_ARREADY : IN STD_LOGIC;
    m_axi_gmem0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_RVALID : IN STD_LOGIC;
    m_axi_gmem0_RREADY : OUT STD_LOGIC;
    m_axi_gmem0_RDATA : IN STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem0_RLAST : IN STD_LOGIC;
    m_axi_gmem0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_RFIFONUM : IN STD_LOGIC_VECTOR (9 downto 0);
    m_axi_gmem0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_BVALID : IN STD_LOGIC;
    m_axi_gmem0_BREADY : OUT STD_LOGIC;
    m_axi_gmem0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    in_r : IN STD_LOGIC_VECTOR (63 downto 0);
    S0_din : OUT STD_LOGIC_VECTOR (63 downto 0);
    S0_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
    S0_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
    S0_full_n : IN STD_LOGIC;
    S0_write : OUT STD_LOGIC;
    numFFT : IN STD_LOGIC_VECTOR (31 downto 0);
    num_c36_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    num_c36_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    num_c36_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    num_c36_full_n : IN STD_LOGIC;
    num_c36_write : OUT STD_LOGIC );
end;


architecture behav of fft_HW_load_nfft_value is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv43_1 : STD_LOGIC_VECTOR (42 downto 0) := "0000000000000000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";

attribute shreg_extract : string;
    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal num_c36_blk_n : STD_LOGIC;
    signal shl_ln_fu_137_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal shl_ln_reg_210 : STD_LOGIC_VECTOR (5 downto 0);
    signal shl_ln76_1_fu_145_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal shl_ln76_1_reg_215 : STD_LOGIC_VECTOR (5 downto 0);
    signal counter_V_1_reg_220 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal or_ln186_fu_181_p2 : STD_LOGIC_VECTOR (42 downto 0);
    signal or_ln186_reg_228 : STD_LOGIC_VECTOR (42 downto 0);
    signal icmp_ln1027_fu_162_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal BufferIN_re_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal BufferIN_re_ce0 : STD_LOGIC;
    signal BufferIN_re_we0 : STD_LOGIC;
    signal BufferIN_re_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal BufferIN_im_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal BufferIN_im_ce0 : STD_LOGIC;
    signal BufferIN_im_we0 : STD_LOGIC;
    signal BufferIN_im_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_ap_start : STD_LOGIC;
    signal grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_ap_done : STD_LOGIC;
    signal grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_ap_idle : STD_LOGIC;
    signal grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_ap_ready : STD_LOGIC;
    signal grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_m_axi_gmem0_AWVALID : STD_LOGIC;
    signal grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_m_axi_gmem0_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_m_axi_gmem0_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_m_axi_gmem0_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_m_axi_gmem0_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_m_axi_gmem0_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_m_axi_gmem0_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_m_axi_gmem0_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_m_axi_gmem0_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_m_axi_gmem0_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_m_axi_gmem0_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_m_axi_gmem0_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_m_axi_gmem0_WVALID : STD_LOGIC;
    signal grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_m_axi_gmem0_WDATA : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_m_axi_gmem0_WSTRB : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_m_axi_gmem0_WLAST : STD_LOGIC;
    signal grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_m_axi_gmem0_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_m_axi_gmem0_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_m_axi_gmem0_ARVALID : STD_LOGIC;
    signal grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_m_axi_gmem0_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_m_axi_gmem0_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_m_axi_gmem0_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_m_axi_gmem0_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_m_axi_gmem0_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_m_axi_gmem0_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_m_axi_gmem0_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_m_axi_gmem0_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_m_axi_gmem0_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_m_axi_gmem0_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_m_axi_gmem0_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_m_axi_gmem0_RREADY : STD_LOGIC;
    signal grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_m_axi_gmem0_BREADY : STD_LOGIC;
    signal grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_BufferIN_re_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_BufferIN_re_ce0 : STD_LOGIC;
    signal grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_BufferIN_re_we0 : STD_LOGIC;
    signal grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_BufferIN_re_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_BufferIN_im_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_BufferIN_im_ce0 : STD_LOGIC;
    signal grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_BufferIN_im_we0 : STD_LOGIC;
    signal grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_BufferIN_im_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_nfft_value_Pipeline_load_total_fu_119_ap_start : STD_LOGIC;
    signal grp_load_nfft_value_Pipeline_load_total_fu_119_ap_done : STD_LOGIC;
    signal grp_load_nfft_value_Pipeline_load_total_fu_119_ap_idle : STD_LOGIC;
    signal grp_load_nfft_value_Pipeline_load_total_fu_119_ap_ready : STD_LOGIC;
    signal grp_load_nfft_value_Pipeline_load_total_fu_119_S0_din : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_load_nfft_value_Pipeline_load_total_fu_119_S0_write : STD_LOGIC;
    signal grp_load_nfft_value_Pipeline_load_total_fu_119_BufferIN_re_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_load_nfft_value_Pipeline_load_total_fu_119_BufferIN_re_ce0 : STD_LOGIC;
    signal grp_load_nfft_value_Pipeline_load_total_fu_119_BufferIN_im_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_load_nfft_value_Pipeline_load_total_fu_119_BufferIN_im_ce0 : STD_LOGIC;
    signal grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal grp_load_nfft_value_Pipeline_load_total_fu_119_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal counter_V_fu_74 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln840_fu_167_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal trunc_ln95_fu_127_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal xor_ln95_fu_131_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal shl_ln1_fu_173_p3 : STD_LOGIC_VECTOR (42 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component fft_HW_load_nfft_value_Pipeline_VITIS_LOOP_97_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_gmem0_AWVALID : OUT STD_LOGIC;
        m_axi_gmem0_AWREADY : IN STD_LOGIC;
        m_axi_gmem0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_WVALID : OUT STD_LOGIC;
        m_axi_gmem0_WREADY : IN STD_LOGIC;
        m_axi_gmem0_WDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_WSTRB : OUT STD_LOGIC_VECTOR (7 downto 0);
        m_axi_gmem0_WLAST : OUT STD_LOGIC;
        m_axi_gmem0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_ARVALID : OUT STD_LOGIC;
        m_axi_gmem0_ARREADY : IN STD_LOGIC;
        m_axi_gmem0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RVALID : IN STD_LOGIC;
        m_axi_gmem0_RREADY : OUT STD_LOGIC;
        m_axi_gmem0_RDATA : IN STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_RLAST : IN STD_LOGIC;
        m_axi_gmem0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RFIFONUM : IN STD_LOGIC_VECTOR (9 downto 0);
        m_axi_gmem0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_BVALID : IN STD_LOGIC;
        m_axi_gmem0_BREADY : OUT STD_LOGIC;
        m_axi_gmem0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        BufferIN_re_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        BufferIN_re_ce0 : OUT STD_LOGIC;
        BufferIN_re_we0 : OUT STD_LOGIC;
        BufferIN_re_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        BufferIN_im_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        BufferIN_im_ce0 : OUT STD_LOGIC;
        BufferIN_im_we0 : OUT STD_LOGIC;
        BufferIN_im_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        counter_V : IN STD_LOGIC_VECTOR (31 downto 0);
        in_r : IN STD_LOGIC_VECTOR (63 downto 0);
        zext_ln76 : IN STD_LOGIC_VECTOR (5 downto 0);
        or_ln186 : IN STD_LOGIC_VECTOR (42 downto 0);
        zext_ln95 : IN STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component fft_HW_load_nfft_value_Pipeline_load_total IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        S0_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        S0_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
        S0_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
        S0_full_n : IN STD_LOGIC;
        S0_write : OUT STD_LOGIC;
        BufferIN_re_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        BufferIN_re_ce0 : OUT STD_LOGIC;
        BufferIN_re_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        BufferIN_im_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        BufferIN_im_ce0 : OUT STD_LOGIC;
        BufferIN_im_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component fft_HW_load_nfft_value_BufferIN_re_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    BufferIN_re_U : component fft_HW_load_nfft_value_BufferIN_re_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => BufferIN_re_address0,
        ce0 => BufferIN_re_ce0,
        we0 => BufferIN_re_we0,
        d0 => grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_BufferIN_re_d0,
        q0 => BufferIN_re_q0);

    BufferIN_im_U : component fft_HW_load_nfft_value_BufferIN_re_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => BufferIN_im_address0,
        ce0 => BufferIN_im_ce0,
        we0 => BufferIN_im_we0,
        d0 => grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_BufferIN_im_d0,
        q0 => BufferIN_im_q0);

    grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106 : component fft_HW_load_nfft_value_Pipeline_VITIS_LOOP_97_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_ap_start,
        ap_done => grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_ap_done,
        ap_idle => grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_ap_idle,
        ap_ready => grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_ap_ready,
        m_axi_gmem0_AWVALID => grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_m_axi_gmem0_AWVALID,
        m_axi_gmem0_AWREADY => ap_const_logic_0,
        m_axi_gmem0_AWADDR => grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_m_axi_gmem0_AWADDR,
        m_axi_gmem0_AWID => grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_m_axi_gmem0_AWID,
        m_axi_gmem0_AWLEN => grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_m_axi_gmem0_AWLEN,
        m_axi_gmem0_AWSIZE => grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_m_axi_gmem0_AWSIZE,
        m_axi_gmem0_AWBURST => grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_m_axi_gmem0_AWBURST,
        m_axi_gmem0_AWLOCK => grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_m_axi_gmem0_AWLOCK,
        m_axi_gmem0_AWCACHE => grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_m_axi_gmem0_AWCACHE,
        m_axi_gmem0_AWPROT => grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_m_axi_gmem0_AWPROT,
        m_axi_gmem0_AWQOS => grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_m_axi_gmem0_AWQOS,
        m_axi_gmem0_AWREGION => grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_m_axi_gmem0_AWREGION,
        m_axi_gmem0_AWUSER => grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_m_axi_gmem0_AWUSER,
        m_axi_gmem0_WVALID => grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_m_axi_gmem0_WVALID,
        m_axi_gmem0_WREADY => ap_const_logic_0,
        m_axi_gmem0_WDATA => grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_m_axi_gmem0_WDATA,
        m_axi_gmem0_WSTRB => grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_m_axi_gmem0_WSTRB,
        m_axi_gmem0_WLAST => grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_m_axi_gmem0_WLAST,
        m_axi_gmem0_WID => grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_m_axi_gmem0_WID,
        m_axi_gmem0_WUSER => grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_m_axi_gmem0_WUSER,
        m_axi_gmem0_ARVALID => grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_m_axi_gmem0_ARVALID,
        m_axi_gmem0_ARREADY => m_axi_gmem0_ARREADY,
        m_axi_gmem0_ARADDR => grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_m_axi_gmem0_ARADDR,
        m_axi_gmem0_ARID => grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_m_axi_gmem0_ARID,
        m_axi_gmem0_ARLEN => grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_m_axi_gmem0_ARLEN,
        m_axi_gmem0_ARSIZE => grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_m_axi_gmem0_ARSIZE,
        m_axi_gmem0_ARBURST => grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_m_axi_gmem0_ARBURST,
        m_axi_gmem0_ARLOCK => grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_m_axi_gmem0_ARLOCK,
        m_axi_gmem0_ARCACHE => grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_m_axi_gmem0_ARCACHE,
        m_axi_gmem0_ARPROT => grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_m_axi_gmem0_ARPROT,
        m_axi_gmem0_ARQOS => grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_m_axi_gmem0_ARQOS,
        m_axi_gmem0_ARREGION => grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_m_axi_gmem0_ARREGION,
        m_axi_gmem0_ARUSER => grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_m_axi_gmem0_ARUSER,
        m_axi_gmem0_RVALID => m_axi_gmem0_RVALID,
        m_axi_gmem0_RREADY => grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_m_axi_gmem0_RREADY,
        m_axi_gmem0_RDATA => m_axi_gmem0_RDATA,
        m_axi_gmem0_RLAST => m_axi_gmem0_RLAST,
        m_axi_gmem0_RID => m_axi_gmem0_RID,
        m_axi_gmem0_RFIFONUM => m_axi_gmem0_RFIFONUM,
        m_axi_gmem0_RUSER => m_axi_gmem0_RUSER,
        m_axi_gmem0_RRESP => m_axi_gmem0_RRESP,
        m_axi_gmem0_BVALID => ap_const_logic_0,
        m_axi_gmem0_BREADY => grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_m_axi_gmem0_BREADY,
        m_axi_gmem0_BRESP => ap_const_lv2_0,
        m_axi_gmem0_BID => ap_const_lv1_0,
        m_axi_gmem0_BUSER => ap_const_lv1_0,
        BufferIN_re_address0 => grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_BufferIN_re_address0,
        BufferIN_re_ce0 => grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_BufferIN_re_ce0,
        BufferIN_re_we0 => grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_BufferIN_re_we0,
        BufferIN_re_d0 => grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_BufferIN_re_d0,
        BufferIN_im_address0 => grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_BufferIN_im_address0,
        BufferIN_im_ce0 => grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_BufferIN_im_ce0,
        BufferIN_im_we0 => grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_BufferIN_im_we0,
        BufferIN_im_d0 => grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_BufferIN_im_d0,
        counter_V => counter_V_1_reg_220,
        in_r => in_r,
        zext_ln76 => shl_ln_reg_210,
        or_ln186 => or_ln186_reg_228,
        zext_ln95 => shl_ln76_1_reg_215);

    grp_load_nfft_value_Pipeline_load_total_fu_119 : component fft_HW_load_nfft_value_Pipeline_load_total
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_load_nfft_value_Pipeline_load_total_fu_119_ap_start,
        ap_done => grp_load_nfft_value_Pipeline_load_total_fu_119_ap_done,
        ap_idle => grp_load_nfft_value_Pipeline_load_total_fu_119_ap_idle,
        ap_ready => grp_load_nfft_value_Pipeline_load_total_fu_119_ap_ready,
        S0_din => grp_load_nfft_value_Pipeline_load_total_fu_119_S0_din,
        S0_num_data_valid => ap_const_lv11_0,
        S0_fifo_cap => ap_const_lv11_0,
        S0_full_n => S0_full_n,
        S0_write => grp_load_nfft_value_Pipeline_load_total_fu_119_S0_write,
        BufferIN_re_address0 => grp_load_nfft_value_Pipeline_load_total_fu_119_BufferIN_re_address0,
        BufferIN_re_ce0 => grp_load_nfft_value_Pipeline_load_total_fu_119_BufferIN_re_ce0,
        BufferIN_re_q0 => BufferIN_re_q0,
        BufferIN_im_address0 => grp_load_nfft_value_Pipeline_load_total_fu_119_BufferIN_im_address0,
        BufferIN_im_ce0 => grp_load_nfft_value_Pipeline_load_total_fu_119_BufferIN_im_ce0,
        BufferIN_im_q0 => BufferIN_im_q0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln1027_fu_162_p2 = ap_const_lv1_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln1027_fu_162_p2 = ap_const_lv1_0))) then 
                    grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_ap_ready = ap_const_logic_1)) then 
                    grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_load_nfft_value_Pipeline_load_total_fu_119_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_load_nfft_value_Pipeline_load_total_fu_119_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                    grp_load_nfft_value_Pipeline_load_total_fu_119_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_load_nfft_value_Pipeline_load_total_fu_119_ap_ready = ap_const_logic_1)) then 
                    grp_load_nfft_value_Pipeline_load_total_fu_119_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    counter_V_fu_74_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0) or (num_c36_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                counter_V_fu_74 <= ap_const_lv32_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln1027_fu_162_p2 = ap_const_lv1_0))) then 
                counter_V_fu_74 <= add_ln840_fu_167_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                counter_V_1_reg_220 <= counter_V_fu_74;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln1027_fu_162_p2 = ap_const_lv1_0))) then
                    or_ln186_reg_228(42 downto 11) <= or_ln186_fu_181_p2(42 downto 11);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                    shl_ln76_1_reg_215(5 downto 3) <= shl_ln76_1_fu_145_p3(5 downto 3);
                    shl_ln_reg_210(5 downto 3) <= shl_ln_fu_137_p3(5 downto 3);
            end if;
        end if;
    end process;
    shl_ln_reg_210(2 downto 0) <= "000";
    shl_ln76_1_reg_215(2 downto 0) <= "000";
    or_ln186_reg_228(10 downto 0) <= "00000000001";

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, num_c36_full_n, ap_CS_fsm_state2, icmp_ln1027_fu_162_p2, grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_ap_done, grp_load_nfft_value_Pipeline_load_total_fu_119_ap_done, ap_CS_fsm_state3, ap_CS_fsm_state5)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0) or (num_c36_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln1027_fu_162_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                if (((grp_load_nfft_value_Pipeline_load_total_fu_119_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXX";
        end case;
    end process;

    BufferIN_im_address0_assign_proc : process(grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_BufferIN_im_address0, grp_load_nfft_value_Pipeline_load_total_fu_119_BufferIN_im_address0, ap_CS_fsm_state3, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            BufferIN_im_address0 <= grp_load_nfft_value_Pipeline_load_total_fu_119_BufferIN_im_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            BufferIN_im_address0 <= grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_BufferIN_im_address0;
        else 
            BufferIN_im_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    BufferIN_im_ce0_assign_proc : process(grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_BufferIN_im_ce0, grp_load_nfft_value_Pipeline_load_total_fu_119_BufferIN_im_ce0, ap_CS_fsm_state3, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            BufferIN_im_ce0 <= grp_load_nfft_value_Pipeline_load_total_fu_119_BufferIN_im_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            BufferIN_im_ce0 <= grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_BufferIN_im_ce0;
        else 
            BufferIN_im_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    BufferIN_im_we0_assign_proc : process(grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_BufferIN_im_we0, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            BufferIN_im_we0 <= grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_BufferIN_im_we0;
        else 
            BufferIN_im_we0 <= ap_const_logic_0;
        end if; 
    end process;


    BufferIN_re_address0_assign_proc : process(grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_BufferIN_re_address0, grp_load_nfft_value_Pipeline_load_total_fu_119_BufferIN_re_address0, ap_CS_fsm_state3, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            BufferIN_re_address0 <= grp_load_nfft_value_Pipeline_load_total_fu_119_BufferIN_re_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            BufferIN_re_address0 <= grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_BufferIN_re_address0;
        else 
            BufferIN_re_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    BufferIN_re_ce0_assign_proc : process(grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_BufferIN_re_ce0, grp_load_nfft_value_Pipeline_load_total_fu_119_BufferIN_re_ce0, ap_CS_fsm_state3, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            BufferIN_re_ce0 <= grp_load_nfft_value_Pipeline_load_total_fu_119_BufferIN_re_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            BufferIN_re_ce0 <= grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_BufferIN_re_ce0;
        else 
            BufferIN_re_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    BufferIN_re_we0_assign_proc : process(grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_BufferIN_re_we0, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            BufferIN_re_we0 <= grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_BufferIN_re_we0;
        else 
            BufferIN_re_we0 <= ap_const_logic_0;
        end if; 
    end process;

    S0_din <= grp_load_nfft_value_Pipeline_load_total_fu_119_S0_din;

    S0_write_assign_proc : process(grp_load_nfft_value_Pipeline_load_total_fu_119_S0_write, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            S0_write <= grp_load_nfft_value_Pipeline_load_total_fu_119_S0_write;
        else 
            S0_write <= ap_const_logic_0;
        end if; 
    end process;

    add_ln840_fu_167_p2 <= std_logic_vector(unsigned(counter_V_fu_74) + unsigned(ap_const_lv32_1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);

    ap_ST_fsm_state1_blk_assign_proc : process(real_start, ap_done_reg, num_c36_full_n)
    begin
        if (((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0) or (num_c36_full_n = ap_const_logic_0))) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;

    ap_ST_fsm_state3_blk_assign_proc : process(grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_ap_done)
    begin
        if ((grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state4_blk <= ap_const_logic_0;

    ap_ST_fsm_state5_blk_assign_proc : process(grp_load_nfft_value_Pipeline_load_total_fu_119_ap_done)
    begin
        if ((grp_load_nfft_value_Pipeline_load_total_fu_119_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state5_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state5_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg, num_c36_full_n)
    begin
                ap_block_state1 <= ((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0) or (num_c36_full_n = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state2, icmp_ln1027_fu_162_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln1027_fu_162_p2 = ap_const_lv1_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (real_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_ready <= internal_ap_ready;
    grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_ap_start <= grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_ap_start_reg;
    grp_load_nfft_value_Pipeline_load_total_fu_119_ap_start <= grp_load_nfft_value_Pipeline_load_total_fu_119_ap_start_reg;
    icmp_ln1027_fu_162_p2 <= "1" when (counter_V_fu_74 = numFFT) else "0";

    internal_ap_ready_assign_proc : process(ap_CS_fsm_state2, icmp_ln1027_fu_162_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln1027_fu_162_p2 = ap_const_lv1_1))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem0_ARADDR <= grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_m_axi_gmem0_ARADDR;
    m_axi_gmem0_ARBURST <= grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_m_axi_gmem0_ARBURST;
    m_axi_gmem0_ARCACHE <= grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_m_axi_gmem0_ARCACHE;
    m_axi_gmem0_ARID <= grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_m_axi_gmem0_ARID;
    m_axi_gmem0_ARLEN <= grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_m_axi_gmem0_ARLEN;
    m_axi_gmem0_ARLOCK <= grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_m_axi_gmem0_ARLOCK;
    m_axi_gmem0_ARPROT <= grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_m_axi_gmem0_ARPROT;
    m_axi_gmem0_ARQOS <= grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_m_axi_gmem0_ARQOS;
    m_axi_gmem0_ARREGION <= grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_m_axi_gmem0_ARREGION;
    m_axi_gmem0_ARSIZE <= grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_m_axi_gmem0_ARSIZE;
    m_axi_gmem0_ARUSER <= grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_m_axi_gmem0_ARUSER;

    m_axi_gmem0_ARVALID_assign_proc : process(ap_CS_fsm_state2, icmp_ln1027_fu_162_p2, grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_m_axi_gmem0_ARVALID, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln1027_fu_162_p2 = ap_const_lv1_0)))) then 
            m_axi_gmem0_ARVALID <= grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_m_axi_gmem0_ARVALID;
        else 
            m_axi_gmem0_ARVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem0_AWADDR <= ap_const_lv64_0;
    m_axi_gmem0_AWBURST <= ap_const_lv2_0;
    m_axi_gmem0_AWCACHE <= ap_const_lv4_0;
    m_axi_gmem0_AWID <= ap_const_lv1_0;
    m_axi_gmem0_AWLEN <= ap_const_lv32_0;
    m_axi_gmem0_AWLOCK <= ap_const_lv2_0;
    m_axi_gmem0_AWPROT <= ap_const_lv3_0;
    m_axi_gmem0_AWQOS <= ap_const_lv4_0;
    m_axi_gmem0_AWREGION <= ap_const_lv4_0;
    m_axi_gmem0_AWSIZE <= ap_const_lv3_0;
    m_axi_gmem0_AWUSER <= ap_const_lv1_0;
    m_axi_gmem0_AWVALID <= ap_const_logic_0;
    m_axi_gmem0_BREADY <= ap_const_logic_0;

    m_axi_gmem0_RREADY_assign_proc : process(ap_CS_fsm_state2, icmp_ln1027_fu_162_p2, grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_m_axi_gmem0_RREADY, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln1027_fu_162_p2 = ap_const_lv1_0)))) then 
            m_axi_gmem0_RREADY <= grp_load_nfft_value_Pipeline_VITIS_LOOP_97_1_fu_106_m_axi_gmem0_RREADY;
        else 
            m_axi_gmem0_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem0_WDATA <= ap_const_lv64_0;
    m_axi_gmem0_WID <= ap_const_lv1_0;
    m_axi_gmem0_WLAST <= ap_const_logic_0;
    m_axi_gmem0_WSTRB <= ap_const_lv8_0;
    m_axi_gmem0_WUSER <= ap_const_lv1_0;
    m_axi_gmem0_WVALID <= ap_const_logic_0;

    num_c36_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, num_c36_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            num_c36_blk_n <= num_c36_full_n;
        else 
            num_c36_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    num_c36_din <= numFFT;

    num_c36_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, num_c36_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0) or (num_c36_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            num_c36_write <= ap_const_logic_1;
        else 
            num_c36_write <= ap_const_logic_0;
        end if; 
    end process;

    or_ln186_fu_181_p2 <= (shl_ln1_fu_173_p3 or ap_const_lv43_1);

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    shl_ln1_fu_173_p3 <= (counter_V_fu_74 & ap_const_lv11_0);
    shl_ln76_1_fu_145_p3 <= (xor_ln95_fu_131_p2 & ap_const_lv3_0);
    shl_ln_fu_137_p3 <= (trunc_ln95_fu_127_p1 & ap_const_lv3_0);
    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    trunc_ln95_fu_127_p1 <= in_r(3 - 1 downto 0);
    xor_ln95_fu_131_p2 <= (trunc_ln95_fu_127_p1 xor ap_const_lv3_4);
end behav;
