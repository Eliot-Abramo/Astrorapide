-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity fft_HW_retrieve_nfft_value is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    S10_dout : IN STD_LOGIC_VECTOR (63 downto 0);
    S10_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
    S10_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
    S10_empty_n : IN STD_LOGIC;
    S10_read : OUT STD_LOGIC;
    m_axi_gmem0_AWVALID : OUT STD_LOGIC;
    m_axi_gmem0_AWREADY : IN STD_LOGIC;
    m_axi_gmem0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_WVALID : OUT STD_LOGIC;
    m_axi_gmem0_WREADY : IN STD_LOGIC;
    m_axi_gmem0_WDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem0_WSTRB : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem0_WLAST : OUT STD_LOGIC;
    m_axi_gmem0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_ARVALID : OUT STD_LOGIC;
    m_axi_gmem0_ARREADY : IN STD_LOGIC;
    m_axi_gmem0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_RVALID : IN STD_LOGIC;
    m_axi_gmem0_RREADY : OUT STD_LOGIC;
    m_axi_gmem0_RDATA : IN STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem0_RLAST : IN STD_LOGIC;
    m_axi_gmem0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_RFIFONUM : IN STD_LOGIC_VECTOR (9 downto 0);
    m_axi_gmem0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_BVALID : IN STD_LOGIC;
    m_axi_gmem0_BREADY : OUT STD_LOGIC;
    m_axi_gmem0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    out_r_dout : IN STD_LOGIC_VECTOR (63 downto 0);
    out_r_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
    out_r_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
    out_r_empty_n : IN STD_LOGIC;
    out_r_read : OUT STD_LOGIC;
    numFFT_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    numFFT_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    numFFT_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    numFFT_empty_n : IN STD_LOGIC;
    numFFT_read : OUT STD_LOGIC );
end;


architecture behav of fft_HW_retrieve_nfft_value is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv8_F : STD_LOGIC_VECTOR (7 downto 0) := "00001111";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal out_r_blk_n : STD_LOGIC;
    signal numFFT_blk_n : STD_LOGIC;
    signal numFFT_read_reg_140 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_read_reg_145 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln1419_fu_86_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln1419_reg_150 : STD_LOGIC_VECTOR (2 downto 0);
    signal xor_ln1419_fu_90_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal xor_ln1419_reg_155 : STD_LOGIC_VECTOR (2 downto 0);
    signal shl_ln877_fu_100_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln877_reg_160 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln877_2_fu_110_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln877_2_reg_165 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln877_1_fu_116_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal shl_ln877_1_reg_170 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal shl_ln877_3_fu_124_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal shl_ln877_3_reg_175 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_2_fu_132_p3 : STD_LOGIC_VECTOR (41 downto 0);
    signal tmp_2_reg_180 : STD_LOGIC_VECTOR (41 downto 0);
    signal grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_ap_start : STD_LOGIC;
    signal grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_ap_done : STD_LOGIC;
    signal grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_ap_idle : STD_LOGIC;
    signal grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_ap_ready : STD_LOGIC;
    signal grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_m_axi_gmem0_AWVALID : STD_LOGIC;
    signal grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_m_axi_gmem0_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_m_axi_gmem0_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_m_axi_gmem0_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_m_axi_gmem0_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_m_axi_gmem0_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_m_axi_gmem0_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_m_axi_gmem0_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_m_axi_gmem0_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_m_axi_gmem0_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_m_axi_gmem0_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_m_axi_gmem0_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_m_axi_gmem0_WVALID : STD_LOGIC;
    signal grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_m_axi_gmem0_WDATA : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_m_axi_gmem0_WSTRB : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_m_axi_gmem0_WLAST : STD_LOGIC;
    signal grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_m_axi_gmem0_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_m_axi_gmem0_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_m_axi_gmem0_ARVALID : STD_LOGIC;
    signal grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_m_axi_gmem0_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_m_axi_gmem0_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_m_axi_gmem0_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_m_axi_gmem0_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_m_axi_gmem0_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_m_axi_gmem0_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_m_axi_gmem0_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_m_axi_gmem0_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_m_axi_gmem0_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_m_axi_gmem0_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_m_axi_gmem0_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_m_axi_gmem0_RREADY : STD_LOGIC;
    signal grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_m_axi_gmem0_BREADY : STD_LOGIC;
    signal grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_S10_read : STD_LOGIC;
    signal grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_block_state1 : BOOLEAN;
    signal zext_ln877_fu_96_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln877_2_fu_106_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component fft_HW_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_gmem0_AWVALID : OUT STD_LOGIC;
        m_axi_gmem0_AWREADY : IN STD_LOGIC;
        m_axi_gmem0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_WVALID : OUT STD_LOGIC;
        m_axi_gmem0_WREADY : IN STD_LOGIC;
        m_axi_gmem0_WDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_WSTRB : OUT STD_LOGIC_VECTOR (7 downto 0);
        m_axi_gmem0_WLAST : OUT STD_LOGIC;
        m_axi_gmem0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_ARVALID : OUT STD_LOGIC;
        m_axi_gmem0_ARREADY : IN STD_LOGIC;
        m_axi_gmem0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RVALID : IN STD_LOGIC;
        m_axi_gmem0_RREADY : OUT STD_LOGIC;
        m_axi_gmem0_RDATA : IN STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem0_RLAST : IN STD_LOGIC;
        m_axi_gmem0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RFIFONUM : IN STD_LOGIC_VECTOR (9 downto 0);
        m_axi_gmem0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_BVALID : IN STD_LOGIC;
        m_axi_gmem0_BREADY : OUT STD_LOGIC;
        m_axi_gmem0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        bound : IN STD_LOGIC_VECTOR (41 downto 0);
        S10_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        S10_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
        S10_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
        S10_empty_n : IN STD_LOGIC;
        S10_read : OUT STD_LOGIC;
        out_load : IN STD_LOGIC_VECTOR (63 downto 0);
        zext_ln877_1 : IN STD_LOGIC_VECTOR (5 downto 0);
        shl_ln877 : IN STD_LOGIC_VECTOR (7 downto 0);
        zext_ln1419 : IN STD_LOGIC_VECTOR (5 downto 0);
        shl_ln877_2 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72 : component fft_HW_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_ap_start,
        ap_done => grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_ap_done,
        ap_idle => grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_ap_idle,
        ap_ready => grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_ap_ready,
        m_axi_gmem0_AWVALID => grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_m_axi_gmem0_AWVALID,
        m_axi_gmem0_AWREADY => m_axi_gmem0_AWREADY,
        m_axi_gmem0_AWADDR => grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_m_axi_gmem0_AWADDR,
        m_axi_gmem0_AWID => grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_m_axi_gmem0_AWID,
        m_axi_gmem0_AWLEN => grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_m_axi_gmem0_AWLEN,
        m_axi_gmem0_AWSIZE => grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_m_axi_gmem0_AWSIZE,
        m_axi_gmem0_AWBURST => grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_m_axi_gmem0_AWBURST,
        m_axi_gmem0_AWLOCK => grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_m_axi_gmem0_AWLOCK,
        m_axi_gmem0_AWCACHE => grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_m_axi_gmem0_AWCACHE,
        m_axi_gmem0_AWPROT => grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_m_axi_gmem0_AWPROT,
        m_axi_gmem0_AWQOS => grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_m_axi_gmem0_AWQOS,
        m_axi_gmem0_AWREGION => grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_m_axi_gmem0_AWREGION,
        m_axi_gmem0_AWUSER => grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_m_axi_gmem0_AWUSER,
        m_axi_gmem0_WVALID => grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_m_axi_gmem0_WVALID,
        m_axi_gmem0_WREADY => m_axi_gmem0_WREADY,
        m_axi_gmem0_WDATA => grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_m_axi_gmem0_WDATA,
        m_axi_gmem0_WSTRB => grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_m_axi_gmem0_WSTRB,
        m_axi_gmem0_WLAST => grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_m_axi_gmem0_WLAST,
        m_axi_gmem0_WID => grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_m_axi_gmem0_WID,
        m_axi_gmem0_WUSER => grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_m_axi_gmem0_WUSER,
        m_axi_gmem0_ARVALID => grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_m_axi_gmem0_ARVALID,
        m_axi_gmem0_ARREADY => ap_const_logic_0,
        m_axi_gmem0_ARADDR => grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_m_axi_gmem0_ARADDR,
        m_axi_gmem0_ARID => grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_m_axi_gmem0_ARID,
        m_axi_gmem0_ARLEN => grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_m_axi_gmem0_ARLEN,
        m_axi_gmem0_ARSIZE => grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_m_axi_gmem0_ARSIZE,
        m_axi_gmem0_ARBURST => grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_m_axi_gmem0_ARBURST,
        m_axi_gmem0_ARLOCK => grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_m_axi_gmem0_ARLOCK,
        m_axi_gmem0_ARCACHE => grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_m_axi_gmem0_ARCACHE,
        m_axi_gmem0_ARPROT => grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_m_axi_gmem0_ARPROT,
        m_axi_gmem0_ARQOS => grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_m_axi_gmem0_ARQOS,
        m_axi_gmem0_ARREGION => grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_m_axi_gmem0_ARREGION,
        m_axi_gmem0_ARUSER => grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_m_axi_gmem0_ARUSER,
        m_axi_gmem0_RVALID => ap_const_logic_0,
        m_axi_gmem0_RREADY => grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_m_axi_gmem0_RREADY,
        m_axi_gmem0_RDATA => ap_const_lv64_0,
        m_axi_gmem0_RLAST => ap_const_logic_0,
        m_axi_gmem0_RID => ap_const_lv1_0,
        m_axi_gmem0_RFIFONUM => ap_const_lv10_0,
        m_axi_gmem0_RUSER => ap_const_lv1_0,
        m_axi_gmem0_RRESP => ap_const_lv2_0,
        m_axi_gmem0_BVALID => m_axi_gmem0_BVALID,
        m_axi_gmem0_BREADY => grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_m_axi_gmem0_BREADY,
        m_axi_gmem0_BRESP => m_axi_gmem0_BRESP,
        m_axi_gmem0_BID => m_axi_gmem0_BID,
        m_axi_gmem0_BUSER => m_axi_gmem0_BUSER,
        bound => tmp_2_reg_180,
        S10_dout => S10_dout,
        S10_num_data_valid => ap_const_lv11_0,
        S10_fifo_cap => ap_const_lv11_0,
        S10_empty_n => S10_empty_n,
        S10_read => grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_S10_read,
        out_load => out_read_reg_145,
        zext_ln877_1 => shl_ln877_1_reg_170,
        shl_ln877 => shl_ln877_reg_160,
        zext_ln1419 => shl_ln877_3_reg_175,
        shl_ln877_2 => shl_ln877_2_reg_165);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_ap_done = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_ap_ready = ap_const_logic_1)) then 
                    grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                numFFT_read_reg_140 <= numFFT_dout;
                out_read_reg_145 <= out_r_dout;
                shl_ln877_2_reg_165 <= shl_ln877_2_fu_110_p2;
                shl_ln877_reg_160 <= shl_ln877_fu_100_p2;
                trunc_ln1419_reg_150 <= trunc_ln1419_fu_86_p1;
                xor_ln1419_reg_155 <= xor_ln1419_fu_90_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                    shl_ln877_1_reg_170(5 downto 3) <= shl_ln877_1_fu_116_p3(5 downto 3);
                    shl_ln877_3_reg_175(5 downto 3) <= shl_ln877_3_fu_124_p3(5 downto 3);
                    tmp_2_reg_180(41 downto 10) <= tmp_2_fu_132_p3(41 downto 10);
            end if;
        end if;
    end process;
    shl_ln877_1_reg_170(2 downto 0) <= "000";
    shl_ln877_3_reg_175(2 downto 0) <= "000";
    tmp_2_reg_180(9 downto 0) <= "0000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, out_r_empty_n, numFFT_empty_n, grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_ap_done, ap_CS_fsm_state3)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((numFFT_empty_n = ap_const_logic_0) or (out_r_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;

    S10_read_assign_proc : process(grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_S10_read, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            S10_read <= grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_S10_read;
        else 
            S10_read <= ap_const_logic_0;
        end if; 
    end process;

    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start, ap_done_reg, out_r_empty_n, numFFT_empty_n)
    begin
        if (((numFFT_empty_n = ap_const_logic_0) or (out_r_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;

    ap_ST_fsm_state3_blk_assign_proc : process(grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_ap_done)
    begin
        if ((grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg, out_r_empty_n, numFFT_empty_n)
    begin
                ap_block_state1 <= ((numFFT_empty_n = ap_const_logic_0) or (out_r_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_done_assign_proc : process(ap_done_reg, grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_ap_done, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) and (grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_ap_done = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_ap_done, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) and (grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_ap_done = ap_const_logic_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_ap_start <= grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_ap_start_reg;
    m_axi_gmem0_ARADDR <= ap_const_lv64_0;
    m_axi_gmem0_ARBURST <= ap_const_lv2_0;
    m_axi_gmem0_ARCACHE <= ap_const_lv4_0;
    m_axi_gmem0_ARID <= ap_const_lv1_0;
    m_axi_gmem0_ARLEN <= ap_const_lv32_0;
    m_axi_gmem0_ARLOCK <= ap_const_lv2_0;
    m_axi_gmem0_ARPROT <= ap_const_lv3_0;
    m_axi_gmem0_ARQOS <= ap_const_lv4_0;
    m_axi_gmem0_ARREGION <= ap_const_lv4_0;
    m_axi_gmem0_ARSIZE <= ap_const_lv3_0;
    m_axi_gmem0_ARUSER <= ap_const_lv1_0;
    m_axi_gmem0_ARVALID <= ap_const_logic_0;
    m_axi_gmem0_AWADDR <= grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_m_axi_gmem0_AWADDR;
    m_axi_gmem0_AWBURST <= grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_m_axi_gmem0_AWBURST;
    m_axi_gmem0_AWCACHE <= grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_m_axi_gmem0_AWCACHE;
    m_axi_gmem0_AWID <= grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_m_axi_gmem0_AWID;
    m_axi_gmem0_AWLEN <= grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_m_axi_gmem0_AWLEN;
    m_axi_gmem0_AWLOCK <= grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_m_axi_gmem0_AWLOCK;
    m_axi_gmem0_AWPROT <= grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_m_axi_gmem0_AWPROT;
    m_axi_gmem0_AWQOS <= grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_m_axi_gmem0_AWQOS;
    m_axi_gmem0_AWREGION <= grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_m_axi_gmem0_AWREGION;
    m_axi_gmem0_AWSIZE <= grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_m_axi_gmem0_AWSIZE;
    m_axi_gmem0_AWUSER <= grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_m_axi_gmem0_AWUSER;

    m_axi_gmem0_AWVALID_assign_proc : process(ap_CS_fsm_state2, grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_m_axi_gmem0_AWVALID, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            m_axi_gmem0_AWVALID <= grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_m_axi_gmem0_AWVALID;
        else 
            m_axi_gmem0_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    m_axi_gmem0_BREADY_assign_proc : process(ap_CS_fsm_state2, grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_m_axi_gmem0_BREADY, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            m_axi_gmem0_BREADY <= grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_m_axi_gmem0_BREADY;
        else 
            m_axi_gmem0_BREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem0_RREADY <= ap_const_logic_0;
    m_axi_gmem0_WDATA <= grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_m_axi_gmem0_WDATA;
    m_axi_gmem0_WID <= grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_m_axi_gmem0_WID;
    m_axi_gmem0_WLAST <= grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_m_axi_gmem0_WLAST;
    m_axi_gmem0_WSTRB <= grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_m_axi_gmem0_WSTRB;
    m_axi_gmem0_WUSER <= grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_m_axi_gmem0_WUSER;

    m_axi_gmem0_WVALID_assign_proc : process(ap_CS_fsm_state2, grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_m_axi_gmem0_WVALID, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            m_axi_gmem0_WVALID <= grp_retrieve_nfft_value_Pipeline_retrieve_counter_retrieve_total_fu_72_m_axi_gmem0_WVALID;
        else 
            m_axi_gmem0_WVALID <= ap_const_logic_0;
        end if; 
    end process;


    numFFT_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, numFFT_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            numFFT_blk_n <= numFFT_empty_n;
        else 
            numFFT_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    numFFT_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, out_r_empty_n, numFFT_empty_n)
    begin
        if ((not(((numFFT_empty_n = ap_const_logic_0) or (out_r_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            numFFT_read <= ap_const_logic_1;
        else 
            numFFT_read <= ap_const_logic_0;
        end if; 
    end process;


    out_r_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, out_r_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            out_r_blk_n <= out_r_empty_n;
        else 
            out_r_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    out_r_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, out_r_empty_n, numFFT_empty_n)
    begin
        if ((not(((numFFT_empty_n = ap_const_logic_0) or (out_r_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            out_r_read <= ap_const_logic_1;
        else 
            out_r_read <= ap_const_logic_0;
        end if; 
    end process;

    shl_ln877_1_fu_116_p3 <= (trunc_ln1419_reg_150 & ap_const_lv3_0);
    shl_ln877_2_fu_110_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv8_F),to_integer(unsigned('0' & zext_ln877_2_fu_106_p1(8-1 downto 0)))));
    shl_ln877_3_fu_124_p3 <= (xor_ln1419_reg_155 & ap_const_lv3_0);
    shl_ln877_fu_100_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv8_F),to_integer(unsigned('0' & zext_ln877_fu_96_p1(8-1 downto 0)))));
    tmp_2_fu_132_p3 <= (numFFT_read_reg_140 & ap_const_lv10_0);
    trunc_ln1419_fu_86_p1 <= out_r_dout(3 - 1 downto 0);
    xor_ln1419_fu_90_p2 <= (trunc_ln1419_fu_86_p1 xor ap_const_lv3_4);
    zext_ln877_2_fu_106_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xor_ln1419_fu_90_p2),8));
    zext_ln877_fu_96_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln1419_fu_86_p1),8));
end behav;
