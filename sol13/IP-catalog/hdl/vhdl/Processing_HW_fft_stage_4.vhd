-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Processing_HW_fft_stage_4 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    S3_dout : IN STD_LOGIC_VECTOR (63 downto 0);
    S3_num_data_valid : IN STD_LOGIC_VECTOR (11 downto 0);
    S3_fifo_cap : IN STD_LOGIC_VECTOR (11 downto 0);
    S3_empty_n : IN STD_LOGIC;
    S3_read : OUT STD_LOGIC;
    S4_din : OUT STD_LOGIC_VECTOR (63 downto 0);
    S4_num_data_valid : IN STD_LOGIC_VECTOR (11 downto 0);
    S4_fifo_cap : IN STD_LOGIC_VECTOR (11 downto 0);
    S4_full_n : IN STD_LOGIC;
    S4_write : OUT STD_LOGIC;
    numFFT_dout : IN STD_LOGIC_VECTOR (9 downto 0);
    numFFT_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    numFFT_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    numFFT_empty_n : IN STD_LOGIC;
    numFFT_read : OUT STD_LOGIC;
    num_c39_din : OUT STD_LOGIC_VECTOR (9 downto 0);
    num_c39_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    num_c39_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    num_c39_full_n : IN STD_LOGIC;
    num_c39_write : OUT STD_LOGIC );
end;


architecture behav of Processing_HW_fft_stage_4 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (8 downto 0) := "000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (8 downto 0) := "000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (8 downto 0) := "000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (8 downto 0) := "000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (8 downto 0) := "000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (8 downto 0) := "001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (8 downto 0) := "010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv18_0 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000000";
    constant ap_const_lv11_7FD : STD_LOGIC_VECTOR (10 downto 0) := "11111111101";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv18_1 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";

attribute shreg_extract : string;
    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal numFFT_blk_n : STD_LOGIC;
    signal num_c39_blk_n : STD_LOGIC;
    signal tmp_fu_144_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_reg_183 : STD_LOGIC_VECTOR (17 downto 0);
    signal In_re_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal In_re_V_ce0 : STD_LOGIC;
    signal In_re_V_we0 : STD_LOGIC;
    signal In_re_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal In_re_V_ce1 : STD_LOGIC;
    signal In_re_V_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal In_im_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal In_im_V_ce0 : STD_LOGIC;
    signal In_im_V_we0 : STD_LOGIC;
    signal In_im_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal In_im_V_ce1 : STD_LOGIC;
    signal In_im_V_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal OutBuff_re_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal OutBuff_re_V_ce0 : STD_LOGIC;
    signal OutBuff_re_V_we0 : STD_LOGIC;
    signal OutBuff_re_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal OutBuff_im_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal OutBuff_im_V_ce0 : STD_LOGIC;
    signal OutBuff_im_V_we0 : STD_LOGIC;
    signal OutBuff_im_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fft_stage_4_Pipeline_stage_4_0_fu_104_ap_start : STD_LOGIC;
    signal grp_fft_stage_4_Pipeline_stage_4_0_fu_104_ap_done : STD_LOGIC;
    signal grp_fft_stage_4_Pipeline_stage_4_0_fu_104_ap_idle : STD_LOGIC;
    signal grp_fft_stage_4_Pipeline_stage_4_0_fu_104_ap_ready : STD_LOGIC;
    signal grp_fft_stage_4_Pipeline_stage_4_0_fu_104_S3_read : STD_LOGIC;
    signal grp_fft_stage_4_Pipeline_stage_4_0_fu_104_In_re_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fft_stage_4_Pipeline_stage_4_0_fu_104_In_re_V_ce0 : STD_LOGIC;
    signal grp_fft_stage_4_Pipeline_stage_4_0_fu_104_In_re_V_we0 : STD_LOGIC;
    signal grp_fft_stage_4_Pipeline_stage_4_0_fu_104_In_re_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fft_stage_4_Pipeline_stage_4_0_fu_104_In_im_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fft_stage_4_Pipeline_stage_4_0_fu_104_In_im_V_ce0 : STD_LOGIC;
    signal grp_fft_stage_4_Pipeline_stage_4_0_fu_104_In_im_V_we0 : STD_LOGIC;
    signal grp_fft_stage_4_Pipeline_stage_4_0_fu_104_In_im_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fft_stage_4_Pipeline_stage_4_1_fu_112_ap_start : STD_LOGIC;
    signal grp_fft_stage_4_Pipeline_stage_4_1_fu_112_ap_done : STD_LOGIC;
    signal grp_fft_stage_4_Pipeline_stage_4_1_fu_112_ap_idle : STD_LOGIC;
    signal grp_fft_stage_4_Pipeline_stage_4_1_fu_112_ap_ready : STD_LOGIC;
    signal grp_fft_stage_4_Pipeline_stage_4_1_fu_112_In_re_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fft_stage_4_Pipeline_stage_4_1_fu_112_In_re_V_ce0 : STD_LOGIC;
    signal grp_fft_stage_4_Pipeline_stage_4_1_fu_112_In_re_V_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fft_stage_4_Pipeline_stage_4_1_fu_112_In_re_V_ce1 : STD_LOGIC;
    signal grp_fft_stage_4_Pipeline_stage_4_1_fu_112_In_im_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fft_stage_4_Pipeline_stage_4_1_fu_112_In_im_V_ce0 : STD_LOGIC;
    signal grp_fft_stage_4_Pipeline_stage_4_1_fu_112_In_im_V_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fft_stage_4_Pipeline_stage_4_1_fu_112_In_im_V_ce1 : STD_LOGIC;
    signal grp_fft_stage_4_Pipeline_stage_4_1_fu_112_S4_din : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft_stage_4_Pipeline_stage_4_1_fu_112_S4_write : STD_LOGIC;
    signal grp_fft_stage_4_Pipeline_stage_4_1_fu_112_OutBuff_re_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fft_stage_4_Pipeline_stage_4_1_fu_112_OutBuff_re_V_ce0 : STD_LOGIC;
    signal grp_fft_stage_4_Pipeline_stage_4_1_fu_112_OutBuff_re_V_we0 : STD_LOGIC;
    signal grp_fft_stage_4_Pipeline_stage_4_1_fu_112_OutBuff_re_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fft_stage_4_Pipeline_stage_4_1_fu_112_OutBuff_im_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fft_stage_4_Pipeline_stage_4_1_fu_112_OutBuff_im_V_ce0 : STD_LOGIC;
    signal grp_fft_stage_4_Pipeline_stage_4_1_fu_112_OutBuff_im_V_we0 : STD_LOGIC;
    signal grp_fft_stage_4_Pipeline_stage_4_1_fu_112_OutBuff_im_V_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fft_stage_4_Pipeline_stage_4_2_fu_126_ap_start : STD_LOGIC;
    signal grp_fft_stage_4_Pipeline_stage_4_2_fu_126_ap_done : STD_LOGIC;
    signal grp_fft_stage_4_Pipeline_stage_4_2_fu_126_ap_idle : STD_LOGIC;
    signal grp_fft_stage_4_Pipeline_stage_4_2_fu_126_ap_ready : STD_LOGIC;
    signal grp_fft_stage_4_Pipeline_stage_4_2_fu_126_S4_din : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fft_stage_4_Pipeline_stage_4_2_fu_126_S4_write : STD_LOGIC;
    signal grp_fft_stage_4_Pipeline_stage_4_2_fu_126_OutBuff_re_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fft_stage_4_Pipeline_stage_4_2_fu_126_OutBuff_re_V_ce0 : STD_LOGIC;
    signal grp_fft_stage_4_Pipeline_stage_4_2_fu_126_OutBuff_im_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fft_stage_4_Pipeline_stage_4_2_fu_126_OutBuff_im_V_ce0 : STD_LOGIC;
    signal grp_fft_stage_4_Pipeline_stage_4_0_fu_104_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal icmp_ln1027_fu_160_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal grp_fft_stage_4_Pipeline_stage_4_1_fu_112_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal grp_fft_stage_4_Pipeline_stage_4_2_fu_126_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal indvar_flatten_fu_70 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln1027_fu_165_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal numFFT_cast1_fu_134_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_i_i_fu_138_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component Processing_HW_fft_stage_4_Pipeline_stage_4_0 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        S3_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        S3_num_data_valid : IN STD_LOGIC_VECTOR (11 downto 0);
        S3_fifo_cap : IN STD_LOGIC_VECTOR (11 downto 0);
        S3_empty_n : IN STD_LOGIC;
        S3_read : OUT STD_LOGIC;
        In_re_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        In_re_V_ce0 : OUT STD_LOGIC;
        In_re_V_we0 : OUT STD_LOGIC;
        In_re_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        In_im_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        In_im_V_ce0 : OUT STD_LOGIC;
        In_im_V_we0 : OUT STD_LOGIC;
        In_im_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Processing_HW_fft_stage_4_Pipeline_stage_4_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        In_re_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        In_re_V_ce0 : OUT STD_LOGIC;
        In_re_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        In_re_V_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        In_re_V_ce1 : OUT STD_LOGIC;
        In_re_V_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        In_im_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        In_im_V_ce0 : OUT STD_LOGIC;
        In_im_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        In_im_V_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        In_im_V_ce1 : OUT STD_LOGIC;
        In_im_V_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        S4_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        S4_num_data_valid : IN STD_LOGIC_VECTOR (11 downto 0);
        S4_fifo_cap : IN STD_LOGIC_VECTOR (11 downto 0);
        S4_full_n : IN STD_LOGIC;
        S4_write : OUT STD_LOGIC;
        OutBuff_re_V_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        OutBuff_re_V_ce0 : OUT STD_LOGIC;
        OutBuff_re_V_we0 : OUT STD_LOGIC;
        OutBuff_re_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        OutBuff_im_V_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        OutBuff_im_V_ce0 : OUT STD_LOGIC;
        OutBuff_im_V_we0 : OUT STD_LOGIC;
        OutBuff_im_V_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Processing_HW_fft_stage_4_Pipeline_stage_4_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        S4_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        S4_num_data_valid : IN STD_LOGIC_VECTOR (11 downto 0);
        S4_fifo_cap : IN STD_LOGIC_VECTOR (11 downto 0);
        S4_full_n : IN STD_LOGIC;
        S4_write : OUT STD_LOGIC;
        OutBuff_re_V_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        OutBuff_re_V_ce0 : OUT STD_LOGIC;
        OutBuff_re_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        OutBuff_im_V_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        OutBuff_im_V_ce0 : OUT STD_LOGIC;
        OutBuff_im_V_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Processing_HW_fft_stage_4_In_re_V_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Processing_HW_fft_stage_4_OutBuff_re_V_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    In_re_V_U : component Processing_HW_fft_stage_4_In_re_V_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => In_re_V_address0,
        ce0 => In_re_V_ce0,
        we0 => In_re_V_we0,
        d0 => grp_fft_stage_4_Pipeline_stage_4_0_fu_104_In_re_V_d0,
        q0 => In_re_V_q0,
        address1 => grp_fft_stage_4_Pipeline_stage_4_1_fu_112_In_re_V_address1,
        ce1 => In_re_V_ce1,
        q1 => In_re_V_q1);

    In_im_V_U : component Processing_HW_fft_stage_4_In_re_V_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => In_im_V_address0,
        ce0 => In_im_V_ce0,
        we0 => In_im_V_we0,
        d0 => grp_fft_stage_4_Pipeline_stage_4_0_fu_104_In_im_V_d0,
        q0 => In_im_V_q0,
        address1 => grp_fft_stage_4_Pipeline_stage_4_1_fu_112_In_im_V_address1,
        ce1 => In_im_V_ce1,
        q1 => In_im_V_q1);

    OutBuff_re_V_U : component Processing_HW_fft_stage_4_OutBuff_re_V_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => OutBuff_re_V_address0,
        ce0 => OutBuff_re_V_ce0,
        we0 => OutBuff_re_V_we0,
        d0 => grp_fft_stage_4_Pipeline_stage_4_1_fu_112_OutBuff_re_V_d0,
        q0 => OutBuff_re_V_q0);

    OutBuff_im_V_U : component Processing_HW_fft_stage_4_OutBuff_re_V_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => OutBuff_im_V_address0,
        ce0 => OutBuff_im_V_ce0,
        we0 => OutBuff_im_V_we0,
        d0 => grp_fft_stage_4_Pipeline_stage_4_1_fu_112_OutBuff_im_V_d0,
        q0 => OutBuff_im_V_q0);

    grp_fft_stage_4_Pipeline_stage_4_0_fu_104 : component Processing_HW_fft_stage_4_Pipeline_stage_4_0
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_fft_stage_4_Pipeline_stage_4_0_fu_104_ap_start,
        ap_done => grp_fft_stage_4_Pipeline_stage_4_0_fu_104_ap_done,
        ap_idle => grp_fft_stage_4_Pipeline_stage_4_0_fu_104_ap_idle,
        ap_ready => grp_fft_stage_4_Pipeline_stage_4_0_fu_104_ap_ready,
        S3_dout => S3_dout,
        S3_num_data_valid => ap_const_lv12_0,
        S3_fifo_cap => ap_const_lv12_0,
        S3_empty_n => S3_empty_n,
        S3_read => grp_fft_stage_4_Pipeline_stage_4_0_fu_104_S3_read,
        In_re_V_address0 => grp_fft_stage_4_Pipeline_stage_4_0_fu_104_In_re_V_address0,
        In_re_V_ce0 => grp_fft_stage_4_Pipeline_stage_4_0_fu_104_In_re_V_ce0,
        In_re_V_we0 => grp_fft_stage_4_Pipeline_stage_4_0_fu_104_In_re_V_we0,
        In_re_V_d0 => grp_fft_stage_4_Pipeline_stage_4_0_fu_104_In_re_V_d0,
        In_im_V_address0 => grp_fft_stage_4_Pipeline_stage_4_0_fu_104_In_im_V_address0,
        In_im_V_ce0 => grp_fft_stage_4_Pipeline_stage_4_0_fu_104_In_im_V_ce0,
        In_im_V_we0 => grp_fft_stage_4_Pipeline_stage_4_0_fu_104_In_im_V_we0,
        In_im_V_d0 => grp_fft_stage_4_Pipeline_stage_4_0_fu_104_In_im_V_d0);

    grp_fft_stage_4_Pipeline_stage_4_1_fu_112 : component Processing_HW_fft_stage_4_Pipeline_stage_4_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_fft_stage_4_Pipeline_stage_4_1_fu_112_ap_start,
        ap_done => grp_fft_stage_4_Pipeline_stage_4_1_fu_112_ap_done,
        ap_idle => grp_fft_stage_4_Pipeline_stage_4_1_fu_112_ap_idle,
        ap_ready => grp_fft_stage_4_Pipeline_stage_4_1_fu_112_ap_ready,
        In_re_V_address0 => grp_fft_stage_4_Pipeline_stage_4_1_fu_112_In_re_V_address0,
        In_re_V_ce0 => grp_fft_stage_4_Pipeline_stage_4_1_fu_112_In_re_V_ce0,
        In_re_V_q0 => In_re_V_q0,
        In_re_V_address1 => grp_fft_stage_4_Pipeline_stage_4_1_fu_112_In_re_V_address1,
        In_re_V_ce1 => grp_fft_stage_4_Pipeline_stage_4_1_fu_112_In_re_V_ce1,
        In_re_V_q1 => In_re_V_q1,
        In_im_V_address0 => grp_fft_stage_4_Pipeline_stage_4_1_fu_112_In_im_V_address0,
        In_im_V_ce0 => grp_fft_stage_4_Pipeline_stage_4_1_fu_112_In_im_V_ce0,
        In_im_V_q0 => In_im_V_q0,
        In_im_V_address1 => grp_fft_stage_4_Pipeline_stage_4_1_fu_112_In_im_V_address1,
        In_im_V_ce1 => grp_fft_stage_4_Pipeline_stage_4_1_fu_112_In_im_V_ce1,
        In_im_V_q1 => In_im_V_q1,
        S4_din => grp_fft_stage_4_Pipeline_stage_4_1_fu_112_S4_din,
        S4_num_data_valid => ap_const_lv12_0,
        S4_fifo_cap => ap_const_lv12_0,
        S4_full_n => S4_full_n,
        S4_write => grp_fft_stage_4_Pipeline_stage_4_1_fu_112_S4_write,
        OutBuff_re_V_address0 => grp_fft_stage_4_Pipeline_stage_4_1_fu_112_OutBuff_re_V_address0,
        OutBuff_re_V_ce0 => grp_fft_stage_4_Pipeline_stage_4_1_fu_112_OutBuff_re_V_ce0,
        OutBuff_re_V_we0 => grp_fft_stage_4_Pipeline_stage_4_1_fu_112_OutBuff_re_V_we0,
        OutBuff_re_V_d0 => grp_fft_stage_4_Pipeline_stage_4_1_fu_112_OutBuff_re_V_d0,
        OutBuff_im_V_address0 => grp_fft_stage_4_Pipeline_stage_4_1_fu_112_OutBuff_im_V_address0,
        OutBuff_im_V_ce0 => grp_fft_stage_4_Pipeline_stage_4_1_fu_112_OutBuff_im_V_ce0,
        OutBuff_im_V_we0 => grp_fft_stage_4_Pipeline_stage_4_1_fu_112_OutBuff_im_V_we0,
        OutBuff_im_V_d0 => grp_fft_stage_4_Pipeline_stage_4_1_fu_112_OutBuff_im_V_d0);

    grp_fft_stage_4_Pipeline_stage_4_2_fu_126 : component Processing_HW_fft_stage_4_Pipeline_stage_4_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_fft_stage_4_Pipeline_stage_4_2_fu_126_ap_start,
        ap_done => grp_fft_stage_4_Pipeline_stage_4_2_fu_126_ap_done,
        ap_idle => grp_fft_stage_4_Pipeline_stage_4_2_fu_126_ap_idle,
        ap_ready => grp_fft_stage_4_Pipeline_stage_4_2_fu_126_ap_ready,
        S4_din => grp_fft_stage_4_Pipeline_stage_4_2_fu_126_S4_din,
        S4_num_data_valid => ap_const_lv12_0,
        S4_fifo_cap => ap_const_lv12_0,
        S4_full_n => S4_full_n,
        S4_write => grp_fft_stage_4_Pipeline_stage_4_2_fu_126_S4_write,
        OutBuff_re_V_address0 => grp_fft_stage_4_Pipeline_stage_4_2_fu_126_OutBuff_re_V_address0,
        OutBuff_re_V_ce0 => grp_fft_stage_4_Pipeline_stage_4_2_fu_126_OutBuff_re_V_ce0,
        OutBuff_re_V_q0 => OutBuff_re_V_q0,
        OutBuff_im_V_address0 => grp_fft_stage_4_Pipeline_stage_4_2_fu_126_OutBuff_im_V_address0,
        OutBuff_im_V_ce0 => grp_fft_stage_4_Pipeline_stage_4_2_fu_126_OutBuff_im_V_ce0,
        OutBuff_im_V_q0 => OutBuff_im_V_q0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln1027_fu_160_p2 = ap_const_lv1_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_fft_stage_4_Pipeline_stage_4_0_fu_104_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_fft_stage_4_Pipeline_stage_4_0_fu_104_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln1027_fu_160_p2 = ap_const_lv1_0))) then 
                    grp_fft_stage_4_Pipeline_stage_4_0_fu_104_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_fft_stage_4_Pipeline_stage_4_0_fu_104_ap_ready = ap_const_logic_1)) then 
                    grp_fft_stage_4_Pipeline_stage_4_0_fu_104_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_fft_stage_4_Pipeline_stage_4_1_fu_112_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_fft_stage_4_Pipeline_stage_4_1_fu_112_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                    grp_fft_stage_4_Pipeline_stage_4_1_fu_112_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_fft_stage_4_Pipeline_stage_4_1_fu_112_ap_ready = ap_const_logic_1)) then 
                    grp_fft_stage_4_Pipeline_stage_4_1_fu_112_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_fft_stage_4_Pipeline_stage_4_2_fu_126_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_fft_stage_4_Pipeline_stage_4_2_fu_126_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                    grp_fft_stage_4_Pipeline_stage_4_2_fu_126_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_fft_stage_4_Pipeline_stage_4_2_fu_126_ap_ready = ap_const_logic_1)) then 
                    grp_fft_stage_4_Pipeline_stage_4_2_fu_126_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    indvar_flatten_fu_70_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((num_c39_full_n = ap_const_logic_0) or (numFFT_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten_fu_70 <= ap_const_lv18_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln1027_fu_160_p2 = ap_const_lv1_0))) then 
                indvar_flatten_fu_70 <= add_ln1027_fu_165_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                    tmp_reg_183(17 downto 7) <= tmp_fu_144_p3(17 downto 7);
            end if;
        end if;
    end process;
    tmp_reg_183(6 downto 0) <= "0000000";

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, numFFT_empty_n, num_c39_full_n, grp_fft_stage_4_Pipeline_stage_4_0_fu_104_ap_done, grp_fft_stage_4_Pipeline_stage_4_1_fu_112_ap_done, grp_fft_stage_4_Pipeline_stage_4_2_fu_126_ap_done, ap_CS_fsm_state2, icmp_ln1027_fu_160_p2, ap_CS_fsm_state3, ap_CS_fsm_state6, ap_CS_fsm_state9)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((num_c39_full_n = ap_const_logic_0) or (numFFT_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln1027_fu_160_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (grp_fft_stage_4_Pipeline_stage_4_0_fu_104_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (grp_fft_stage_4_Pipeline_stage_4_1_fu_112_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state9) and (grp_fft_stage_4_Pipeline_stage_4_2_fu_126_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXX";
        end case;
    end process;

    In_im_V_address0_assign_proc : process(grp_fft_stage_4_Pipeline_stage_4_0_fu_104_In_im_V_address0, grp_fft_stage_4_Pipeline_stage_4_1_fu_112_In_im_V_address0, ap_CS_fsm_state3, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            In_im_V_address0 <= grp_fft_stage_4_Pipeline_stage_4_1_fu_112_In_im_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            In_im_V_address0 <= grp_fft_stage_4_Pipeline_stage_4_0_fu_104_In_im_V_address0;
        else 
            In_im_V_address0 <= "XXXX";
        end if; 
    end process;


    In_im_V_ce0_assign_proc : process(grp_fft_stage_4_Pipeline_stage_4_0_fu_104_In_im_V_ce0, grp_fft_stage_4_Pipeline_stage_4_1_fu_112_In_im_V_ce0, ap_CS_fsm_state3, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            In_im_V_ce0 <= grp_fft_stage_4_Pipeline_stage_4_1_fu_112_In_im_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            In_im_V_ce0 <= grp_fft_stage_4_Pipeline_stage_4_0_fu_104_In_im_V_ce0;
        else 
            In_im_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    In_im_V_ce1_assign_proc : process(grp_fft_stage_4_Pipeline_stage_4_1_fu_112_In_im_V_ce1, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            In_im_V_ce1 <= grp_fft_stage_4_Pipeline_stage_4_1_fu_112_In_im_V_ce1;
        else 
            In_im_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    In_im_V_we0_assign_proc : process(grp_fft_stage_4_Pipeline_stage_4_0_fu_104_In_im_V_we0, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            In_im_V_we0 <= grp_fft_stage_4_Pipeline_stage_4_0_fu_104_In_im_V_we0;
        else 
            In_im_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    In_re_V_address0_assign_proc : process(grp_fft_stage_4_Pipeline_stage_4_0_fu_104_In_re_V_address0, grp_fft_stage_4_Pipeline_stage_4_1_fu_112_In_re_V_address0, ap_CS_fsm_state3, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            In_re_V_address0 <= grp_fft_stage_4_Pipeline_stage_4_1_fu_112_In_re_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            In_re_V_address0 <= grp_fft_stage_4_Pipeline_stage_4_0_fu_104_In_re_V_address0;
        else 
            In_re_V_address0 <= "XXXX";
        end if; 
    end process;


    In_re_V_ce0_assign_proc : process(grp_fft_stage_4_Pipeline_stage_4_0_fu_104_In_re_V_ce0, grp_fft_stage_4_Pipeline_stage_4_1_fu_112_In_re_V_ce0, ap_CS_fsm_state3, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            In_re_V_ce0 <= grp_fft_stage_4_Pipeline_stage_4_1_fu_112_In_re_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            In_re_V_ce0 <= grp_fft_stage_4_Pipeline_stage_4_0_fu_104_In_re_V_ce0;
        else 
            In_re_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    In_re_V_ce1_assign_proc : process(grp_fft_stage_4_Pipeline_stage_4_1_fu_112_In_re_V_ce1, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            In_re_V_ce1 <= grp_fft_stage_4_Pipeline_stage_4_1_fu_112_In_re_V_ce1;
        else 
            In_re_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    In_re_V_we0_assign_proc : process(grp_fft_stage_4_Pipeline_stage_4_0_fu_104_In_re_V_we0, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            In_re_V_we0 <= grp_fft_stage_4_Pipeline_stage_4_0_fu_104_In_re_V_we0;
        else 
            In_re_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    OutBuff_im_V_address0_assign_proc : process(grp_fft_stage_4_Pipeline_stage_4_1_fu_112_OutBuff_im_V_address0, grp_fft_stage_4_Pipeline_stage_4_2_fu_126_OutBuff_im_V_address0, ap_CS_fsm_state6, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            OutBuff_im_V_address0 <= grp_fft_stage_4_Pipeline_stage_4_2_fu_126_OutBuff_im_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            OutBuff_im_V_address0 <= grp_fft_stage_4_Pipeline_stage_4_1_fu_112_OutBuff_im_V_address0;
        else 
            OutBuff_im_V_address0 <= "XXX";
        end if; 
    end process;


    OutBuff_im_V_ce0_assign_proc : process(grp_fft_stage_4_Pipeline_stage_4_1_fu_112_OutBuff_im_V_ce0, grp_fft_stage_4_Pipeline_stage_4_2_fu_126_OutBuff_im_V_ce0, ap_CS_fsm_state6, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            OutBuff_im_V_ce0 <= grp_fft_stage_4_Pipeline_stage_4_2_fu_126_OutBuff_im_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            OutBuff_im_V_ce0 <= grp_fft_stage_4_Pipeline_stage_4_1_fu_112_OutBuff_im_V_ce0;
        else 
            OutBuff_im_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    OutBuff_im_V_we0_assign_proc : process(grp_fft_stage_4_Pipeline_stage_4_1_fu_112_OutBuff_im_V_we0, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            OutBuff_im_V_we0 <= grp_fft_stage_4_Pipeline_stage_4_1_fu_112_OutBuff_im_V_we0;
        else 
            OutBuff_im_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    OutBuff_re_V_address0_assign_proc : process(grp_fft_stage_4_Pipeline_stage_4_1_fu_112_OutBuff_re_V_address0, grp_fft_stage_4_Pipeline_stage_4_2_fu_126_OutBuff_re_V_address0, ap_CS_fsm_state6, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            OutBuff_re_V_address0 <= grp_fft_stage_4_Pipeline_stage_4_2_fu_126_OutBuff_re_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            OutBuff_re_V_address0 <= grp_fft_stage_4_Pipeline_stage_4_1_fu_112_OutBuff_re_V_address0;
        else 
            OutBuff_re_V_address0 <= "XXX";
        end if; 
    end process;


    OutBuff_re_V_ce0_assign_proc : process(grp_fft_stage_4_Pipeline_stage_4_1_fu_112_OutBuff_re_V_ce0, grp_fft_stage_4_Pipeline_stage_4_2_fu_126_OutBuff_re_V_ce0, ap_CS_fsm_state6, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            OutBuff_re_V_ce0 <= grp_fft_stage_4_Pipeline_stage_4_2_fu_126_OutBuff_re_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            OutBuff_re_V_ce0 <= grp_fft_stage_4_Pipeline_stage_4_1_fu_112_OutBuff_re_V_ce0;
        else 
            OutBuff_re_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    OutBuff_re_V_we0_assign_proc : process(grp_fft_stage_4_Pipeline_stage_4_1_fu_112_OutBuff_re_V_we0, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            OutBuff_re_V_we0 <= grp_fft_stage_4_Pipeline_stage_4_1_fu_112_OutBuff_re_V_we0;
        else 
            OutBuff_re_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    S3_read_assign_proc : process(grp_fft_stage_4_Pipeline_stage_4_0_fu_104_S3_read, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            S3_read <= grp_fft_stage_4_Pipeline_stage_4_0_fu_104_S3_read;
        else 
            S3_read <= ap_const_logic_0;
        end if; 
    end process;


    S4_din_assign_proc : process(grp_fft_stage_4_Pipeline_stage_4_1_fu_112_S4_din, grp_fft_stage_4_Pipeline_stage_4_2_fu_126_S4_din, ap_CS_fsm_state6, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            S4_din <= grp_fft_stage_4_Pipeline_stage_4_2_fu_126_S4_din;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            S4_din <= grp_fft_stage_4_Pipeline_stage_4_1_fu_112_S4_din;
        else 
            S4_din <= grp_fft_stage_4_Pipeline_stage_4_2_fu_126_S4_din;
        end if; 
    end process;


    S4_write_assign_proc : process(grp_fft_stage_4_Pipeline_stage_4_1_fu_112_S4_write, grp_fft_stage_4_Pipeline_stage_4_2_fu_126_S4_write, ap_CS_fsm_state6, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            S4_write <= grp_fft_stage_4_Pipeline_stage_4_2_fu_126_S4_write;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            S4_write <= grp_fft_stage_4_Pipeline_stage_4_1_fu_112_S4_write;
        else 
            S4_write <= ap_const_logic_0;
        end if; 
    end process;

    add_ln1027_fu_165_p2 <= std_logic_vector(unsigned(indvar_flatten_fu_70) + unsigned(ap_const_lv18_1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_ST_fsm_state1_blk_assign_proc : process(real_start, ap_done_reg, numFFT_empty_n, num_c39_full_n)
    begin
        if (((num_c39_full_n = ap_const_logic_0) or (numFFT_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;

    ap_ST_fsm_state3_blk_assign_proc : process(grp_fft_stage_4_Pipeline_stage_4_0_fu_104_ap_done)
    begin
        if ((grp_fft_stage_4_Pipeline_stage_4_0_fu_104_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;

    ap_ST_fsm_state6_blk_assign_proc : process(grp_fft_stage_4_Pipeline_stage_4_1_fu_112_ap_done)
    begin
        if ((grp_fft_stage_4_Pipeline_stage_4_1_fu_112_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state6_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state6_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;

    ap_ST_fsm_state9_blk_assign_proc : process(grp_fft_stage_4_Pipeline_stage_4_2_fu_126_ap_done)
    begin
        if ((grp_fft_stage_4_Pipeline_stage_4_2_fu_126_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state9_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state9_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg, numFFT_empty_n, num_c39_full_n)
    begin
                ap_block_state1 <= ((num_c39_full_n = ap_const_logic_0) or (numFFT_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state2, icmp_ln1027_fu_160_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln1027_fu_160_p2 = ap_const_lv1_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (real_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_ready <= internal_ap_ready;
    grp_fft_stage_4_Pipeline_stage_4_0_fu_104_ap_start <= grp_fft_stage_4_Pipeline_stage_4_0_fu_104_ap_start_reg;
    grp_fft_stage_4_Pipeline_stage_4_1_fu_112_ap_start <= grp_fft_stage_4_Pipeline_stage_4_1_fu_112_ap_start_reg;
    grp_fft_stage_4_Pipeline_stage_4_2_fu_126_ap_start <= grp_fft_stage_4_Pipeline_stage_4_2_fu_126_ap_start_reg;
    icmp_ln1027_fu_160_p2 <= "1" when (indvar_flatten_fu_70 = tmp_reg_183) else "0";

    internal_ap_ready_assign_proc : process(ap_CS_fsm_state2, icmp_ln1027_fu_160_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln1027_fu_160_p2 = ap_const_lv1_1))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    numFFT_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, numFFT_empty_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            numFFT_blk_n <= numFFT_empty_n;
        else 
            numFFT_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    numFFT_cast1_fu_134_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(numFFT_dout),11));

    numFFT_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, numFFT_empty_n, num_c39_full_n)
    begin
        if ((not(((num_c39_full_n = ap_const_logic_0) or (numFFT_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            numFFT_read <= ap_const_logic_1;
        else 
            numFFT_read <= ap_const_logic_0;
        end if; 
    end process;


    num_c39_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, num_c39_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            num_c39_blk_n <= num_c39_full_n;
        else 
            num_c39_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    num_c39_din <= numFFT_dout;

    num_c39_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, numFFT_empty_n, num_c39_full_n)
    begin
        if ((not(((num_c39_full_n = ap_const_logic_0) or (numFFT_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            num_c39_write <= ap_const_logic_1;
        else 
            num_c39_write <= ap_const_logic_0;
        end if; 
    end process;


    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    sub_i_i_fu_138_p2 <= std_logic_vector(unsigned(numFFT_cast1_fu_134_p1) + unsigned(ap_const_lv11_7FD));
    tmp_fu_144_p3 <= (sub_i_i_fu_138_p2 & ap_const_lv7_0);
end behav;
