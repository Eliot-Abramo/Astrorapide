-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Processing_HW_process2 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    D0_dout : IN STD_LOGIC_VECTOR (63 downto 0);
    D0_num_data_valid : IN STD_LOGIC_VECTOR (11 downto 0);
    D0_fifo_cap : IN STD_LOGIC_VECTOR (11 downto 0);
    D0_empty_n : IN STD_LOGIC;
    D0_read : OUT STD_LOGIC;
    D1_din : OUT STD_LOGIC_VECTOR (63 downto 0);
    D1_num_data_valid : IN STD_LOGIC_VECTOR (11 downto 0);
    D1_fifo_cap : IN STD_LOGIC_VECTOR (11 downto 0);
    D1_full_n : IN STD_LOGIC;
    D1_write : OUT STD_LOGIC;
    num_dout : IN STD_LOGIC_VECTOR (9 downto 0);
    num_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    num_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    num_empty_n : IN STD_LOGIC;
    num_read : OUT STD_LOGIC;
    Buff0_re_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    Buff0_re_ce0 : OUT STD_LOGIC;
    Buff0_re_we0 : OUT STD_LOGIC;
    Buff0_re_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    Buff0_re_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    Buff0_im_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    Buff0_im_ce0 : OUT STD_LOGIC;
    Buff0_im_we0 : OUT STD_LOGIC;
    Buff0_im_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    Buff0_im_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    Buff1_re_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    Buff1_re_ce0 : OUT STD_LOGIC;
    Buff1_re_we0 : OUT STD_LOGIC;
    Buff1_re_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    Buff1_re_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    Buff1_im_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    Buff1_im_ce0 : OUT STD_LOGIC;
    Buff1_im_we0 : OUT STD_LOGIC;
    Buff1_im_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    Buff1_im_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    Buff2_re_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    Buff2_re_ce0 : OUT STD_LOGIC;
    Buff2_re_we0 : OUT STD_LOGIC;
    Buff2_re_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    Buff2_re_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    Buff2_im_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    Buff2_im_ce0 : OUT STD_LOGIC;
    Buff2_im_we0 : OUT STD_LOGIC;
    Buff2_im_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    Buff2_im_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    num_c44_din : OUT STD_LOGIC_VECTOR (9 downto 0);
    num_c44_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    num_c44_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    num_c44_full_n : IN STD_LOGIC;
    num_c44_write : OUT STD_LOGIC );
end;


architecture behav of Processing_HW_process2 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv11_7FD : STD_LOGIC_VECTOR (10 downto 0) := "11111111101";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";

attribute shreg_extract : string;
    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal num_blk_n : STD_LOGIC;
    signal num_c44_blk_n : STD_LOGIC;
    signal sub_i_i_fu_162_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_i_i_reg_206 : STD_LOGIC_VECTOR (10 downto 0);
    signal ret_V_fu_176_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal ret_V_reg_211 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal counter_V_2_fu_189_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal counter_V_2_reg_218 : STD_LOGIC_VECTOR (9 downto 0);
    signal Buff3_re_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal Buff3_re_V_ce0 : STD_LOGIC;
    signal Buff3_re_V_we0 : STD_LOGIC;
    signal Buff3_re_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Buff3_im_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal Buff3_im_V_ce0 : STD_LOGIC;
    signal Buff3_im_V_we0 : STD_LOGIC;
    signal Buff3_im_V_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Windowing_fu_108_ap_start : STD_LOGIC;
    signal grp_Windowing_fu_108_ap_done : STD_LOGIC;
    signal grp_Windowing_fu_108_ap_idle : STD_LOGIC;
    signal grp_Windowing_fu_108_ap_ready : STD_LOGIC;
    signal grp_Windowing_fu_108_Buff0_re_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_Windowing_fu_108_Buff0_re_ce0 : STD_LOGIC;
    signal grp_Windowing_fu_108_Buff0_re_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Windowing_fu_108_Buff0_im_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_Windowing_fu_108_Buff0_im_ce0 : STD_LOGIC;
    signal grp_Windowing_fu_108_Buff0_im_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Windowing_fu_108_Buff1_re_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_Windowing_fu_108_Buff1_re_ce0 : STD_LOGIC;
    signal grp_Windowing_fu_108_Buff1_re_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Windowing_fu_108_Buff1_im_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_Windowing_fu_108_Buff1_im_ce0 : STD_LOGIC;
    signal grp_Windowing_fu_108_Buff1_im_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Windowing_fu_108_Buff2_re_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_Windowing_fu_108_Buff2_re_ce0 : STD_LOGIC;
    signal grp_Windowing_fu_108_Buff2_re_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Windowing_fu_108_Buff2_im_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_Windowing_fu_108_Buff2_im_ce0 : STD_LOGIC;
    signal grp_Windowing_fu_108_Buff2_im_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Windowing_fu_108_Buff3_re_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_Windowing_fu_108_Buff3_re_ce0 : STD_LOGIC;
    signal grp_Windowing_fu_108_Buff3_re_we0 : STD_LOGIC;
    signal grp_Windowing_fu_108_Buff3_re_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Windowing_fu_108_Buff3_re_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Windowing_fu_108_Buff3_im_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_Windowing_fu_108_Buff3_im_ce0 : STD_LOGIC;
    signal grp_Windowing_fu_108_Buff3_im_we0 : STD_LOGIC;
    signal grp_Windowing_fu_108_Buff3_im_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Windowing_fu_108_Buff3_im_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Windowing_fu_108_D0_read : STD_LOGIC;
    signal grp_Windowing_fu_108_D1_din : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_Windowing_fu_108_D1_write : STD_LOGIC;
    signal grp_Windowing_fu_108_ap_start_reg : STD_LOGIC := '0';
    signal icmp_ln1027_fu_184_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal counter_V_fu_82 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_block_state3_on_subcall_done : BOOLEAN;
    signal ap_block_state1 : BOOLEAN;
    signal num_cast2_fu_158_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln1027_fu_180_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component Processing_HW_Windowing IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        Buff0_re_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        Buff0_re_ce0 : OUT STD_LOGIC;
        Buff0_re_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        Buff0_im_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        Buff0_im_ce0 : OUT STD_LOGIC;
        Buff0_im_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        Buff1_re_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        Buff1_re_ce0 : OUT STD_LOGIC;
        Buff1_re_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        Buff1_im_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        Buff1_im_ce0 : OUT STD_LOGIC;
        Buff1_im_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        Buff2_re_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        Buff2_re_ce0 : OUT STD_LOGIC;
        Buff2_re_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        Buff2_im_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        Buff2_im_ce0 : OUT STD_LOGIC;
        Buff2_im_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        Buff3_re_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        Buff3_re_ce0 : OUT STD_LOGIC;
        Buff3_re_we0 : OUT STD_LOGIC;
        Buff3_re_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        Buff3_re_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        Buff3_im_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        Buff3_im_ce0 : OUT STD_LOGIC;
        Buff3_im_we0 : OUT STD_LOGIC;
        Buff3_im_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        Buff3_im_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        D0_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        D0_num_data_valid : IN STD_LOGIC_VECTOR (11 downto 0);
        D0_fifo_cap : IN STD_LOGIC_VECTOR (11 downto 0);
        D0_empty_n : IN STD_LOGIC;
        D0_read : OUT STD_LOGIC;
        D1_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        D1_num_data_valid : IN STD_LOGIC_VECTOR (11 downto 0);
        D1_fifo_cap : IN STD_LOGIC_VECTOR (11 downto 0);
        D1_full_n : IN STD_LOGIC;
        D1_write : OUT STD_LOGIC );
    end component;


    component Processing_HW_process2_Buff3_re_V_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    Buff3_re_V_U : component Processing_HW_process2_Buff3_re_V_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 2048,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => Buff3_re_V_address0,
        ce0 => Buff3_re_V_ce0,
        we0 => Buff3_re_V_we0,
        d0 => grp_Windowing_fu_108_Buff3_re_d0,
        q0 => Buff3_re_V_q0);

    Buff3_im_V_U : component Processing_HW_process2_Buff3_re_V_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 2048,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => Buff3_im_V_address0,
        ce0 => Buff3_im_V_ce0,
        we0 => Buff3_im_V_we0,
        d0 => grp_Windowing_fu_108_Buff3_im_d0,
        q0 => Buff3_im_V_q0);

    grp_Windowing_fu_108 : component Processing_HW_Windowing
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_Windowing_fu_108_ap_start,
        ap_done => grp_Windowing_fu_108_ap_done,
        ap_idle => grp_Windowing_fu_108_ap_idle,
        ap_ready => grp_Windowing_fu_108_ap_ready,
        Buff0_re_address0 => grp_Windowing_fu_108_Buff0_re_address0,
        Buff0_re_ce0 => grp_Windowing_fu_108_Buff0_re_ce0,
        Buff0_re_q0 => grp_Windowing_fu_108_Buff0_re_q0,
        Buff0_im_address0 => grp_Windowing_fu_108_Buff0_im_address0,
        Buff0_im_ce0 => grp_Windowing_fu_108_Buff0_im_ce0,
        Buff0_im_q0 => grp_Windowing_fu_108_Buff0_im_q0,
        Buff1_re_address0 => grp_Windowing_fu_108_Buff1_re_address0,
        Buff1_re_ce0 => grp_Windowing_fu_108_Buff1_re_ce0,
        Buff1_re_q0 => grp_Windowing_fu_108_Buff1_re_q0,
        Buff1_im_address0 => grp_Windowing_fu_108_Buff1_im_address0,
        Buff1_im_ce0 => grp_Windowing_fu_108_Buff1_im_ce0,
        Buff1_im_q0 => grp_Windowing_fu_108_Buff1_im_q0,
        Buff2_re_address0 => grp_Windowing_fu_108_Buff2_re_address0,
        Buff2_re_ce0 => grp_Windowing_fu_108_Buff2_re_ce0,
        Buff2_re_q0 => grp_Windowing_fu_108_Buff2_re_q0,
        Buff2_im_address0 => grp_Windowing_fu_108_Buff2_im_address0,
        Buff2_im_ce0 => grp_Windowing_fu_108_Buff2_im_ce0,
        Buff2_im_q0 => grp_Windowing_fu_108_Buff2_im_q0,
        Buff3_re_address0 => grp_Windowing_fu_108_Buff3_re_address0,
        Buff3_re_ce0 => grp_Windowing_fu_108_Buff3_re_ce0,
        Buff3_re_we0 => grp_Windowing_fu_108_Buff3_re_we0,
        Buff3_re_d0 => grp_Windowing_fu_108_Buff3_re_d0,
        Buff3_re_q0 => grp_Windowing_fu_108_Buff3_re_q0,
        Buff3_im_address0 => grp_Windowing_fu_108_Buff3_im_address0,
        Buff3_im_ce0 => grp_Windowing_fu_108_Buff3_im_ce0,
        Buff3_im_we0 => grp_Windowing_fu_108_Buff3_im_we0,
        Buff3_im_d0 => grp_Windowing_fu_108_Buff3_im_d0,
        Buff3_im_q0 => grp_Windowing_fu_108_Buff3_im_q0,
        D0_dout => D0_dout,
        D0_num_data_valid => ap_const_lv12_0,
        D0_fifo_cap => ap_const_lv12_0,
        D0_empty_n => D0_empty_n,
        D0_read => grp_Windowing_fu_108_D0_read,
        D1_din => grp_Windowing_fu_108_D1_din,
        D1_num_data_valid => ap_const_lv12_0,
        D1_fifo_cap => ap_const_lv12_0,
        D1_full_n => D1_full_n,
        D1_write => grp_Windowing_fu_108_D1_write);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln1027_fu_184_p2 = ap_const_lv1_0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_Windowing_fu_108_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_Windowing_fu_108_ap_start_reg <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln1027_fu_184_p2 = ap_const_lv1_1) and (ret_V_fu_176_p1 = ap_const_lv2_3)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln1027_fu_184_p2 = ap_const_lv1_1) and (ret_V_fu_176_p1 = ap_const_lv2_0)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln1027_fu_184_p2 = ap_const_lv1_1) and (ret_V_fu_176_p1 = ap_const_lv2_1)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln1027_fu_184_p2 = ap_const_lv1_1) and (ret_V_fu_176_p1 = ap_const_lv2_2)))) then 
                    grp_Windowing_fu_108_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_Windowing_fu_108_ap_ready = ap_const_logic_1)) then 
                    grp_Windowing_fu_108_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((real_start = ap_const_logic_1) and (internal_ap_ready = ap_const_logic_0))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    counter_V_fu_82_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((real_start = ap_const_logic_0) or (num_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (num_c44_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                counter_V_fu_82 <= ap_const_lv10_0;
            elsif (((ap_const_boolean_0 = ap_block_state3_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                counter_V_fu_82 <= counter_V_2_reg_218;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                counter_V_2_reg_218 <= counter_V_2_fu_189_p2;
                ret_V_reg_211 <= ret_V_fu_176_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                sub_i_i_reg_206 <= sub_i_i_fu_162_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, num_empty_n, num_c44_full_n, ap_CS_fsm_state2, icmp_ln1027_fu_184_p2, ap_CS_fsm_state3, ap_block_state3_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((real_start = ap_const_logic_0) or (num_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (num_c44_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln1027_fu_184_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_boolean_0 = ap_block_state3_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;

    Buff0_im_address0_assign_proc : process(ret_V_reg_211, grp_Windowing_fu_108_Buff0_im_address0, grp_Windowing_fu_108_Buff1_im_address0, grp_Windowing_fu_108_Buff2_im_address0, grp_Windowing_fu_108_Buff3_im_address0, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
            if ((ret_V_reg_211 = ap_const_lv2_1)) then 
                Buff0_im_address0 <= grp_Windowing_fu_108_Buff3_im_address0;
            elsif ((ret_V_reg_211 = ap_const_lv2_2)) then 
                Buff0_im_address0 <= grp_Windowing_fu_108_Buff2_im_address0;
            elsif ((ret_V_reg_211 = ap_const_lv2_3)) then 
                Buff0_im_address0 <= grp_Windowing_fu_108_Buff1_im_address0;
            elsif ((ret_V_reg_211 = ap_const_lv2_0)) then 
                Buff0_im_address0 <= grp_Windowing_fu_108_Buff0_im_address0;
            else 
                Buff0_im_address0 <= "XXXXXXXXXXX";
            end if;
        else 
            Buff0_im_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    Buff0_im_ce0_assign_proc : process(ret_V_reg_211, grp_Windowing_fu_108_Buff0_im_ce0, grp_Windowing_fu_108_Buff1_im_ce0, grp_Windowing_fu_108_Buff2_im_ce0, grp_Windowing_fu_108_Buff3_im_ce0, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
            if ((ret_V_reg_211 = ap_const_lv2_1)) then 
                Buff0_im_ce0 <= grp_Windowing_fu_108_Buff3_im_ce0;
            elsif ((ret_V_reg_211 = ap_const_lv2_2)) then 
                Buff0_im_ce0 <= grp_Windowing_fu_108_Buff2_im_ce0;
            elsif ((ret_V_reg_211 = ap_const_lv2_3)) then 
                Buff0_im_ce0 <= grp_Windowing_fu_108_Buff1_im_ce0;
            elsif ((ret_V_reg_211 = ap_const_lv2_0)) then 
                Buff0_im_ce0 <= grp_Windowing_fu_108_Buff0_im_ce0;
            else 
                Buff0_im_ce0 <= ap_const_logic_0;
            end if;
        else 
            Buff0_im_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    Buff0_im_d0 <= grp_Windowing_fu_108_Buff3_im_d0;

    Buff0_im_we0_assign_proc : process(ret_V_reg_211, grp_Windowing_fu_108_Buff3_im_we0, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) and (ret_V_reg_211 = ap_const_lv2_1))) then 
            Buff0_im_we0 <= grp_Windowing_fu_108_Buff3_im_we0;
        else 
            Buff0_im_we0 <= ap_const_logic_0;
        end if; 
    end process;


    Buff0_re_address0_assign_proc : process(ret_V_reg_211, grp_Windowing_fu_108_Buff0_re_address0, grp_Windowing_fu_108_Buff1_re_address0, grp_Windowing_fu_108_Buff2_re_address0, grp_Windowing_fu_108_Buff3_re_address0, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
            if ((ret_V_reg_211 = ap_const_lv2_1)) then 
                Buff0_re_address0 <= grp_Windowing_fu_108_Buff3_re_address0;
            elsif ((ret_V_reg_211 = ap_const_lv2_2)) then 
                Buff0_re_address0 <= grp_Windowing_fu_108_Buff2_re_address0;
            elsif ((ret_V_reg_211 = ap_const_lv2_3)) then 
                Buff0_re_address0 <= grp_Windowing_fu_108_Buff1_re_address0;
            elsif ((ret_V_reg_211 = ap_const_lv2_0)) then 
                Buff0_re_address0 <= grp_Windowing_fu_108_Buff0_re_address0;
            else 
                Buff0_re_address0 <= "XXXXXXXXXXX";
            end if;
        else 
            Buff0_re_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    Buff0_re_ce0_assign_proc : process(ret_V_reg_211, grp_Windowing_fu_108_Buff0_re_ce0, grp_Windowing_fu_108_Buff1_re_ce0, grp_Windowing_fu_108_Buff2_re_ce0, grp_Windowing_fu_108_Buff3_re_ce0, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
            if ((ret_V_reg_211 = ap_const_lv2_1)) then 
                Buff0_re_ce0 <= grp_Windowing_fu_108_Buff3_re_ce0;
            elsif ((ret_V_reg_211 = ap_const_lv2_2)) then 
                Buff0_re_ce0 <= grp_Windowing_fu_108_Buff2_re_ce0;
            elsif ((ret_V_reg_211 = ap_const_lv2_3)) then 
                Buff0_re_ce0 <= grp_Windowing_fu_108_Buff1_re_ce0;
            elsif ((ret_V_reg_211 = ap_const_lv2_0)) then 
                Buff0_re_ce0 <= grp_Windowing_fu_108_Buff0_re_ce0;
            else 
                Buff0_re_ce0 <= ap_const_logic_0;
            end if;
        else 
            Buff0_re_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    Buff0_re_d0 <= grp_Windowing_fu_108_Buff3_re_d0;

    Buff0_re_we0_assign_proc : process(ret_V_reg_211, grp_Windowing_fu_108_Buff3_re_we0, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) and (ret_V_reg_211 = ap_const_lv2_1))) then 
            Buff0_re_we0 <= grp_Windowing_fu_108_Buff3_re_we0;
        else 
            Buff0_re_we0 <= ap_const_logic_0;
        end if; 
    end process;


    Buff1_im_address0_assign_proc : process(ret_V_reg_211, grp_Windowing_fu_108_Buff0_im_address0, grp_Windowing_fu_108_Buff1_im_address0, grp_Windowing_fu_108_Buff2_im_address0, grp_Windowing_fu_108_Buff3_im_address0, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
            if ((ret_V_reg_211 = ap_const_lv2_2)) then 
                Buff1_im_address0 <= grp_Windowing_fu_108_Buff3_im_address0;
            elsif ((ret_V_reg_211 = ap_const_lv2_3)) then 
                Buff1_im_address0 <= grp_Windowing_fu_108_Buff2_im_address0;
            elsif ((ret_V_reg_211 = ap_const_lv2_0)) then 
                Buff1_im_address0 <= grp_Windowing_fu_108_Buff1_im_address0;
            elsif ((ret_V_reg_211 = ap_const_lv2_1)) then 
                Buff1_im_address0 <= grp_Windowing_fu_108_Buff0_im_address0;
            else 
                Buff1_im_address0 <= "XXXXXXXXXXX";
            end if;
        else 
            Buff1_im_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    Buff1_im_ce0_assign_proc : process(ret_V_reg_211, grp_Windowing_fu_108_Buff0_im_ce0, grp_Windowing_fu_108_Buff1_im_ce0, grp_Windowing_fu_108_Buff2_im_ce0, grp_Windowing_fu_108_Buff3_im_ce0, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
            if ((ret_V_reg_211 = ap_const_lv2_2)) then 
                Buff1_im_ce0 <= grp_Windowing_fu_108_Buff3_im_ce0;
            elsif ((ret_V_reg_211 = ap_const_lv2_3)) then 
                Buff1_im_ce0 <= grp_Windowing_fu_108_Buff2_im_ce0;
            elsif ((ret_V_reg_211 = ap_const_lv2_0)) then 
                Buff1_im_ce0 <= grp_Windowing_fu_108_Buff1_im_ce0;
            elsif ((ret_V_reg_211 = ap_const_lv2_1)) then 
                Buff1_im_ce0 <= grp_Windowing_fu_108_Buff0_im_ce0;
            else 
                Buff1_im_ce0 <= ap_const_logic_0;
            end if;
        else 
            Buff1_im_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    Buff1_im_d0 <= grp_Windowing_fu_108_Buff3_im_d0;

    Buff1_im_we0_assign_proc : process(ret_V_reg_211, grp_Windowing_fu_108_Buff3_im_we0, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) and (ret_V_reg_211 = ap_const_lv2_2))) then 
            Buff1_im_we0 <= grp_Windowing_fu_108_Buff3_im_we0;
        else 
            Buff1_im_we0 <= ap_const_logic_0;
        end if; 
    end process;


    Buff1_re_address0_assign_proc : process(ret_V_reg_211, grp_Windowing_fu_108_Buff0_re_address0, grp_Windowing_fu_108_Buff1_re_address0, grp_Windowing_fu_108_Buff2_re_address0, grp_Windowing_fu_108_Buff3_re_address0, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
            if ((ret_V_reg_211 = ap_const_lv2_2)) then 
                Buff1_re_address0 <= grp_Windowing_fu_108_Buff3_re_address0;
            elsif ((ret_V_reg_211 = ap_const_lv2_3)) then 
                Buff1_re_address0 <= grp_Windowing_fu_108_Buff2_re_address0;
            elsif ((ret_V_reg_211 = ap_const_lv2_0)) then 
                Buff1_re_address0 <= grp_Windowing_fu_108_Buff1_re_address0;
            elsif ((ret_V_reg_211 = ap_const_lv2_1)) then 
                Buff1_re_address0 <= grp_Windowing_fu_108_Buff0_re_address0;
            else 
                Buff1_re_address0 <= "XXXXXXXXXXX";
            end if;
        else 
            Buff1_re_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    Buff1_re_ce0_assign_proc : process(ret_V_reg_211, grp_Windowing_fu_108_Buff0_re_ce0, grp_Windowing_fu_108_Buff1_re_ce0, grp_Windowing_fu_108_Buff2_re_ce0, grp_Windowing_fu_108_Buff3_re_ce0, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
            if ((ret_V_reg_211 = ap_const_lv2_2)) then 
                Buff1_re_ce0 <= grp_Windowing_fu_108_Buff3_re_ce0;
            elsif ((ret_V_reg_211 = ap_const_lv2_3)) then 
                Buff1_re_ce0 <= grp_Windowing_fu_108_Buff2_re_ce0;
            elsif ((ret_V_reg_211 = ap_const_lv2_0)) then 
                Buff1_re_ce0 <= grp_Windowing_fu_108_Buff1_re_ce0;
            elsif ((ret_V_reg_211 = ap_const_lv2_1)) then 
                Buff1_re_ce0 <= grp_Windowing_fu_108_Buff0_re_ce0;
            else 
                Buff1_re_ce0 <= ap_const_logic_0;
            end if;
        else 
            Buff1_re_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    Buff1_re_d0 <= grp_Windowing_fu_108_Buff3_re_d0;

    Buff1_re_we0_assign_proc : process(ret_V_reg_211, grp_Windowing_fu_108_Buff3_re_we0, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) and (ret_V_reg_211 = ap_const_lv2_2))) then 
            Buff1_re_we0 <= grp_Windowing_fu_108_Buff3_re_we0;
        else 
            Buff1_re_we0 <= ap_const_logic_0;
        end if; 
    end process;


    Buff2_im_address0_assign_proc : process(ret_V_reg_211, grp_Windowing_fu_108_Buff0_im_address0, grp_Windowing_fu_108_Buff1_im_address0, grp_Windowing_fu_108_Buff2_im_address0, grp_Windowing_fu_108_Buff3_im_address0, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
            if ((ret_V_reg_211 = ap_const_lv2_3)) then 
                Buff2_im_address0 <= grp_Windowing_fu_108_Buff3_im_address0;
            elsif ((ret_V_reg_211 = ap_const_lv2_0)) then 
                Buff2_im_address0 <= grp_Windowing_fu_108_Buff2_im_address0;
            elsif ((ret_V_reg_211 = ap_const_lv2_1)) then 
                Buff2_im_address0 <= grp_Windowing_fu_108_Buff1_im_address0;
            elsif ((ret_V_reg_211 = ap_const_lv2_2)) then 
                Buff2_im_address0 <= grp_Windowing_fu_108_Buff0_im_address0;
            else 
                Buff2_im_address0 <= "XXXXXXXXXXX";
            end if;
        else 
            Buff2_im_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    Buff2_im_ce0_assign_proc : process(ret_V_reg_211, grp_Windowing_fu_108_Buff0_im_ce0, grp_Windowing_fu_108_Buff1_im_ce0, grp_Windowing_fu_108_Buff2_im_ce0, grp_Windowing_fu_108_Buff3_im_ce0, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
            if ((ret_V_reg_211 = ap_const_lv2_3)) then 
                Buff2_im_ce0 <= grp_Windowing_fu_108_Buff3_im_ce0;
            elsif ((ret_V_reg_211 = ap_const_lv2_0)) then 
                Buff2_im_ce0 <= grp_Windowing_fu_108_Buff2_im_ce0;
            elsif ((ret_V_reg_211 = ap_const_lv2_1)) then 
                Buff2_im_ce0 <= grp_Windowing_fu_108_Buff1_im_ce0;
            elsif ((ret_V_reg_211 = ap_const_lv2_2)) then 
                Buff2_im_ce0 <= grp_Windowing_fu_108_Buff0_im_ce0;
            else 
                Buff2_im_ce0 <= ap_const_logic_0;
            end if;
        else 
            Buff2_im_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    Buff2_im_d0 <= grp_Windowing_fu_108_Buff3_im_d0;

    Buff2_im_we0_assign_proc : process(ret_V_reg_211, grp_Windowing_fu_108_Buff3_im_we0, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) and (ret_V_reg_211 = ap_const_lv2_3))) then 
            Buff2_im_we0 <= grp_Windowing_fu_108_Buff3_im_we0;
        else 
            Buff2_im_we0 <= ap_const_logic_0;
        end if; 
    end process;


    Buff2_re_address0_assign_proc : process(ret_V_reg_211, grp_Windowing_fu_108_Buff0_re_address0, grp_Windowing_fu_108_Buff1_re_address0, grp_Windowing_fu_108_Buff2_re_address0, grp_Windowing_fu_108_Buff3_re_address0, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
            if ((ret_V_reg_211 = ap_const_lv2_3)) then 
                Buff2_re_address0 <= grp_Windowing_fu_108_Buff3_re_address0;
            elsif ((ret_V_reg_211 = ap_const_lv2_0)) then 
                Buff2_re_address0 <= grp_Windowing_fu_108_Buff2_re_address0;
            elsif ((ret_V_reg_211 = ap_const_lv2_1)) then 
                Buff2_re_address0 <= grp_Windowing_fu_108_Buff1_re_address0;
            elsif ((ret_V_reg_211 = ap_const_lv2_2)) then 
                Buff2_re_address0 <= grp_Windowing_fu_108_Buff0_re_address0;
            else 
                Buff2_re_address0 <= "XXXXXXXXXXX";
            end if;
        else 
            Buff2_re_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    Buff2_re_ce0_assign_proc : process(ret_V_reg_211, grp_Windowing_fu_108_Buff0_re_ce0, grp_Windowing_fu_108_Buff1_re_ce0, grp_Windowing_fu_108_Buff2_re_ce0, grp_Windowing_fu_108_Buff3_re_ce0, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
            if ((ret_V_reg_211 = ap_const_lv2_3)) then 
                Buff2_re_ce0 <= grp_Windowing_fu_108_Buff3_re_ce0;
            elsif ((ret_V_reg_211 = ap_const_lv2_0)) then 
                Buff2_re_ce0 <= grp_Windowing_fu_108_Buff2_re_ce0;
            elsif ((ret_V_reg_211 = ap_const_lv2_1)) then 
                Buff2_re_ce0 <= grp_Windowing_fu_108_Buff1_re_ce0;
            elsif ((ret_V_reg_211 = ap_const_lv2_2)) then 
                Buff2_re_ce0 <= grp_Windowing_fu_108_Buff0_re_ce0;
            else 
                Buff2_re_ce0 <= ap_const_logic_0;
            end if;
        else 
            Buff2_re_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    Buff2_re_d0 <= grp_Windowing_fu_108_Buff3_re_d0;

    Buff2_re_we0_assign_proc : process(ret_V_reg_211, grp_Windowing_fu_108_Buff3_re_we0, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) and (ret_V_reg_211 = ap_const_lv2_3))) then 
            Buff2_re_we0 <= grp_Windowing_fu_108_Buff3_re_we0;
        else 
            Buff2_re_we0 <= ap_const_logic_0;
        end if; 
    end process;


    Buff3_im_V_address0_assign_proc : process(ret_V_reg_211, grp_Windowing_fu_108_Buff0_im_address0, grp_Windowing_fu_108_Buff1_im_address0, grp_Windowing_fu_108_Buff2_im_address0, grp_Windowing_fu_108_Buff3_im_address0, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
            if ((ret_V_reg_211 = ap_const_lv2_0)) then 
                Buff3_im_V_address0 <= grp_Windowing_fu_108_Buff3_im_address0;
            elsif ((ret_V_reg_211 = ap_const_lv2_1)) then 
                Buff3_im_V_address0 <= grp_Windowing_fu_108_Buff2_im_address0;
            elsif ((ret_V_reg_211 = ap_const_lv2_2)) then 
                Buff3_im_V_address0 <= grp_Windowing_fu_108_Buff1_im_address0;
            elsif ((ret_V_reg_211 = ap_const_lv2_3)) then 
                Buff3_im_V_address0 <= grp_Windowing_fu_108_Buff0_im_address0;
            else 
                Buff3_im_V_address0 <= "XXXXXXXXXXX";
            end if;
        else 
            Buff3_im_V_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    Buff3_im_V_ce0_assign_proc : process(ret_V_reg_211, grp_Windowing_fu_108_Buff0_im_ce0, grp_Windowing_fu_108_Buff1_im_ce0, grp_Windowing_fu_108_Buff2_im_ce0, grp_Windowing_fu_108_Buff3_im_ce0, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
            if ((ret_V_reg_211 = ap_const_lv2_0)) then 
                Buff3_im_V_ce0 <= grp_Windowing_fu_108_Buff3_im_ce0;
            elsif ((ret_V_reg_211 = ap_const_lv2_1)) then 
                Buff3_im_V_ce0 <= grp_Windowing_fu_108_Buff2_im_ce0;
            elsif ((ret_V_reg_211 = ap_const_lv2_2)) then 
                Buff3_im_V_ce0 <= grp_Windowing_fu_108_Buff1_im_ce0;
            elsif ((ret_V_reg_211 = ap_const_lv2_3)) then 
                Buff3_im_V_ce0 <= grp_Windowing_fu_108_Buff0_im_ce0;
            else 
                Buff3_im_V_ce0 <= ap_const_logic_0;
            end if;
        else 
            Buff3_im_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    Buff3_im_V_we0_assign_proc : process(ret_V_reg_211, grp_Windowing_fu_108_Buff3_im_we0, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) and (ret_V_reg_211 = ap_const_lv2_0))) then 
            Buff3_im_V_we0 <= grp_Windowing_fu_108_Buff3_im_we0;
        else 
            Buff3_im_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    Buff3_re_V_address0_assign_proc : process(ret_V_reg_211, grp_Windowing_fu_108_Buff0_re_address0, grp_Windowing_fu_108_Buff1_re_address0, grp_Windowing_fu_108_Buff2_re_address0, grp_Windowing_fu_108_Buff3_re_address0, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
            if ((ret_V_reg_211 = ap_const_lv2_0)) then 
                Buff3_re_V_address0 <= grp_Windowing_fu_108_Buff3_re_address0;
            elsif ((ret_V_reg_211 = ap_const_lv2_1)) then 
                Buff3_re_V_address0 <= grp_Windowing_fu_108_Buff2_re_address0;
            elsif ((ret_V_reg_211 = ap_const_lv2_2)) then 
                Buff3_re_V_address0 <= grp_Windowing_fu_108_Buff1_re_address0;
            elsif ((ret_V_reg_211 = ap_const_lv2_3)) then 
                Buff3_re_V_address0 <= grp_Windowing_fu_108_Buff0_re_address0;
            else 
                Buff3_re_V_address0 <= "XXXXXXXXXXX";
            end if;
        else 
            Buff3_re_V_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    Buff3_re_V_ce0_assign_proc : process(ret_V_reg_211, grp_Windowing_fu_108_Buff0_re_ce0, grp_Windowing_fu_108_Buff1_re_ce0, grp_Windowing_fu_108_Buff2_re_ce0, grp_Windowing_fu_108_Buff3_re_ce0, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
            if ((ret_V_reg_211 = ap_const_lv2_0)) then 
                Buff3_re_V_ce0 <= grp_Windowing_fu_108_Buff3_re_ce0;
            elsif ((ret_V_reg_211 = ap_const_lv2_1)) then 
                Buff3_re_V_ce0 <= grp_Windowing_fu_108_Buff2_re_ce0;
            elsif ((ret_V_reg_211 = ap_const_lv2_2)) then 
                Buff3_re_V_ce0 <= grp_Windowing_fu_108_Buff1_re_ce0;
            elsif ((ret_V_reg_211 = ap_const_lv2_3)) then 
                Buff3_re_V_ce0 <= grp_Windowing_fu_108_Buff0_re_ce0;
            else 
                Buff3_re_V_ce0 <= ap_const_logic_0;
            end if;
        else 
            Buff3_re_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    Buff3_re_V_we0_assign_proc : process(ret_V_reg_211, grp_Windowing_fu_108_Buff3_re_we0, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) and (ret_V_reg_211 = ap_const_lv2_0))) then 
            Buff3_re_V_we0 <= grp_Windowing_fu_108_Buff3_re_we0;
        else 
            Buff3_re_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    D0_read_assign_proc : process(ret_V_reg_211, grp_Windowing_fu_108_D0_read, ap_CS_fsm_state3)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state3) and (ret_V_reg_211 = ap_const_lv2_3)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (ret_V_reg_211 = ap_const_lv2_0)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (ret_V_reg_211 = ap_const_lv2_1)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (ret_V_reg_211 = ap_const_lv2_2)))) then 
            D0_read <= grp_Windowing_fu_108_D0_read;
        else 
            D0_read <= ap_const_logic_0;
        end if; 
    end process;

    D1_din <= grp_Windowing_fu_108_D1_din;

    D1_write_assign_proc : process(ret_V_reg_211, grp_Windowing_fu_108_D1_write, ap_CS_fsm_state3)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state3) and (ret_V_reg_211 = ap_const_lv2_3)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (ret_V_reg_211 = ap_const_lv2_0)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (ret_V_reg_211 = ap_const_lv2_1)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (ret_V_reg_211 = ap_const_lv2_2)))) then 
            D1_write <= grp_Windowing_fu_108_D1_write;
        else 
            D1_write <= ap_const_logic_0;
        end if; 
    end process;

    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);

    ap_ST_fsm_state1_blk_assign_proc : process(real_start, ap_done_reg, num_empty_n, num_c44_full_n)
    begin
        if (((real_start = ap_const_logic_0) or (num_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (num_c44_full_n = ap_const_logic_0))) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;

    ap_ST_fsm_state3_blk_assign_proc : process(ap_block_state3_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state3_on_subcall_done)) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg, num_empty_n, num_c44_full_n)
    begin
                ap_block_state1 <= ((real_start = ap_const_logic_0) or (num_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (num_c44_full_n = ap_const_logic_0));
    end process;


    ap_block_state3_on_subcall_done_assign_proc : process(ret_V_reg_211, grp_Windowing_fu_108_ap_done)
    begin
                ap_block_state3_on_subcall_done <= (((grp_Windowing_fu_108_ap_done = ap_const_logic_0) and (ret_V_reg_211 = ap_const_lv2_3)) or ((grp_Windowing_fu_108_ap_done = ap_const_logic_0) and (ret_V_reg_211 = ap_const_lv2_0)) or ((grp_Windowing_fu_108_ap_done = ap_const_logic_0) and (ret_V_reg_211 = ap_const_lv2_1)) or ((grp_Windowing_fu_108_ap_done = ap_const_logic_0) and (ret_V_reg_211 = ap_const_lv2_2)));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state2, icmp_ln1027_fu_184_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln1027_fu_184_p2 = ap_const_lv1_0))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_ready <= internal_ap_ready;
    counter_V_2_fu_189_p2 <= std_logic_vector(unsigned(counter_V_fu_82) + unsigned(ap_const_lv10_1));

    grp_Windowing_fu_108_Buff0_im_q0_assign_proc : process(Buff0_im_q0, Buff1_im_q0, Buff2_im_q0, ret_V_reg_211, Buff3_im_V_q0, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
            if ((ret_V_reg_211 = ap_const_lv2_3)) then 
                grp_Windowing_fu_108_Buff0_im_q0 <= Buff3_im_V_q0;
            elsif ((ret_V_reg_211 = ap_const_lv2_0)) then 
                grp_Windowing_fu_108_Buff0_im_q0 <= Buff0_im_q0;
            elsif ((ret_V_reg_211 = ap_const_lv2_1)) then 
                grp_Windowing_fu_108_Buff0_im_q0 <= Buff1_im_q0;
            elsif ((ret_V_reg_211 = ap_const_lv2_2)) then 
                grp_Windowing_fu_108_Buff0_im_q0 <= Buff2_im_q0;
            else 
                grp_Windowing_fu_108_Buff0_im_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_Windowing_fu_108_Buff0_im_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_Windowing_fu_108_Buff0_re_q0_assign_proc : process(Buff0_re_q0, Buff1_re_q0, Buff2_re_q0, ret_V_reg_211, Buff3_re_V_q0, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
            if ((ret_V_reg_211 = ap_const_lv2_3)) then 
                grp_Windowing_fu_108_Buff0_re_q0 <= Buff3_re_V_q0;
            elsif ((ret_V_reg_211 = ap_const_lv2_0)) then 
                grp_Windowing_fu_108_Buff0_re_q0 <= Buff0_re_q0;
            elsif ((ret_V_reg_211 = ap_const_lv2_1)) then 
                grp_Windowing_fu_108_Buff0_re_q0 <= Buff1_re_q0;
            elsif ((ret_V_reg_211 = ap_const_lv2_2)) then 
                grp_Windowing_fu_108_Buff0_re_q0 <= Buff2_re_q0;
            else 
                grp_Windowing_fu_108_Buff0_re_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_Windowing_fu_108_Buff0_re_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_Windowing_fu_108_Buff1_im_q0_assign_proc : process(Buff0_im_q0, Buff1_im_q0, Buff2_im_q0, ret_V_reg_211, Buff3_im_V_q0, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
            if ((ret_V_reg_211 = ap_const_lv2_3)) then 
                grp_Windowing_fu_108_Buff1_im_q0 <= Buff0_im_q0;
            elsif ((ret_V_reg_211 = ap_const_lv2_0)) then 
                grp_Windowing_fu_108_Buff1_im_q0 <= Buff1_im_q0;
            elsif ((ret_V_reg_211 = ap_const_lv2_1)) then 
                grp_Windowing_fu_108_Buff1_im_q0 <= Buff2_im_q0;
            elsif ((ret_V_reg_211 = ap_const_lv2_2)) then 
                grp_Windowing_fu_108_Buff1_im_q0 <= Buff3_im_V_q0;
            else 
                grp_Windowing_fu_108_Buff1_im_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_Windowing_fu_108_Buff1_im_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_Windowing_fu_108_Buff1_re_q0_assign_proc : process(Buff0_re_q0, Buff1_re_q0, Buff2_re_q0, ret_V_reg_211, Buff3_re_V_q0, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
            if ((ret_V_reg_211 = ap_const_lv2_3)) then 
                grp_Windowing_fu_108_Buff1_re_q0 <= Buff0_re_q0;
            elsif ((ret_V_reg_211 = ap_const_lv2_0)) then 
                grp_Windowing_fu_108_Buff1_re_q0 <= Buff1_re_q0;
            elsif ((ret_V_reg_211 = ap_const_lv2_1)) then 
                grp_Windowing_fu_108_Buff1_re_q0 <= Buff2_re_q0;
            elsif ((ret_V_reg_211 = ap_const_lv2_2)) then 
                grp_Windowing_fu_108_Buff1_re_q0 <= Buff3_re_V_q0;
            else 
                grp_Windowing_fu_108_Buff1_re_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_Windowing_fu_108_Buff1_re_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_Windowing_fu_108_Buff2_im_q0_assign_proc : process(Buff0_im_q0, Buff1_im_q0, Buff2_im_q0, ret_V_reg_211, Buff3_im_V_q0, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
            if ((ret_V_reg_211 = ap_const_lv2_3)) then 
                grp_Windowing_fu_108_Buff2_im_q0 <= Buff1_im_q0;
            elsif ((ret_V_reg_211 = ap_const_lv2_0)) then 
                grp_Windowing_fu_108_Buff2_im_q0 <= Buff2_im_q0;
            elsif ((ret_V_reg_211 = ap_const_lv2_1)) then 
                grp_Windowing_fu_108_Buff2_im_q0 <= Buff3_im_V_q0;
            elsif ((ret_V_reg_211 = ap_const_lv2_2)) then 
                grp_Windowing_fu_108_Buff2_im_q0 <= Buff0_im_q0;
            else 
                grp_Windowing_fu_108_Buff2_im_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_Windowing_fu_108_Buff2_im_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_Windowing_fu_108_Buff2_re_q0_assign_proc : process(Buff0_re_q0, Buff1_re_q0, Buff2_re_q0, ret_V_reg_211, Buff3_re_V_q0, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
            if ((ret_V_reg_211 = ap_const_lv2_3)) then 
                grp_Windowing_fu_108_Buff2_re_q0 <= Buff1_re_q0;
            elsif ((ret_V_reg_211 = ap_const_lv2_0)) then 
                grp_Windowing_fu_108_Buff2_re_q0 <= Buff2_re_q0;
            elsif ((ret_V_reg_211 = ap_const_lv2_1)) then 
                grp_Windowing_fu_108_Buff2_re_q0 <= Buff3_re_V_q0;
            elsif ((ret_V_reg_211 = ap_const_lv2_2)) then 
                grp_Windowing_fu_108_Buff2_re_q0 <= Buff0_re_q0;
            else 
                grp_Windowing_fu_108_Buff2_re_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_Windowing_fu_108_Buff2_re_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_Windowing_fu_108_Buff3_im_q0_assign_proc : process(Buff0_im_q0, Buff1_im_q0, Buff2_im_q0, ret_V_reg_211, Buff3_im_V_q0, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
            if ((ret_V_reg_211 = ap_const_lv2_3)) then 
                grp_Windowing_fu_108_Buff3_im_q0 <= Buff2_im_q0;
            elsif ((ret_V_reg_211 = ap_const_lv2_0)) then 
                grp_Windowing_fu_108_Buff3_im_q0 <= Buff3_im_V_q0;
            elsif ((ret_V_reg_211 = ap_const_lv2_1)) then 
                grp_Windowing_fu_108_Buff3_im_q0 <= Buff0_im_q0;
            elsif ((ret_V_reg_211 = ap_const_lv2_2)) then 
                grp_Windowing_fu_108_Buff3_im_q0 <= Buff1_im_q0;
            else 
                grp_Windowing_fu_108_Buff3_im_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_Windowing_fu_108_Buff3_im_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_Windowing_fu_108_Buff3_re_q0_assign_proc : process(Buff0_re_q0, Buff1_re_q0, Buff2_re_q0, ret_V_reg_211, Buff3_re_V_q0, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
            if ((ret_V_reg_211 = ap_const_lv2_3)) then 
                grp_Windowing_fu_108_Buff3_re_q0 <= Buff2_re_q0;
            elsif ((ret_V_reg_211 = ap_const_lv2_0)) then 
                grp_Windowing_fu_108_Buff3_re_q0 <= Buff3_re_V_q0;
            elsif ((ret_V_reg_211 = ap_const_lv2_1)) then 
                grp_Windowing_fu_108_Buff3_re_q0 <= Buff0_re_q0;
            elsif ((ret_V_reg_211 = ap_const_lv2_2)) then 
                grp_Windowing_fu_108_Buff3_re_q0 <= Buff1_re_q0;
            else 
                grp_Windowing_fu_108_Buff3_re_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_Windowing_fu_108_Buff3_re_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_Windowing_fu_108_ap_start <= grp_Windowing_fu_108_ap_start_reg;
    icmp_ln1027_fu_184_p2 <= "1" when (signed(sub_i_i_reg_206) > signed(zext_ln1027_fu_180_p1)) else "0";

    internal_ap_ready_assign_proc : process(ap_CS_fsm_state2, icmp_ln1027_fu_184_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln1027_fu_184_p2 = ap_const_lv1_0))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    num_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, num_empty_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            num_blk_n <= num_empty_n;
        else 
            num_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    num_c44_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, num_c44_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            num_c44_blk_n <= num_c44_full_n;
        else 
            num_c44_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    num_c44_din <= num_dout;

    num_c44_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, num_empty_n, num_c44_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (num_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (num_c44_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            num_c44_write <= ap_const_logic_1;
        else 
            num_c44_write <= ap_const_logic_0;
        end if; 
    end process;

    num_cast2_fu_158_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(num_dout),11));

    num_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, num_empty_n, num_c44_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (num_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (num_c44_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            num_read <= ap_const_logic_1;
        else 
            num_read <= ap_const_logic_0;
        end if; 
    end process;


    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    ret_V_fu_176_p1 <= counter_V_fu_82(2 - 1 downto 0);
    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((real_start = ap_const_logic_1) and (start_once_reg = ap_const_logic_0))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    sub_i_i_fu_162_p2 <= std_logic_vector(unsigned(num_cast2_fu_158_p1) + unsigned(ap_const_lv11_7FD));
    zext_ln1027_fu_180_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(counter_V_fu_82),11));
end behav;
