// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Processing_HW_Windowing_Pipeline_VITIS_LOOP_10799_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        D1_din,
        D1_num_data_valid,
        D1_fifo_cap,
        D1_full_n,
        D1_write,
        Buff0_re_address0,
        Buff0_re_ce0,
        Buff0_re_q0,
        Buff0_im_address0,
        Buff0_im_ce0,
        Buff0_im_q0,
        Buff1_re_address0,
        Buff1_re_ce0,
        Buff1_re_q0,
        Buff1_im_address0,
        Buff1_im_ce0,
        Buff1_im_q0,
        Buff2_re_address0,
        Buff2_re_ce0,
        Buff2_re_q0,
        Buff2_im_address0,
        Buff2_im_ce0,
        Buff2_im_q0,
        Buff3_re_address0,
        Buff3_re_ce0,
        Buff3_re_q0,
        Buff3_im_address0,
        Buff3_im_ce0,
        Buff3_im_q0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [63:0] D1_din;
input  [11:0] D1_num_data_valid;
input  [11:0] D1_fifo_cap;
input   D1_full_n;
output   D1_write;
output  [10:0] Buff0_re_address0;
output   Buff0_re_ce0;
input  [31:0] Buff0_re_q0;
output  [10:0] Buff0_im_address0;
output   Buff0_im_ce0;
input  [31:0] Buff0_im_q0;
output  [10:0] Buff1_re_address0;
output   Buff1_re_ce0;
input  [31:0] Buff1_re_q0;
output  [10:0] Buff1_im_address0;
output   Buff1_im_ce0;
input  [31:0] Buff1_im_q0;
output  [10:0] Buff2_re_address0;
output   Buff2_re_ce0;
input  [31:0] Buff2_re_q0;
output  [10:0] Buff2_im_address0;
output   Buff2_im_ce0;
input  [31:0] Buff2_im_q0;
output  [10:0] Buff3_re_address0;
output   Buff3_re_ce0;
input  [31:0] Buff3_re_q0;
output  [10:0] Buff3_im_address0;
output   Buff3_im_ce0;
input  [31:0] Buff3_im_q0;

reg ap_idle;
reg D1_write;
reg Buff0_re_ce0;
reg Buff0_im_ce0;
reg Buff1_re_ce0;
reg Buff1_im_ce0;
reg Buff2_re_ce0;
reg Buff2_im_ce0;
reg Buff3_re_ce0;
reg Buff3_im_ce0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_state16_pp0_stage0_iter15;
wire    ap_block_state17_pp0_stage0_iter16;
wire    ap_block_state18_pp0_stage0_iter17;
reg    ap_block_state19_pp0_stage0_iter18;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln1027_fu_492_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [10:0] Hann_0_address0;
reg    Hann_0_ce0;
wire   [20:0] Hann_0_q0;
wire   [10:0] Hann_0_address1;
reg    Hann_0_ce1;
wire   [20:0] Hann_0_q1;
wire   [10:0] Hann_0_address2;
reg    Hann_0_ce2;
wire   [20:0] Hann_0_q2;
wire   [10:0] Hann_0_address3;
reg    Hann_0_ce3;
wire   [20:0] Hann_0_q3;
wire   [10:0] Hann_1_address0;
reg    Hann_1_ce0;
wire   [20:0] Hann_1_q0;
wire   [10:0] Hann_1_address1;
reg    Hann_1_ce1;
wire   [20:0] Hann_1_q1;
wire   [10:0] Hann_1_address2;
reg    Hann_1_ce2;
wire   [20:0] Hann_1_q2;
wire   [10:0] Hann_1_address3;
reg    Hann_1_ce3;
wire   [20:0] Hann_1_q3;
wire   [10:0] Hann_2_address0;
reg    Hann_2_ce0;
wire   [20:0] Hann_2_q0;
wire   [10:0] Hann_2_address1;
reg    Hann_2_ce1;
wire   [20:0] Hann_2_q1;
wire   [10:0] Hann_2_address2;
reg    Hann_2_ce2;
wire   [20:0] Hann_2_q2;
wire   [10:0] Hann_2_address3;
reg    Hann_2_ce3;
wire   [20:0] Hann_2_q3;
wire   [10:0] Hann_3_address0;
reg    Hann_3_ce0;
wire   [20:0] Hann_3_q0;
wire   [10:0] Hann_3_address1;
reg    Hann_3_ce1;
wire   [20:0] Hann_3_q1;
wire   [10:0] Hann_3_address2;
reg    Hann_3_ce2;
wire   [20:0] Hann_3_q2;
wire   [10:0] Hann_3_address3;
reg    Hann_3_ce3;
wire   [20:0] Hann_3_q3;
wire   [10:0] Hann_4_address0;
reg    Hann_4_ce0;
wire   [20:0] Hann_4_q0;
wire   [10:0] Hann_4_address1;
reg    Hann_4_ce1;
wire   [20:0] Hann_4_q1;
wire   [10:0] Hann_4_address2;
reg    Hann_4_ce2;
wire   [20:0] Hann_4_q2;
wire   [10:0] Hann_4_address3;
reg    Hann_4_ce3;
wire   [20:0] Hann_4_q3;
reg    D1_blk_n;
wire    ap_block_pp0_stage0;
reg    ap_block_pp0_stage0_11001;
reg   [11:0] j_V_1_reg_1020;
reg   [11:0] j_V_1_reg_1020_pp0_iter1_reg;
reg   [11:0] j_V_1_reg_1020_pp0_iter2_reg;
reg   [11:0] j_V_1_reg_1020_pp0_iter3_reg;
reg   [11:0] j_V_1_reg_1020_pp0_iter4_reg;
reg   [11:0] j_V_1_reg_1020_pp0_iter5_reg;
reg   [11:0] j_V_1_reg_1020_pp0_iter6_reg;
reg   [11:0] j_V_1_reg_1020_pp0_iter7_reg;
reg   [11:0] j_V_1_reg_1020_pp0_iter8_reg;
reg   [11:0] j_V_1_reg_1020_pp0_iter9_reg;
reg   [11:0] j_V_1_reg_1020_pp0_iter10_reg;
reg   [11:0] j_V_1_reg_1020_pp0_iter11_reg;
reg   [11:0] j_V_1_reg_1020_pp0_iter12_reg;
wire   [10:0] lhs_fu_504_p1;
reg   [10:0] lhs_reg_1029;
reg   [10:0] lhs_reg_1029_pp0_iter1_reg;
reg   [10:0] lhs_reg_1029_pp0_iter2_reg;
reg   [10:0] lhs_reg_1029_pp0_iter3_reg;
reg   [10:0] lhs_reg_1029_pp0_iter4_reg;
reg   [10:0] lhs_reg_1029_pp0_iter5_reg;
reg   [10:0] lhs_reg_1029_pp0_iter6_reg;
reg   [10:0] lhs_reg_1029_pp0_iter7_reg;
reg   [10:0] lhs_reg_1029_pp0_iter8_reg;
reg   [10:0] lhs_reg_1029_pp0_iter9_reg;
reg  signed [31:0] tmp_re_V_41_reg_1191;
reg  signed [31:0] tmp_im_V_41_reg_1196;
wire   [20:0] tmp_1_fu_674_p7;
reg   [20:0] tmp_1_reg_1201;
reg  signed [31:0] tmp_re_V_42_reg_1206;
reg  signed [31:0] tmp_im_V_42_reg_1211;
wire   [20:0] tmp_2_fu_694_p7;
reg   [20:0] tmp_2_reg_1216;
reg  signed [31:0] tmp_re_V_43_reg_1221;
reg  signed [31:0] tmp_im_V_43_reg_1226;
wire   [20:0] tmp_3_fu_710_p7;
reg   [20:0] tmp_3_reg_1231;
reg  signed [31:0] tmp_re_V_44_reg_1236;
reg  signed [31:0] tmp_im_V_44_reg_1241;
wire   [20:0] tmp_4_fu_726_p7;
reg   [20:0] tmp_4_reg_1246;
wire  signed [52:0] sext_ln1273_fu_750_p1;
wire  signed [52:0] sext_ln1273_11_fu_771_p1;
wire  signed [52:0] sext_ln1273_12_fu_792_p1;
wire  signed [52:0] sext_ln1273_13_fu_813_p1;
reg   [30:0] tmp_re_V_reg_1315;
reg   [30:0] tmp_im_V_reg_1320;
reg   [30:0] tmp_re_V_35_reg_1325;
reg   [30:0] tmp_im_V_35_reg_1330;
reg   [30:0] tmp_re_V_37_reg_1335;
reg   [30:0] tmp_im_V_37_reg_1340;
reg   [30:0] tmp_re_V_39_reg_1345;
reg   [30:0] tmp_im_V_39_reg_1350;
wire   [31:0] tmp_re_V_40_fu_947_p2;
reg   [31:0] tmp_re_V_40_reg_1355;
wire   [31:0] tmp_im_V_40_fu_965_p2;
reg   [31:0] tmp_im_V_40_reg_1360;
wire   [63:0] zext_ln1027_fu_552_p1;
wire   [63:0] zext_ln10801_3_fu_579_p1;
wire   [63:0] zext_ln10801_fu_597_p1;
wire   [63:0] zext_ln10801_1_fu_615_p1;
wire   [63:0] zext_ln10801_2_fu_633_p1;
reg   [11:0] phi_urem_fu_106;
wire   [11:0] select_ln1027_fu_662_p3;
wire    ap_loop_init;
reg   [23:0] phi_mul_fu_110;
wire   [23:0] add_ln10801_fu_563_p2;
reg   [11:0] j_V_fu_114;
wire   [11:0] add_ln840_fu_498_p2;
reg   [11:0] ap_sig_allocacmp_j_V_1;
reg    ap_block_pp0_stage0_01001;
wire   [10:0] grp_fu_508_p0;
wire   [3:0] grp_fu_508_p1;
wire  signed [11:0] ret_V_fu_519_p3;
wire   [12:0] ret_V_1_fu_530_p3;
wire  signed [12:0] sext_ln10801_fu_541_p1;
wire   [8:0] tmp_fu_569_p4;
wire   [24:0] tmp_5_fu_588_p1;
wire  signed [24:0] grp_fu_978_p2;
wire   [9:0] tmp_5_fu_588_p4;
wire   [26:0] tmp_6_fu_606_p1;
wire  signed [26:0] grp_fu_985_p2;
wire   [10:0] tmp_6_fu_606_p4;
wire   [26:0] tmp_7_fu_624_p1;
wire  signed [26:0] grp_fu_992_p2;
wire   [10:0] tmp_7_fu_624_p4;
wire   [11:0] add_ln1027_fu_650_p2;
wire   [0:0] icmp_ln1027_3_fu_656_p2;
wire   [2:0] tmp_1_fu_674_p6;
wire   [2:0] grp_fu_508_p2;
wire   [2:0] trunc_ln10801_fu_690_p1;
wire  signed [20:0] grp_fu_753_p1;
wire  signed [20:0] grp_fu_762_p1;
wire  signed [20:0] grp_fu_774_p1;
wire  signed [20:0] grp_fu_783_p1;
wire  signed [20:0] grp_fu_795_p1;
wire  signed [20:0] grp_fu_804_p1;
wire  signed [20:0] grp_fu_816_p1;
wire  signed [20:0] grp_fu_825_p1;
wire   [52:0] grp_fu_753_p2;
wire   [52:0] grp_fu_762_p2;
wire   [52:0] grp_fu_774_p2;
wire   [52:0] grp_fu_783_p2;
wire   [52:0] grp_fu_795_p2;
wire   [52:0] grp_fu_804_p2;
wire   [52:0] grp_fu_816_p2;
wire   [52:0] grp_fu_825_p2;
wire  signed [31:0] sext_ln818_2_fu_917_p1;
wire  signed [31:0] sext_ln818_fu_911_p1;
wire  signed [31:0] sext_ln818_4_fu_923_p1;
wire  signed [31:0] sext_ln818_6_fu_929_p1;
wire   [31:0] add_ln813_1_fu_941_p2;
wire   [31:0] add_ln813_fu_935_p2;
wire  signed [31:0] sext_ln818_3_fu_920_p1;
wire  signed [31:0] sext_ln818_1_fu_914_p1;
wire  signed [31:0] sext_ln818_5_fu_926_p1;
wire  signed [31:0] sext_ln818_7_fu_932_p1;
wire   [31:0] add_ln813_4_fu_959_p2;
wire   [31:0] add_ln813_3_fu_953_p2;
wire   [11:0] grp_fu_978_p0;
wire   [12:0] grp_fu_978_p1;
wire   [12:0] grp_fu_985_p0;
wire   [13:0] grp_fu_985_p1;
wire   [12:0] grp_fu_992_p0;
wire   [13:0] grp_fu_992_p1;
reg    grp_fu_508_ce;
reg    grp_fu_753_ce;
reg    grp_fu_762_ce;
reg    grp_fu_774_ce;
reg    grp_fu_783_ce;
reg    grp_fu_795_ce;
reg    grp_fu_804_ce;
reg    grp_fu_816_ce;
reg    grp_fu_825_ce;
reg    grp_fu_978_ce;
reg    grp_fu_985_ce;
reg    grp_fu_992_ce;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [24:0] grp_fu_978_p00;
wire   [26:0] grp_fu_985_p00;
wire   [26:0] grp_fu_992_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_done_reg = 1'b0;
end

Processing_HW_Windowing_Pipeline_VITIS_LOOP_10799_2_Hann_0_ROM_AUTO_1R #(
    .DataWidth( 21 ),
    .AddressRange( 1639 ),
    .AddressWidth( 11 ))
Hann_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Hann_0_address0),
    .ce0(Hann_0_ce0),
    .q0(Hann_0_q0),
    .address1(Hann_0_address1),
    .ce1(Hann_0_ce1),
    .q1(Hann_0_q1),
    .address2(Hann_0_address2),
    .ce2(Hann_0_ce2),
    .q2(Hann_0_q2),
    .address3(Hann_0_address3),
    .ce3(Hann_0_ce3),
    .q3(Hann_0_q3)
);

Processing_HW_Windowing_Pipeline_VITIS_LOOP_10799_2_Hann_1_ROM_AUTO_1R #(
    .DataWidth( 21 ),
    .AddressRange( 1639 ),
    .AddressWidth( 11 ))
Hann_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Hann_1_address0),
    .ce0(Hann_1_ce0),
    .q0(Hann_1_q0),
    .address1(Hann_1_address1),
    .ce1(Hann_1_ce1),
    .q1(Hann_1_q1),
    .address2(Hann_1_address2),
    .ce2(Hann_1_ce2),
    .q2(Hann_1_q2),
    .address3(Hann_1_address3),
    .ce3(Hann_1_ce3),
    .q3(Hann_1_q3)
);

Processing_HW_Windowing_Pipeline_VITIS_LOOP_10799_2_Hann_2_ROM_AUTO_1R #(
    .DataWidth( 21 ),
    .AddressRange( 1639 ),
    .AddressWidth( 11 ))
Hann_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Hann_2_address0),
    .ce0(Hann_2_ce0),
    .q0(Hann_2_q0),
    .address1(Hann_2_address1),
    .ce1(Hann_2_ce1),
    .q1(Hann_2_q1),
    .address2(Hann_2_address2),
    .ce2(Hann_2_ce2),
    .q2(Hann_2_q2),
    .address3(Hann_2_address3),
    .ce3(Hann_2_ce3),
    .q3(Hann_2_q3)
);

Processing_HW_Windowing_Pipeline_VITIS_LOOP_10799_2_Hann_3_ROM_AUTO_1R #(
    .DataWidth( 21 ),
    .AddressRange( 1639 ),
    .AddressWidth( 11 ))
Hann_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Hann_3_address0),
    .ce0(Hann_3_ce0),
    .q0(Hann_3_q0),
    .address1(Hann_3_address1),
    .ce1(Hann_3_ce1),
    .q1(Hann_3_q1),
    .address2(Hann_3_address2),
    .ce2(Hann_3_ce2),
    .q2(Hann_3_q2),
    .address3(Hann_3_address3),
    .ce3(Hann_3_ce3),
    .q3(Hann_3_q3)
);

Processing_HW_Windowing_Pipeline_VITIS_LOOP_10799_2_Hann_4_ROM_AUTO_1R #(
    .DataWidth( 21 ),
    .AddressRange( 1639 ),
    .AddressWidth( 11 ))
Hann_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Hann_4_address0),
    .ce0(Hann_4_ce0),
    .q0(Hann_4_q0),
    .address1(Hann_4_address1),
    .ce1(Hann_4_ce1),
    .q1(Hann_4_q1),
    .address2(Hann_4_address2),
    .ce2(Hann_4_ce2),
    .q2(Hann_4_q2),
    .address3(Hann_4_address3),
    .ce3(Hann_4_ce3),
    .q3(Hann_4_q3)
);

Processing_HW_urem_11ns_4ns_3_15_1 #(
    .ID( 1 ),
    .NUM_STAGE( 15 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 3 ))
urem_11ns_4ns_3_15_1_U37(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_508_p0),
    .din1(grp_fu_508_p1),
    .ce(grp_fu_508_ce),
    .dout(grp_fu_508_p2)
);

Processing_HW_mux_53_21_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 21 ),
    .din1_WIDTH( 21 ),
    .din2_WIDTH( 21 ),
    .din3_WIDTH( 21 ),
    .din4_WIDTH( 21 ),
    .din5_WIDTH( 3 ),
    .dout_WIDTH( 21 ))
mux_53_21_1_1_U38(
    .din0(Hann_0_q3),
    .din1(Hann_1_q3),
    .din2(Hann_2_q3),
    .din3(Hann_3_q3),
    .din4(Hann_4_q3),
    .din5(tmp_1_fu_674_p6),
    .dout(tmp_1_fu_674_p7)
);

Processing_HW_mux_53_21_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 21 ),
    .din1_WIDTH( 21 ),
    .din2_WIDTH( 21 ),
    .din3_WIDTH( 21 ),
    .din4_WIDTH( 21 ),
    .din5_WIDTH( 3 ),
    .dout_WIDTH( 21 ))
mux_53_21_1_1_U39(
    .din0(Hann_3_q2),
    .din1(Hann_4_q2),
    .din2(Hann_0_q2),
    .din3(Hann_1_q2),
    .din4(Hann_2_q2),
    .din5(trunc_ln10801_fu_690_p1),
    .dout(tmp_2_fu_694_p7)
);

Processing_HW_mux_53_21_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 21 ),
    .din1_WIDTH( 21 ),
    .din2_WIDTH( 21 ),
    .din3_WIDTH( 21 ),
    .din4_WIDTH( 21 ),
    .din5_WIDTH( 3 ),
    .dout_WIDTH( 21 ))
mux_53_21_1_1_U40(
    .din0(Hann_1_q1),
    .din1(Hann_2_q1),
    .din2(Hann_3_q1),
    .din3(Hann_4_q1),
    .din4(Hann_0_q1),
    .din5(trunc_ln10801_fu_690_p1),
    .dout(tmp_3_fu_710_p7)
);

Processing_HW_mux_53_21_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 21 ),
    .din1_WIDTH( 21 ),
    .din2_WIDTH( 21 ),
    .din3_WIDTH( 21 ),
    .din4_WIDTH( 21 ),
    .din5_WIDTH( 3 ),
    .dout_WIDTH( 21 ))
mux_53_21_1_1_U41(
    .din0(Hann_4_q0),
    .din1(Hann_0_q0),
    .din2(Hann_1_q0),
    .din3(Hann_2_q0),
    .din4(Hann_3_q0),
    .din5(trunc_ln10801_fu_690_p1),
    .dout(tmp_4_fu_726_p7)
);

Processing_HW_mul_32s_21s_53_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 21 ),
    .dout_WIDTH( 53 ))
mul_32s_21s_53_2_1_U42(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_re_V_41_reg_1191),
    .din1(grp_fu_753_p1),
    .ce(grp_fu_753_ce),
    .dout(grp_fu_753_p2)
);

Processing_HW_mul_32s_21s_53_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 21 ),
    .dout_WIDTH( 53 ))
mul_32s_21s_53_2_1_U43(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_im_V_41_reg_1196),
    .din1(grp_fu_762_p1),
    .ce(grp_fu_762_ce),
    .dout(grp_fu_762_p2)
);

Processing_HW_mul_32s_21s_53_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 21 ),
    .dout_WIDTH( 53 ))
mul_32s_21s_53_2_1_U44(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_re_V_42_reg_1206),
    .din1(grp_fu_774_p1),
    .ce(grp_fu_774_ce),
    .dout(grp_fu_774_p2)
);

Processing_HW_mul_32s_21s_53_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 21 ),
    .dout_WIDTH( 53 ))
mul_32s_21s_53_2_1_U45(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_im_V_42_reg_1211),
    .din1(grp_fu_783_p1),
    .ce(grp_fu_783_ce),
    .dout(grp_fu_783_p2)
);

Processing_HW_mul_32s_21s_53_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 21 ),
    .dout_WIDTH( 53 ))
mul_32s_21s_53_2_1_U46(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_re_V_43_reg_1221),
    .din1(grp_fu_795_p1),
    .ce(grp_fu_795_ce),
    .dout(grp_fu_795_p2)
);

Processing_HW_mul_32s_21s_53_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 21 ),
    .dout_WIDTH( 53 ))
mul_32s_21s_53_2_1_U47(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_im_V_43_reg_1226),
    .din1(grp_fu_804_p1),
    .ce(grp_fu_804_ce),
    .dout(grp_fu_804_p2)
);

Processing_HW_mul_32s_21s_53_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 21 ),
    .dout_WIDTH( 53 ))
mul_32s_21s_53_2_1_U48(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_re_V_44_reg_1236),
    .din1(grp_fu_816_p1),
    .ce(grp_fu_816_ce),
    .dout(grp_fu_816_p2)
);

Processing_HW_mul_32s_21s_53_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 21 ),
    .dout_WIDTH( 53 ))
mul_32s_21s_53_2_1_U49(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_im_V_44_reg_1241),
    .din1(grp_fu_825_p1),
    .ce(grp_fu_825_ce),
    .dout(grp_fu_825_p2)
);

Processing_HW_mul_mul_12ns_13ns_25_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 25 ))
mul_mul_12ns_13ns_25_4_1_U50(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_978_p0),
    .din1(grp_fu_978_p1),
    .ce(grp_fu_978_ce),
    .dout(grp_fu_978_p2)
);

Processing_HW_mul_mul_13ns_14ns_27_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 27 ))
mul_mul_13ns_14ns_27_4_1_U51(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_985_p0),
    .din1(grp_fu_985_p1),
    .ce(grp_fu_985_ce),
    .dout(grp_fu_985_p2)
);

Processing_HW_mul_mul_13ns_14ns_27_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 27 ))
mul_mul_13ns_14ns_27_4_1_U52(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_992_p0),
    .din1(grp_fu_992_p1),
    .ce(grp_fu_992_ce),
    .dout(grp_fu_992_p2)
);

Processing_HW_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter17_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln1027_fu_492_p2 == 1'd0))) begin
            j_V_fu_114 <= add_ln840_fu_498_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            j_V_fu_114 <= 12'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            phi_mul_fu_110 <= 24'd0;
        end else if ((ap_enable_reg_pp0_iter13 == 1'b1)) begin
            phi_mul_fu_110 <= add_ln10801_fu_563_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            phi_urem_fu_106 <= 12'd0;
        end else if ((ap_enable_reg_pp0_iter14 == 1'b1)) begin
            phi_urem_fu_106 <= select_ln1027_fu_662_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        j_V_1_reg_1020_pp0_iter10_reg <= j_V_1_reg_1020_pp0_iter9_reg;
        j_V_1_reg_1020_pp0_iter11_reg <= j_V_1_reg_1020_pp0_iter10_reg;
        j_V_1_reg_1020_pp0_iter12_reg <= j_V_1_reg_1020_pp0_iter11_reg;
        j_V_1_reg_1020_pp0_iter2_reg <= j_V_1_reg_1020_pp0_iter1_reg;
        j_V_1_reg_1020_pp0_iter3_reg <= j_V_1_reg_1020_pp0_iter2_reg;
        j_V_1_reg_1020_pp0_iter4_reg <= j_V_1_reg_1020_pp0_iter3_reg;
        j_V_1_reg_1020_pp0_iter5_reg <= j_V_1_reg_1020_pp0_iter4_reg;
        j_V_1_reg_1020_pp0_iter6_reg <= j_V_1_reg_1020_pp0_iter5_reg;
        j_V_1_reg_1020_pp0_iter7_reg <= j_V_1_reg_1020_pp0_iter6_reg;
        j_V_1_reg_1020_pp0_iter8_reg <= j_V_1_reg_1020_pp0_iter7_reg;
        j_V_1_reg_1020_pp0_iter9_reg <= j_V_1_reg_1020_pp0_iter8_reg;
        lhs_reg_1029_pp0_iter2_reg <= lhs_reg_1029_pp0_iter1_reg;
        lhs_reg_1029_pp0_iter3_reg <= lhs_reg_1029_pp0_iter2_reg;
        lhs_reg_1029_pp0_iter4_reg <= lhs_reg_1029_pp0_iter3_reg;
        lhs_reg_1029_pp0_iter5_reg <= lhs_reg_1029_pp0_iter4_reg;
        lhs_reg_1029_pp0_iter6_reg <= lhs_reg_1029_pp0_iter5_reg;
        lhs_reg_1029_pp0_iter7_reg <= lhs_reg_1029_pp0_iter6_reg;
        lhs_reg_1029_pp0_iter8_reg <= lhs_reg_1029_pp0_iter7_reg;
        lhs_reg_1029_pp0_iter9_reg <= lhs_reg_1029_pp0_iter8_reg;
        tmp_1_reg_1201 <= tmp_1_fu_674_p7;
        tmp_2_reg_1216 <= tmp_2_fu_694_p7;
        tmp_3_reg_1231 <= tmp_3_fu_710_p7;
        tmp_4_reg_1246 <= tmp_4_fu_726_p7;
        tmp_im_V_35_reg_1330 <= {{grp_fu_783_p2[52:22]}};
        tmp_im_V_37_reg_1340 <= {{grp_fu_804_p2[52:22]}};
        tmp_im_V_39_reg_1350 <= {{grp_fu_825_p2[52:22]}};
        tmp_im_V_40_reg_1360 <= tmp_im_V_40_fu_965_p2;
        tmp_im_V_41_reg_1196 <= Buff0_im_q0;
        tmp_im_V_42_reg_1211 <= Buff1_im_q0;
        tmp_im_V_43_reg_1226 <= Buff2_im_q0;
        tmp_im_V_44_reg_1241 <= Buff3_im_q0;
        tmp_im_V_reg_1320 <= {{grp_fu_762_p2[52:22]}};
        tmp_re_V_35_reg_1325 <= {{grp_fu_774_p2[52:22]}};
        tmp_re_V_37_reg_1335 <= {{grp_fu_795_p2[52:22]}};
        tmp_re_V_39_reg_1345 <= {{grp_fu_816_p2[52:22]}};
        tmp_re_V_40_reg_1355 <= tmp_re_V_40_fu_947_p2;
        tmp_re_V_41_reg_1191 <= Buff0_re_q0;
        tmp_re_V_42_reg_1206 <= Buff1_re_q0;
        tmp_re_V_43_reg_1221 <= Buff2_re_q0;
        tmp_re_V_44_reg_1236 <= Buff3_re_q0;
        tmp_re_V_reg_1315 <= {{grp_fu_753_p2[52:22]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        j_V_1_reg_1020 <= ap_sig_allocacmp_j_V_1;
        j_V_1_reg_1020_pp0_iter1_reg <= j_V_1_reg_1020;
        lhs_reg_1029_pp0_iter1_reg <= lhs_reg_1029;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1027_fu_492_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        lhs_reg_1029 <= lhs_fu_504_p1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        Buff0_im_ce0 = 1'b1;
    end else begin
        Buff0_im_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        Buff0_re_ce0 = 1'b1;
    end else begin
        Buff0_re_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        Buff1_im_ce0 = 1'b1;
    end else begin
        Buff1_im_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        Buff1_re_ce0 = 1'b1;
    end else begin
        Buff1_re_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        Buff2_im_ce0 = 1'b1;
    end else begin
        Buff2_im_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        Buff2_re_ce0 = 1'b1;
    end else begin
        Buff2_re_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        Buff3_im_ce0 = 1'b1;
    end else begin
        Buff3_im_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        Buff3_re_ce0 = 1'b1;
    end else begin
        Buff3_re_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        D1_blk_n = D1_full_n;
    end else begin
        D1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        D1_write = 1'b1;
    end else begin
        D1_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        Hann_0_ce0 = 1'b1;
    end else begin
        Hann_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        Hann_0_ce1 = 1'b1;
    end else begin
        Hann_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        Hann_0_ce2 = 1'b1;
    end else begin
        Hann_0_ce2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        Hann_0_ce3 = 1'b1;
    end else begin
        Hann_0_ce3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        Hann_1_ce0 = 1'b1;
    end else begin
        Hann_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        Hann_1_ce1 = 1'b1;
    end else begin
        Hann_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        Hann_1_ce2 = 1'b1;
    end else begin
        Hann_1_ce2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        Hann_1_ce3 = 1'b1;
    end else begin
        Hann_1_ce3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        Hann_2_ce0 = 1'b1;
    end else begin
        Hann_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        Hann_2_ce1 = 1'b1;
    end else begin
        Hann_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        Hann_2_ce2 = 1'b1;
    end else begin
        Hann_2_ce2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        Hann_2_ce3 = 1'b1;
    end else begin
        Hann_2_ce3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        Hann_3_ce0 = 1'b1;
    end else begin
        Hann_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        Hann_3_ce1 = 1'b1;
    end else begin
        Hann_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        Hann_3_ce2 = 1'b1;
    end else begin
        Hann_3_ce2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        Hann_3_ce3 = 1'b1;
    end else begin
        Hann_3_ce3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        Hann_4_ce0 = 1'b1;
    end else begin
        Hann_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        Hann_4_ce1 = 1'b1;
    end else begin
        Hann_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        Hann_4_ce2 = 1'b1;
    end else begin
        Hann_4_ce2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        Hann_4_ce3 = 1'b1;
    end else begin
        Hann_4_ce3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1027_fu_492_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter17_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_j_V_1 = 12'd0;
    end else begin
        ap_sig_allocacmp_j_V_1 = j_V_fu_114;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_508_ce = 1'b1;
    end else begin
        grp_fu_508_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_753_ce = 1'b1;
    end else begin
        grp_fu_753_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_762_ce = 1'b1;
    end else begin
        grp_fu_762_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_774_ce = 1'b1;
    end else begin
        grp_fu_774_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_783_ce = 1'b1;
    end else begin
        grp_fu_783_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_795_ce = 1'b1;
    end else begin
        grp_fu_795_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_804_ce = 1'b1;
    end else begin
        grp_fu_804_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_816_ce = 1'b1;
    end else begin
        grp_fu_816_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_825_ce = 1'b1;
    end else begin
        grp_fu_825_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_978_ce = 1'b1;
    end else begin
        grp_fu_978_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_985_ce = 1'b1;
    end else begin
        grp_fu_985_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_992_ce = 1'b1;
    end else begin
        grp_fu_992_ce = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Buff0_im_address0 = zext_ln1027_fu_552_p1;

assign Buff0_re_address0 = zext_ln1027_fu_552_p1;

assign Buff1_im_address0 = zext_ln1027_fu_552_p1;

assign Buff1_re_address0 = zext_ln1027_fu_552_p1;

assign Buff2_im_address0 = zext_ln1027_fu_552_p1;

assign Buff2_re_address0 = zext_ln1027_fu_552_p1;

assign Buff3_im_address0 = zext_ln1027_fu_552_p1;

assign Buff3_re_address0 = zext_ln1027_fu_552_p1;

assign D1_din = {{tmp_im_V_40_reg_1360}, {tmp_re_V_40_reg_1355}};

assign Hann_0_address0 = zext_ln10801_2_fu_633_p1;

assign Hann_0_address1 = zext_ln10801_1_fu_615_p1;

assign Hann_0_address2 = zext_ln10801_fu_597_p1;

assign Hann_0_address3 = zext_ln10801_3_fu_579_p1;

assign Hann_1_address0 = zext_ln10801_2_fu_633_p1;

assign Hann_1_address1 = zext_ln10801_1_fu_615_p1;

assign Hann_1_address2 = zext_ln10801_fu_597_p1;

assign Hann_1_address3 = zext_ln10801_3_fu_579_p1;

assign Hann_2_address0 = zext_ln10801_2_fu_633_p1;

assign Hann_2_address1 = zext_ln10801_1_fu_615_p1;

assign Hann_2_address2 = zext_ln10801_fu_597_p1;

assign Hann_2_address3 = zext_ln10801_3_fu_579_p1;

assign Hann_3_address0 = zext_ln10801_2_fu_633_p1;

assign Hann_3_address1 = zext_ln10801_1_fu_615_p1;

assign Hann_3_address2 = zext_ln10801_fu_597_p1;

assign Hann_3_address3 = zext_ln10801_3_fu_579_p1;

assign Hann_4_address0 = zext_ln10801_2_fu_633_p1;

assign Hann_4_address1 = zext_ln10801_1_fu_615_p1;

assign Hann_4_address2 = zext_ln10801_fu_597_p1;

assign Hann_4_address3 = zext_ln10801_3_fu_579_p1;

assign add_ln1027_fu_650_p2 = (phi_urem_fu_106 + 12'd1);

assign add_ln10801_fu_563_p2 = (phi_mul_fu_110 + 24'd6554);

assign add_ln813_1_fu_941_p2 = ($signed(sext_ln818_4_fu_923_p1) + $signed(sext_ln818_6_fu_929_p1));

assign add_ln813_3_fu_953_p2 = ($signed(sext_ln818_3_fu_920_p1) + $signed(sext_ln818_1_fu_914_p1));

assign add_ln813_4_fu_959_p2 = ($signed(sext_ln818_5_fu_926_p1) + $signed(sext_ln818_7_fu_932_p1));

assign add_ln813_fu_935_p2 = ($signed(sext_ln818_2_fu_917_p1) + $signed(sext_ln818_fu_911_p1));

assign add_ln840_fu_498_p2 = (ap_sig_allocacmp_j_V_1 + 12'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b0 == D1_full_n));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b0 == D1_full_n));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b0 == D1_full_n));
end

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state19_pp0_stage0_iter18 = (1'b0 == D1_full_n);
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign grp_fu_508_p0 = ap_sig_allocacmp_j_V_1[10:0];

assign grp_fu_508_p1 = 11'd5;

assign grp_fu_753_p1 = sext_ln1273_fu_750_p1;

assign grp_fu_762_p1 = sext_ln1273_fu_750_p1;

assign grp_fu_774_p1 = sext_ln1273_11_fu_771_p1;

assign grp_fu_783_p1 = sext_ln1273_11_fu_771_p1;

assign grp_fu_795_p1 = sext_ln1273_12_fu_792_p1;

assign grp_fu_804_p1 = sext_ln1273_12_fu_792_p1;

assign grp_fu_816_p1 = sext_ln1273_13_fu_813_p1;

assign grp_fu_825_p1 = sext_ln1273_13_fu_813_p1;

assign grp_fu_978_p0 = grp_fu_978_p00;

assign grp_fu_978_p00 = $unsigned(ret_V_fu_519_p3);

assign grp_fu_978_p1 = 25'd6554;

assign grp_fu_985_p0 = grp_fu_985_p00;

assign grp_fu_985_p00 = ret_V_1_fu_530_p3;

assign grp_fu_985_p1 = 27'd13108;

assign grp_fu_992_p0 = grp_fu_992_p00;

assign grp_fu_992_p00 = $unsigned(sext_ln10801_fu_541_p1);

assign grp_fu_992_p1 = 27'd13108;

assign icmp_ln1027_3_fu_656_p2 = ((add_ln1027_fu_650_p2 < 12'd5) ? 1'b1 : 1'b0);

assign icmp_ln1027_fu_492_p2 = ((ap_sig_allocacmp_j_V_1 == 12'd2048) ? 1'b1 : 1'b0);

assign lhs_fu_504_p1 = ap_sig_allocacmp_j_V_1[10:0];

assign ret_V_1_fu_530_p3 = {{2'd2}, {lhs_reg_1029_pp0_iter9_reg}};

assign ret_V_fu_519_p3 = {{1'd1}, {lhs_reg_1029_pp0_iter9_reg}};

assign select_ln1027_fu_662_p3 = ((icmp_ln1027_3_fu_656_p2[0:0] == 1'b1) ? add_ln1027_fu_650_p2 : 12'd0);

assign sext_ln10801_fu_541_p1 = ret_V_fu_519_p3;

assign sext_ln1273_11_fu_771_p1 = $signed(tmp_2_reg_1216);

assign sext_ln1273_12_fu_792_p1 = $signed(tmp_3_reg_1231);

assign sext_ln1273_13_fu_813_p1 = $signed(tmp_4_reg_1246);

assign sext_ln1273_fu_750_p1 = $signed(tmp_1_reg_1201);

assign sext_ln818_1_fu_914_p1 = $signed(tmp_im_V_reg_1320);

assign sext_ln818_2_fu_917_p1 = $signed(tmp_re_V_35_reg_1325);

assign sext_ln818_3_fu_920_p1 = $signed(tmp_im_V_35_reg_1330);

assign sext_ln818_4_fu_923_p1 = $signed(tmp_re_V_37_reg_1335);

assign sext_ln818_5_fu_926_p1 = $signed(tmp_im_V_37_reg_1340);

assign sext_ln818_6_fu_929_p1 = $signed(tmp_re_V_39_reg_1345);

assign sext_ln818_7_fu_932_p1 = $signed(tmp_im_V_39_reg_1350);

assign sext_ln818_fu_911_p1 = $signed(tmp_re_V_reg_1315);

assign tmp_1_fu_674_p6 = phi_urem_fu_106[2:0];

assign tmp_5_fu_588_p1 = grp_fu_978_p2;

assign tmp_5_fu_588_p4 = {{tmp_5_fu_588_p1[24:15]}};

assign tmp_6_fu_606_p1 = grp_fu_985_p2;

assign tmp_6_fu_606_p4 = {{tmp_6_fu_606_p1[26:16]}};

assign tmp_7_fu_624_p1 = grp_fu_992_p2;

assign tmp_7_fu_624_p4 = {{tmp_7_fu_624_p1[26:16]}};

assign tmp_fu_569_p4 = {{phi_mul_fu_110[23:15]}};

assign tmp_im_V_40_fu_965_p2 = (add_ln813_4_fu_959_p2 + add_ln813_3_fu_953_p2);

assign tmp_re_V_40_fu_947_p2 = (add_ln813_1_fu_941_p2 + add_ln813_fu_935_p2);

assign trunc_ln10801_fu_690_p1 = grp_fu_508_p2[2:0];

assign zext_ln1027_fu_552_p1 = j_V_1_reg_1020_pp0_iter12_reg;

assign zext_ln10801_1_fu_615_p1 = tmp_6_fu_606_p4;

assign zext_ln10801_2_fu_633_p1 = tmp_7_fu_624_p4;

assign zext_ln10801_3_fu_579_p1 = tmp_fu_569_p4;

assign zext_ln10801_fu_597_p1 = tmp_5_fu_588_p4;

endmodule //Processing_HW_Windowing_Pipeline_VITIS_LOOP_10799_2
