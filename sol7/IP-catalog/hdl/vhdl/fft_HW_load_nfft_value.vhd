-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity fft_HW_load_nfft_value is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    m_axi_gmem_AWVALID : OUT STD_LOGIC;
    m_axi_gmem_AWREADY : IN STD_LOGIC;
    m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_WVALID : OUT STD_LOGIC;
    m_axi_gmem_WREADY : IN STD_LOGIC;
    m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_WLAST : OUT STD_LOGIC;
    m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_ARVALID : OUT STD_LOGIC;
    m_axi_gmem_ARREADY : IN STD_LOGIC;
    m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_RVALID : IN STD_LOGIC;
    m_axi_gmem_RREADY : OUT STD_LOGIC;
    m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem_RLAST : IN STD_LOGIC;
    m_axi_gmem_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
    m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BVALID : IN STD_LOGIC;
    m_axi_gmem_BREADY : OUT STD_LOGIC;
    m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    in_r : IN STD_LOGIC_VECTOR (63 downto 0);
    S0_din : OUT STD_LOGIC_VECTOR (63 downto 0);
    S0_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
    S0_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
    S0_full_n : IN STD_LOGIC;
    S0_write : OUT STD_LOGIC;
    numFFT : IN STD_LOGIC_VECTOR (31 downto 0);
    num_c36_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    num_c36_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    num_c36_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    num_c36_full_n : IN STD_LOGIC;
    num_c36_write : OUT STD_LOGIC );
end;


architecture behav of fft_HW_load_nfft_value is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (10 downto 0) := "00000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (10 downto 0) := "00000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (10 downto 0) := "00000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (10 downto 0) := "00000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (10 downto 0) := "00000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (10 downto 0) := "00001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (10 downto 0) := "00010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (10 downto 0) := "00100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (10 downto 0) := "01000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (10 downto 0) := "10000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";

attribute shreg_extract : string;
    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal gmem_blk_n_AR : STD_LOGIC;
    signal num_c36_blk_n : STD_LOGIC;
    signal shl_ln119_fu_123_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln_fu_130_p4 : STD_LOGIC_VECTOR (60 downto 0);
    signal trunc_ln_reg_192 : STD_LOGIC_VECTOR (60 downto 0);
    signal BufferIN_V_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal BufferIN_V_ce0 : STD_LOGIC;
    signal BufferIN_V_we0 : STD_LOGIC;
    signal BufferIN_V_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal BufferIN_V_1_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal BufferIN_V_1_ce0 : STD_LOGIC;
    signal BufferIN_V_1_we0 : STD_LOGIC;
    signal BufferIN_V_1_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_ap_start : STD_LOGIC;
    signal grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_ap_done : STD_LOGIC;
    signal grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_ap_idle : STD_LOGIC;
    signal grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_ap_ready : STD_LOGIC;
    signal grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_m_axi_gmem_AWVALID : STD_LOGIC;
    signal grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_m_axi_gmem_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_m_axi_gmem_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_m_axi_gmem_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_m_axi_gmem_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_m_axi_gmem_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_m_axi_gmem_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_m_axi_gmem_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_m_axi_gmem_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_m_axi_gmem_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_m_axi_gmem_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_m_axi_gmem_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_m_axi_gmem_WVALID : STD_LOGIC;
    signal grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_m_axi_gmem_WDATA : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_m_axi_gmem_WSTRB : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_m_axi_gmem_WLAST : STD_LOGIC;
    signal grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_m_axi_gmem_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_m_axi_gmem_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_m_axi_gmem_ARVALID : STD_LOGIC;
    signal grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_m_axi_gmem_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_m_axi_gmem_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_m_axi_gmem_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_m_axi_gmem_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_m_axi_gmem_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_m_axi_gmem_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_m_axi_gmem_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_m_axi_gmem_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_m_axi_gmem_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_m_axi_gmem_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_m_axi_gmem_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_m_axi_gmem_RREADY : STD_LOGIC;
    signal grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_m_axi_gmem_BREADY : STD_LOGIC;
    signal grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_BufferIN_V_1_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_BufferIN_V_1_ce0 : STD_LOGIC;
    signal grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_BufferIN_V_1_we0 : STD_LOGIC;
    signal grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_BufferIN_V_1_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_BufferIN_V_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_BufferIN_V_ce0 : STD_LOGIC;
    signal grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_BufferIN_V_we0 : STD_LOGIC;
    signal grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_BufferIN_V_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_load_nfft_value_Pipeline_VITIS_LOOP_126_3_fu_115_ap_start : STD_LOGIC;
    signal grp_load_nfft_value_Pipeline_VITIS_LOOP_126_3_fu_115_ap_done : STD_LOGIC;
    signal grp_load_nfft_value_Pipeline_VITIS_LOOP_126_3_fu_115_ap_idle : STD_LOGIC;
    signal grp_load_nfft_value_Pipeline_VITIS_LOOP_126_3_fu_115_ap_ready : STD_LOGIC;
    signal grp_load_nfft_value_Pipeline_VITIS_LOOP_126_3_fu_115_S0_din : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_load_nfft_value_Pipeline_VITIS_LOOP_126_3_fu_115_S0_write : STD_LOGIC;
    signal grp_load_nfft_value_Pipeline_VITIS_LOOP_126_3_fu_115_BufferIN_V_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_load_nfft_value_Pipeline_VITIS_LOOP_126_3_fu_115_BufferIN_V_ce0 : STD_LOGIC;
    signal grp_load_nfft_value_Pipeline_VITIS_LOOP_126_3_fu_115_BufferIN_V_1_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_load_nfft_value_Pipeline_VITIS_LOOP_126_3_fu_115_BufferIN_V_1_ce0 : STD_LOGIC;
    signal grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal icmp_ln1027_fu_159_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal grp_load_nfft_value_Pipeline_VITIS_LOOP_126_3_fu_115_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal sext_ln119_fu_140_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal counter_V_fu_68 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln840_fu_164_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component fft_HW_load_nfft_value_Pipeline_VITIS_LOOP_121_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_gmem_AWVALID : OUT STD_LOGIC;
        m_axi_gmem_AWREADY : IN STD_LOGIC;
        m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_WVALID : OUT STD_LOGIC;
        m_axi_gmem_WREADY : IN STD_LOGIC;
        m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (7 downto 0);
        m_axi_gmem_WLAST : OUT STD_LOGIC;
        m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_ARVALID : OUT STD_LOGIC;
        m_axi_gmem_ARREADY : IN STD_LOGIC;
        m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RVALID : IN STD_LOGIC;
        m_axi_gmem_RREADY : OUT STD_LOGIC;
        m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_RLAST : IN STD_LOGIC;
        m_axi_gmem_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_BVALID : IN STD_LOGIC;
        m_axi_gmem_BREADY : OUT STD_LOGIC;
        m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        sext_ln119 : IN STD_LOGIC_VECTOR (60 downto 0);
        BufferIN_V_1_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        BufferIN_V_1_ce0 : OUT STD_LOGIC;
        BufferIN_V_1_we0 : OUT STD_LOGIC;
        BufferIN_V_1_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        BufferIN_V_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        BufferIN_V_ce0 : OUT STD_LOGIC;
        BufferIN_V_we0 : OUT STD_LOGIC;
        BufferIN_V_d0 : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component fft_HW_load_nfft_value_Pipeline_VITIS_LOOP_126_3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        S0_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        S0_num_data_valid : IN STD_LOGIC_VECTOR (10 downto 0);
        S0_fifo_cap : IN STD_LOGIC_VECTOR (10 downto 0);
        S0_full_n : IN STD_LOGIC;
        S0_write : OUT STD_LOGIC;
        BufferIN_V_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        BufferIN_V_ce0 : OUT STD_LOGIC;
        BufferIN_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        BufferIN_V_1_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        BufferIN_V_1_ce0 : OUT STD_LOGIC;
        BufferIN_V_1_q0 : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component fft_HW_load_nfft_value_BufferIN_V_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (63 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;



begin
    BufferIN_V_U : component fft_HW_load_nfft_value_BufferIN_V_RAM_AUTO_1R1W
    generic map (
        DataWidth => 64,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => BufferIN_V_address0,
        ce0 => BufferIN_V_ce0,
        we0 => BufferIN_V_we0,
        d0 => grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_BufferIN_V_d0,
        q0 => BufferIN_V_q0);

    BufferIN_V_1_U : component fft_HW_load_nfft_value_BufferIN_V_RAM_AUTO_1R1W
    generic map (
        DataWidth => 64,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => BufferIN_V_1_address0,
        ce0 => BufferIN_V_1_ce0,
        we0 => BufferIN_V_1_we0,
        d0 => grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_BufferIN_V_1_d0,
        q0 => BufferIN_V_1_q0);

    grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106 : component fft_HW_load_nfft_value_Pipeline_VITIS_LOOP_121_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_ap_start,
        ap_done => grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_ap_done,
        ap_idle => grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_ap_idle,
        ap_ready => grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_ap_ready,
        m_axi_gmem_AWVALID => grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY => ap_const_logic_0,
        m_axi_gmem_AWADDR => grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_m_axi_gmem_AWADDR,
        m_axi_gmem_AWID => grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_m_axi_gmem_AWID,
        m_axi_gmem_AWLEN => grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE => grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST => grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK => grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE => grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT => grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS => grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION => grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER => grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID => grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_m_axi_gmem_WVALID,
        m_axi_gmem_WREADY => ap_const_logic_0,
        m_axi_gmem_WDATA => grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB => grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST => grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_m_axi_gmem_WLAST,
        m_axi_gmem_WID => grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_m_axi_gmem_WID,
        m_axi_gmem_WUSER => grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID => grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY => m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR => grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_m_axi_gmem_ARADDR,
        m_axi_gmem_ARID => grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_m_axi_gmem_ARID,
        m_axi_gmem_ARLEN => grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE => grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST => grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK => grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE => grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT => grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS => grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION => grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER => grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID => m_axi_gmem_RVALID,
        m_axi_gmem_RREADY => grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_m_axi_gmem_RREADY,
        m_axi_gmem_RDATA => m_axi_gmem_RDATA,
        m_axi_gmem_RLAST => m_axi_gmem_RLAST,
        m_axi_gmem_RID => m_axi_gmem_RID,
        m_axi_gmem_RFIFONUM => m_axi_gmem_RFIFONUM,
        m_axi_gmem_RUSER => m_axi_gmem_RUSER,
        m_axi_gmem_RRESP => m_axi_gmem_RRESP,
        m_axi_gmem_BVALID => ap_const_logic_0,
        m_axi_gmem_BREADY => grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_m_axi_gmem_BREADY,
        m_axi_gmem_BRESP => ap_const_lv2_0,
        m_axi_gmem_BID => ap_const_lv1_0,
        m_axi_gmem_BUSER => ap_const_lv1_0,
        sext_ln119 => trunc_ln_reg_192,
        BufferIN_V_1_address0 => grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_BufferIN_V_1_address0,
        BufferIN_V_1_ce0 => grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_BufferIN_V_1_ce0,
        BufferIN_V_1_we0 => grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_BufferIN_V_1_we0,
        BufferIN_V_1_d0 => grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_BufferIN_V_1_d0,
        BufferIN_V_address0 => grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_BufferIN_V_address0,
        BufferIN_V_ce0 => grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_BufferIN_V_ce0,
        BufferIN_V_we0 => grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_BufferIN_V_we0,
        BufferIN_V_d0 => grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_BufferIN_V_d0);

    grp_load_nfft_value_Pipeline_VITIS_LOOP_126_3_fu_115 : component fft_HW_load_nfft_value_Pipeline_VITIS_LOOP_126_3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_load_nfft_value_Pipeline_VITIS_LOOP_126_3_fu_115_ap_start,
        ap_done => grp_load_nfft_value_Pipeline_VITIS_LOOP_126_3_fu_115_ap_done,
        ap_idle => grp_load_nfft_value_Pipeline_VITIS_LOOP_126_3_fu_115_ap_idle,
        ap_ready => grp_load_nfft_value_Pipeline_VITIS_LOOP_126_3_fu_115_ap_ready,
        S0_din => grp_load_nfft_value_Pipeline_VITIS_LOOP_126_3_fu_115_S0_din,
        S0_num_data_valid => ap_const_lv11_0,
        S0_fifo_cap => ap_const_lv11_0,
        S0_full_n => S0_full_n,
        S0_write => grp_load_nfft_value_Pipeline_VITIS_LOOP_126_3_fu_115_S0_write,
        BufferIN_V_address0 => grp_load_nfft_value_Pipeline_VITIS_LOOP_126_3_fu_115_BufferIN_V_address0,
        BufferIN_V_ce0 => grp_load_nfft_value_Pipeline_VITIS_LOOP_126_3_fu_115_BufferIN_V_ce0,
        BufferIN_V_q0 => BufferIN_V_q0,
        BufferIN_V_1_address0 => grp_load_nfft_value_Pipeline_VITIS_LOOP_126_3_fu_115_BufferIN_V_1_address0,
        BufferIN_V_1_ce0 => grp_load_nfft_value_Pipeline_VITIS_LOOP_126_3_fu_115_BufferIN_V_1_ce0,
        BufferIN_V_1_q0 => BufferIN_V_1_q0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((icmp_ln1027_fu_159_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln1027_fu_159_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                    grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_ap_ready = ap_const_logic_1)) then 
                    grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_load_nfft_value_Pipeline_VITIS_LOOP_126_3_fu_115_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_load_nfft_value_Pipeline_VITIS_LOOP_126_3_fu_115_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                    grp_load_nfft_value_Pipeline_VITIS_LOOP_126_3_fu_115_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_load_nfft_value_Pipeline_VITIS_LOOP_126_3_fu_115_ap_ready = ap_const_logic_1)) then 
                    grp_load_nfft_value_Pipeline_VITIS_LOOP_126_3_fu_115_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    counter_V_fu_68_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((m_axi_gmem_ARREADY = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0) or (num_c36_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                counter_V_fu_68 <= ap_const_lv32_0;
            elsif (((icmp_ln1027_fu_159_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                counter_V_fu_68 <= add_ln840_fu_164_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                trunc_ln_reg_192 <= in_r(63 downto 3);
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, m_axi_gmem_ARREADY, num_c36_full_n, grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_ap_done, grp_load_nfft_value_Pipeline_VITIS_LOOP_126_3_fu_115_ap_done, ap_CS_fsm_state8, icmp_ln1027_fu_159_p2, ap_CS_fsm_state9, ap_CS_fsm_state11)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((m_axi_gmem_ARREADY = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0) or (num_c36_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                if (((icmp_ln1027_fu_159_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state9 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state9) and (grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                if (((grp_load_nfft_value_Pipeline_VITIS_LOOP_126_3_fu_115_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXX";
        end case;
    end process;

    BufferIN_V_1_address0_assign_proc : process(grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_BufferIN_V_1_address0, grp_load_nfft_value_Pipeline_VITIS_LOOP_126_3_fu_115_BufferIN_V_1_address0, ap_CS_fsm_state9, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            BufferIN_V_1_address0 <= grp_load_nfft_value_Pipeline_VITIS_LOOP_126_3_fu_115_BufferIN_V_1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            BufferIN_V_1_address0 <= grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_BufferIN_V_1_address0;
        else 
            BufferIN_V_1_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    BufferIN_V_1_ce0_assign_proc : process(grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_BufferIN_V_1_ce0, grp_load_nfft_value_Pipeline_VITIS_LOOP_126_3_fu_115_BufferIN_V_1_ce0, ap_CS_fsm_state9, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            BufferIN_V_1_ce0 <= grp_load_nfft_value_Pipeline_VITIS_LOOP_126_3_fu_115_BufferIN_V_1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            BufferIN_V_1_ce0 <= grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_BufferIN_V_1_ce0;
        else 
            BufferIN_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    BufferIN_V_1_we0_assign_proc : process(grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_BufferIN_V_1_we0, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            BufferIN_V_1_we0 <= grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_BufferIN_V_1_we0;
        else 
            BufferIN_V_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    BufferIN_V_address0_assign_proc : process(grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_BufferIN_V_address0, grp_load_nfft_value_Pipeline_VITIS_LOOP_126_3_fu_115_BufferIN_V_address0, ap_CS_fsm_state9, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            BufferIN_V_address0 <= grp_load_nfft_value_Pipeline_VITIS_LOOP_126_3_fu_115_BufferIN_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            BufferIN_V_address0 <= grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_BufferIN_V_address0;
        else 
            BufferIN_V_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    BufferIN_V_ce0_assign_proc : process(grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_BufferIN_V_ce0, grp_load_nfft_value_Pipeline_VITIS_LOOP_126_3_fu_115_BufferIN_V_ce0, ap_CS_fsm_state9, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            BufferIN_V_ce0 <= grp_load_nfft_value_Pipeline_VITIS_LOOP_126_3_fu_115_BufferIN_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            BufferIN_V_ce0 <= grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_BufferIN_V_ce0;
        else 
            BufferIN_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    BufferIN_V_we0_assign_proc : process(grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_BufferIN_V_we0, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            BufferIN_V_we0 <= grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_BufferIN_V_we0;
        else 
            BufferIN_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    S0_din <= grp_load_nfft_value_Pipeline_VITIS_LOOP_126_3_fu_115_S0_din;

    S0_write_assign_proc : process(grp_load_nfft_value_Pipeline_VITIS_LOOP_126_3_fu_115_S0_write, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            S0_write <= grp_load_nfft_value_Pipeline_VITIS_LOOP_126_3_fu_115_S0_write;
        else 
            S0_write <= ap_const_logic_0;
        end if; 
    end process;

    add_ln840_fu_164_p2 <= std_logic_vector(unsigned(counter_V_fu_68) + unsigned(ap_const_lv32_1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;

    ap_ST_fsm_state11_blk_assign_proc : process(grp_load_nfft_value_Pipeline_VITIS_LOOP_126_3_fu_115_ap_done)
    begin
        if ((grp_load_nfft_value_Pipeline_VITIS_LOOP_126_3_fu_115_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state11_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state11_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state1_blk_assign_proc : process(real_start, ap_done_reg, m_axi_gmem_ARREADY, num_c36_full_n)
    begin
        if (((m_axi_gmem_ARREADY = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0) or (num_c36_full_n = ap_const_logic_0))) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;

    ap_ST_fsm_state9_blk_assign_proc : process(grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_ap_done)
    begin
        if ((grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state9_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state9_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg, num_c36_full_n)
    begin
                ap_block_state1 <= ((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0) or (num_c36_full_n = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state8, icmp_ln1027_fu_159_p2)
    begin
        if (((icmp_ln1027_fu_159_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (real_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_ready <= internal_ap_ready;

    gmem_blk_n_AR_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, m_axi_gmem_ARREADY)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            gmem_blk_n_AR <= m_axi_gmem_ARREADY;
        else 
            gmem_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;

    grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_ap_start <= grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_ap_start_reg;
    grp_load_nfft_value_Pipeline_VITIS_LOOP_126_3_fu_115_ap_start <= grp_load_nfft_value_Pipeline_VITIS_LOOP_126_3_fu_115_ap_start_reg;
    icmp_ln1027_fu_159_p2 <= "1" when (counter_V_fu_68 = numFFT) else "0";

    internal_ap_ready_assign_proc : process(ap_CS_fsm_state8, icmp_ln1027_fu_159_p2)
    begin
        if (((icmp_ln1027_fu_159_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    m_axi_gmem_ARADDR_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, m_axi_gmem_ARREADY, num_c36_full_n, grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_m_axi_gmem_ARADDR, ap_CS_fsm_state8, icmp_ln1027_fu_159_p2, ap_CS_fsm_state9, sext_ln119_fu_140_p1)
    begin
        if ((not(((m_axi_gmem_ARREADY = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0) or (num_c36_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            m_axi_gmem_ARADDR <= sext_ln119_fu_140_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state9) or ((icmp_ln1027_fu_159_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
            m_axi_gmem_ARADDR <= grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_m_axi_gmem_ARADDR;
        else 
            m_axi_gmem_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    m_axi_gmem_ARBURST_assign_proc : process(grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_m_axi_gmem_ARBURST, ap_CS_fsm_state8, icmp_ln1027_fu_159_p2, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or ((icmp_ln1027_fu_159_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
            m_axi_gmem_ARBURST <= grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_m_axi_gmem_ARBURST;
        else 
            m_axi_gmem_ARBURST <= ap_const_lv2_0;
        end if; 
    end process;


    m_axi_gmem_ARCACHE_assign_proc : process(grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_m_axi_gmem_ARCACHE, ap_CS_fsm_state8, icmp_ln1027_fu_159_p2, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or ((icmp_ln1027_fu_159_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
            m_axi_gmem_ARCACHE <= grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_m_axi_gmem_ARCACHE;
        else 
            m_axi_gmem_ARCACHE <= ap_const_lv4_0;
        end if; 
    end process;


    m_axi_gmem_ARID_assign_proc : process(grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_m_axi_gmem_ARID, ap_CS_fsm_state8, icmp_ln1027_fu_159_p2, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or ((icmp_ln1027_fu_159_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
            m_axi_gmem_ARID <= grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_m_axi_gmem_ARID;
        else 
            m_axi_gmem_ARID <= ap_const_lv1_0;
        end if; 
    end process;


    m_axi_gmem_ARLEN_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, m_axi_gmem_ARREADY, num_c36_full_n, shl_ln119_fu_123_p2, grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_m_axi_gmem_ARLEN, ap_CS_fsm_state8, icmp_ln1027_fu_159_p2, ap_CS_fsm_state9)
    begin
        if ((not(((m_axi_gmem_ARREADY = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0) or (num_c36_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            m_axi_gmem_ARLEN <= shl_ln119_fu_123_p2;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state9) or ((icmp_ln1027_fu_159_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
            m_axi_gmem_ARLEN <= grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_m_axi_gmem_ARLEN;
        else 
            m_axi_gmem_ARLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    m_axi_gmem_ARLOCK_assign_proc : process(grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_m_axi_gmem_ARLOCK, ap_CS_fsm_state8, icmp_ln1027_fu_159_p2, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or ((icmp_ln1027_fu_159_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
            m_axi_gmem_ARLOCK <= grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_m_axi_gmem_ARLOCK;
        else 
            m_axi_gmem_ARLOCK <= ap_const_lv2_0;
        end if; 
    end process;


    m_axi_gmem_ARPROT_assign_proc : process(grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_m_axi_gmem_ARPROT, ap_CS_fsm_state8, icmp_ln1027_fu_159_p2, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or ((icmp_ln1027_fu_159_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
            m_axi_gmem_ARPROT <= grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_m_axi_gmem_ARPROT;
        else 
            m_axi_gmem_ARPROT <= ap_const_lv3_0;
        end if; 
    end process;


    m_axi_gmem_ARQOS_assign_proc : process(grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_m_axi_gmem_ARQOS, ap_CS_fsm_state8, icmp_ln1027_fu_159_p2, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or ((icmp_ln1027_fu_159_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
            m_axi_gmem_ARQOS <= grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_m_axi_gmem_ARQOS;
        else 
            m_axi_gmem_ARQOS <= ap_const_lv4_0;
        end if; 
    end process;


    m_axi_gmem_ARREGION_assign_proc : process(grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_m_axi_gmem_ARREGION, ap_CS_fsm_state8, icmp_ln1027_fu_159_p2, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or ((icmp_ln1027_fu_159_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
            m_axi_gmem_ARREGION <= grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_m_axi_gmem_ARREGION;
        else 
            m_axi_gmem_ARREGION <= ap_const_lv4_0;
        end if; 
    end process;


    m_axi_gmem_ARSIZE_assign_proc : process(grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_m_axi_gmem_ARSIZE, ap_CS_fsm_state8, icmp_ln1027_fu_159_p2, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or ((icmp_ln1027_fu_159_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
            m_axi_gmem_ARSIZE <= grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_m_axi_gmem_ARSIZE;
        else 
            m_axi_gmem_ARSIZE <= ap_const_lv3_0;
        end if; 
    end process;


    m_axi_gmem_ARUSER_assign_proc : process(grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_m_axi_gmem_ARUSER, ap_CS_fsm_state8, icmp_ln1027_fu_159_p2, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or ((icmp_ln1027_fu_159_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
            m_axi_gmem_ARUSER <= grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_m_axi_gmem_ARUSER;
        else 
            m_axi_gmem_ARUSER <= ap_const_lv1_0;
        end if; 
    end process;


    m_axi_gmem_ARVALID_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, m_axi_gmem_ARREADY, num_c36_full_n, grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_m_axi_gmem_ARVALID, ap_CS_fsm_state8, icmp_ln1027_fu_159_p2, ap_CS_fsm_state9)
    begin
        if ((not(((m_axi_gmem_ARREADY = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0) or (num_c36_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            m_axi_gmem_ARVALID <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state9) or ((icmp_ln1027_fu_159_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
            m_axi_gmem_ARVALID <= grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_m_axi_gmem_ARVALID;
        else 
            m_axi_gmem_ARVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem_AWADDR <= ap_const_lv64_0;
    m_axi_gmem_AWBURST <= ap_const_lv2_0;
    m_axi_gmem_AWCACHE <= ap_const_lv4_0;
    m_axi_gmem_AWID <= ap_const_lv1_0;
    m_axi_gmem_AWLEN <= ap_const_lv32_0;
    m_axi_gmem_AWLOCK <= ap_const_lv2_0;
    m_axi_gmem_AWPROT <= ap_const_lv3_0;
    m_axi_gmem_AWQOS <= ap_const_lv4_0;
    m_axi_gmem_AWREGION <= ap_const_lv4_0;
    m_axi_gmem_AWSIZE <= ap_const_lv3_0;
    m_axi_gmem_AWUSER <= ap_const_lv1_0;
    m_axi_gmem_AWVALID <= ap_const_logic_0;
    m_axi_gmem_BREADY <= ap_const_logic_0;

    m_axi_gmem_RREADY_assign_proc : process(grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_m_axi_gmem_RREADY, ap_CS_fsm_state8, icmp_ln1027_fu_159_p2, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or ((icmp_ln1027_fu_159_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
            m_axi_gmem_RREADY <= grp_load_nfft_value_Pipeline_VITIS_LOOP_121_2_fu_106_m_axi_gmem_RREADY;
        else 
            m_axi_gmem_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem_WDATA <= ap_const_lv64_0;
    m_axi_gmem_WID <= ap_const_lv1_0;
    m_axi_gmem_WLAST <= ap_const_logic_0;
    m_axi_gmem_WSTRB <= ap_const_lv8_0;
    m_axi_gmem_WUSER <= ap_const_lv1_0;
    m_axi_gmem_WVALID <= ap_const_logic_0;

    num_c36_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, num_c36_full_n)
    begin
        if ((not(((ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            num_c36_blk_n <= num_c36_full_n;
        else 
            num_c36_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    num_c36_din <= numFFT;

    num_c36_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, m_axi_gmem_ARREADY, num_c36_full_n)
    begin
        if ((not(((m_axi_gmem_ARREADY = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (real_start = ap_const_logic_0) or (num_c36_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            num_c36_write <= ap_const_logic_1;
        else 
            num_c36_write <= ap_const_logic_0;
        end if; 
    end process;


    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

        sext_ln119_fu_140_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln_fu_130_p4),64));

    shl_ln119_fu_123_p2 <= std_logic_vector(shift_left(unsigned(numFFT),to_integer(unsigned('0' & ap_const_lv32_A(31-1 downto 0)))));
    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    trunc_ln_fu_130_p4 <= in_r(63 downto 3);
end behav;
