// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Processing_HW_Windowing_Pipeline_VITIS_LOOP_5641_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        D1_din,
        D1_num_data_valid,
        D1_fifo_cap,
        D1_full_n,
        D1_write,
        Buff0_re_address0,
        Buff0_re_ce0,
        Buff0_re_q0,
        Buff0_im_address0,
        Buff0_im_ce0,
        Buff0_im_q0,
        Buff1_re_address0,
        Buff1_re_ce0,
        Buff1_re_q0,
        Buff1_im_address0,
        Buff1_im_ce0,
        Buff1_im_q0,
        Buff2_re_address0,
        Buff2_re_ce0,
        Buff2_re_q0,
        Buff2_im_address0,
        Buff2_im_ce0,
        Buff2_im_q0,
        Buff3_re_address0,
        Buff3_re_ce0,
        Buff3_re_q0,
        Buff3_im_address0,
        Buff3_im_ce0,
        Buff3_im_q0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [63:0] D1_din;
input  [10:0] D1_num_data_valid;
input  [10:0] D1_fifo_cap;
input   D1_full_n;
output   D1_write;
output  [9:0] Buff0_re_address0;
output   Buff0_re_ce0;
input  [31:0] Buff0_re_q0;
output  [9:0] Buff0_im_address0;
output   Buff0_im_ce0;
input  [31:0] Buff0_im_q0;
output  [9:0] Buff1_re_address0;
output   Buff1_re_ce0;
input  [31:0] Buff1_re_q0;
output  [9:0] Buff1_im_address0;
output   Buff1_im_ce0;
input  [31:0] Buff1_im_q0;
output  [9:0] Buff2_re_address0;
output   Buff2_re_ce0;
input  [31:0] Buff2_re_q0;
output  [9:0] Buff2_im_address0;
output   Buff2_im_ce0;
input  [31:0] Buff2_im_q0;
output  [9:0] Buff3_re_address0;
output   Buff3_re_ce0;
input  [31:0] Buff3_re_q0;
output  [9:0] Buff3_im_address0;
output   Buff3_im_ce0;
input  [31:0] Buff3_im_q0;

reg ap_idle;
reg D1_write;
reg Buff0_re_ce0;
reg Buff0_im_ce0;
reg Buff1_re_ce0;
reg Buff1_im_ce0;
reg Buff2_re_ce0;
reg Buff2_im_ce0;
reg Buff3_re_ce0;
reg Buff3_im_ce0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
reg    ap_enable_reg_pp0_iter30;
reg    ap_enable_reg_pp0_iter31;
reg    ap_enable_reg_pp0_iter32;
reg    ap_enable_reg_pp0_iter33;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_state16_pp0_stage0_iter15;
wire    ap_block_state17_pp0_stage0_iter16;
wire    ap_block_state18_pp0_stage0_iter17;
wire    ap_block_state19_pp0_stage0_iter18;
wire    ap_block_state20_pp0_stage0_iter19;
wire    ap_block_state21_pp0_stage0_iter20;
wire    ap_block_state22_pp0_stage0_iter21;
wire    ap_block_state23_pp0_stage0_iter22;
wire    ap_block_state24_pp0_stage0_iter23;
wire    ap_block_state25_pp0_stage0_iter24;
wire    ap_block_state26_pp0_stage0_iter25;
wire    ap_block_state27_pp0_stage0_iter26;
wire    ap_block_state28_pp0_stage0_iter27;
wire    ap_block_state29_pp0_stage0_iter28;
wire    ap_block_state30_pp0_stage0_iter29;
wire    ap_block_state31_pp0_stage0_iter30;
wire    ap_block_state32_pp0_stage0_iter31;
wire    ap_block_state33_pp0_stage0_iter32;
reg    ap_block_state34_pp0_stage0_iter33;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln1027_fu_542_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [9:0] Hann_0_address0;
reg    Hann_0_ce0;
wire   [31:0] Hann_0_q0;
wire   [9:0] Hann_0_address1;
reg    Hann_0_ce1;
wire   [31:0] Hann_0_q1;
wire   [9:0] Hann_0_address2;
reg    Hann_0_ce2;
wire   [31:0] Hann_0_q2;
wire   [9:0] Hann_0_address3;
reg    Hann_0_ce3;
wire   [31:0] Hann_0_q3;
wire   [9:0] Hann_1_address0;
reg    Hann_1_ce0;
wire   [31:0] Hann_1_q0;
wire   [9:0] Hann_1_address1;
reg    Hann_1_ce1;
wire   [31:0] Hann_1_q1;
wire   [9:0] Hann_1_address2;
reg    Hann_1_ce2;
wire   [31:0] Hann_1_q2;
wire   [9:0] Hann_1_address3;
reg    Hann_1_ce3;
wire   [31:0] Hann_1_q3;
wire   [9:0] Hann_2_address0;
reg    Hann_2_ce0;
wire   [31:0] Hann_2_q0;
wire   [9:0] Hann_2_address1;
reg    Hann_2_ce1;
wire   [31:0] Hann_2_q1;
wire   [9:0] Hann_2_address2;
reg    Hann_2_ce2;
wire   [31:0] Hann_2_q2;
wire   [9:0] Hann_2_address3;
reg    Hann_2_ce3;
wire   [31:0] Hann_2_q3;
wire   [9:0] Hann_3_address0;
reg    Hann_3_ce0;
wire   [31:0] Hann_3_q0;
wire   [9:0] Hann_3_address1;
reg    Hann_3_ce1;
wire   [31:0] Hann_3_q1;
wire   [9:0] Hann_3_address2;
reg    Hann_3_ce2;
wire   [31:0] Hann_3_q2;
wire   [9:0] Hann_3_address3;
reg    Hann_3_ce3;
wire   [31:0] Hann_3_q3;
wire   [9:0] Hann_4_address0;
reg    Hann_4_ce0;
wire   [31:0] Hann_4_q0;
wire   [9:0] Hann_4_address1;
reg    Hann_4_ce1;
wire   [31:0] Hann_4_q1;
wire   [9:0] Hann_4_address2;
reg    Hann_4_ce2;
wire   [31:0] Hann_4_q2;
wire   [9:0] Hann_4_address3;
reg    Hann_4_ce3;
wire   [31:0] Hann_4_q3;
reg    D1_blk_n;
wire    ap_block_pp0_stage0;
reg    ap_block_pp0_stage0_11001;
reg   [10:0] j_V_1_reg_847;
reg   [10:0] j_V_1_reg_847_pp0_iter1_reg;
reg   [10:0] j_V_1_reg_847_pp0_iter2_reg;
reg   [10:0] j_V_1_reg_847_pp0_iter3_reg;
reg   [10:0] j_V_1_reg_847_pp0_iter4_reg;
reg   [10:0] j_V_1_reg_847_pp0_iter5_reg;
reg   [10:0] j_V_1_reg_847_pp0_iter6_reg;
reg   [10:0] j_V_1_reg_847_pp0_iter7_reg;
reg   [10:0] j_V_1_reg_847_pp0_iter8_reg;
reg   [10:0] j_V_1_reg_847_pp0_iter9_reg;
reg   [10:0] j_V_1_reg_847_pp0_iter10_reg;
reg   [10:0] j_V_1_reg_847_pp0_iter11_reg;
wire   [9:0] lhs_fu_554_p1;
reg   [9:0] lhs_reg_856;
reg   [9:0] lhs_reg_856_pp0_iter1_reg;
reg   [9:0] lhs_reg_856_pp0_iter2_reg;
reg   [9:0] lhs_reg_856_pp0_iter3_reg;
reg   [9:0] lhs_reg_856_pp0_iter4_reg;
reg   [9:0] lhs_reg_856_pp0_iter5_reg;
reg   [9:0] lhs_reg_856_pp0_iter6_reg;
reg   [9:0] lhs_reg_856_pp0_iter7_reg;
reg   [9:0] lhs_reg_856_pp0_iter8_reg;
reg   [9:0] lhs_reg_856_pp0_iter9_reg;
reg   [9:0] lhs_reg_856_pp0_iter10_reg;
reg   [9:0] lhs_reg_856_pp0_iter11_reg;
reg   [9:0] lhs_reg_856_pp0_iter12_reg;
reg   [9:0] lhs_reg_856_pp0_iter13_reg;
wire   [63:0] zext_ln1027_fu_591_p1;
reg   [63:0] zext_ln1027_reg_873;
reg   [63:0] zext_ln1027_reg_873_pp0_iter13_reg;
reg   [63:0] zext_ln1027_reg_873_pp0_iter14_reg;
reg   [63:0] zext_ln1027_reg_873_pp0_iter15_reg;
reg   [63:0] zext_ln1027_reg_873_pp0_iter16_reg;
reg   [63:0] zext_ln1027_reg_873_pp0_iter17_reg;
reg   [63:0] zext_ln1027_reg_873_pp0_iter18_reg;
reg   [63:0] zext_ln1027_reg_873_pp0_iter19_reg;
reg   [63:0] zext_ln1027_reg_873_pp0_iter20_reg;
reg   [63:0] zext_ln1027_reg_873_pp0_iter21_reg;
reg   [9:0] tmp_5_reg_951;
reg   [9:0] tmp_5_reg_951_pp0_iter13_reg;
reg   [9:0] tmp_5_reg_951_pp0_iter14_reg;
reg   [9:0] tmp_5_reg_951_pp0_iter15_reg;
reg   [9:0] tmp_5_reg_951_pp0_iter16_reg;
reg   [9:0] tmp_5_reg_951_pp0_iter17_reg;
reg   [9:0] tmp_5_reg_951_pp0_iter18_reg;
reg   [9:0] tmp_5_reg_951_pp0_iter19_reg;
reg   [9:0] tmp_5_reg_951_pp0_iter20_reg;
reg   [9:0] tmp_5_reg_951_pp0_iter21_reg;
reg   [31:0] tmp_re_reg_956;
reg   [31:0] tmp_im_reg_961;
wire   [31:0] tmp_s_fu_682_p7;
reg   [31:0] tmp_s_reg_966;
wire   [2:0] trunc_ln5643_fu_698_p1;
reg   [2:0] trunc_ln5643_reg_972;
reg   [2:0] trunc_ln5643_reg_972_pp0_iter14_reg;
reg   [2:0] trunc_ln5643_reg_972_pp0_iter15_reg;
reg   [2:0] trunc_ln5643_reg_972_pp0_iter16_reg;
reg   [2:0] trunc_ln5643_reg_972_pp0_iter17_reg;
reg   [2:0] trunc_ln5643_reg_972_pp0_iter18_reg;
reg   [2:0] trunc_ln5643_reg_972_pp0_iter19_reg;
reg   [2:0] trunc_ln5643_reg_972_pp0_iter20_reg;
reg   [2:0] trunc_ln5643_reg_972_pp0_iter21_reg;
reg   [2:0] trunc_ln5643_reg_972_pp0_iter22_reg;
reg   [31:0] tmp_re_32_reg_978;
reg   [31:0] tmp_im_32_reg_983;
wire   [31:0] tmp_9_fu_702_p7;
reg   [31:0] tmp_9_reg_988;
wire   [31:0] grp_fu_492_p2;
reg   [31:0] tmp_re_31_reg_999;
wire   [31:0] grp_fu_496_p2;
reg   [31:0] tmp_im_31_reg_1004;
wire   [31:0] grp_fu_500_p2;
reg   [31:0] tmp_re_33_reg_1009;
wire   [31:0] grp_fu_504_p2;
reg   [31:0] tmp_im_33_reg_1014;
reg   [31:0] tmp_re_35_reg_1054;
reg   [31:0] tmp_im_35_reg_1059;
wire   [31:0] tmp_1_fu_752_p7;
reg   [31:0] tmp_1_reg_1064;
wire   [31:0] grp_fu_468_p2;
reg   [31:0] tmp_re_34_reg_1070;
wire   [31:0] grp_fu_472_p2;
reg   [31:0] tmp_im_34_reg_1075;
wire   [31:0] grp_fu_508_p2;
reg   [31:0] tmp_re_36_reg_1080;
wire   [31:0] grp_fu_512_p2;
reg   [31:0] tmp_im_36_reg_1085;
reg   [31:0] tmp_re_38_reg_1125;
reg   [31:0] tmp_im_38_reg_1130;
wire   [31:0] tmp_2_fu_775_p7;
reg   [31:0] tmp_2_reg_1135;
wire   [31:0] grp_fu_476_p2;
reg   [31:0] tmp_re_37_reg_1141;
wire   [31:0] grp_fu_480_p2;
reg   [31:0] tmp_im_37_reg_1146;
wire   [31:0] grp_fu_516_p2;
reg   [31:0] tmp_re_39_reg_1151;
wire   [31:0] grp_fu_520_p2;
reg   [31:0] tmp_im_39_reg_1156;
wire   [31:0] grp_fu_484_p2;
reg   [31:0] tmp_re_40_reg_1161;
wire   [31:0] grp_fu_488_p2;
reg   [31:0] tmp_im_40_reg_1166;
wire   [63:0] zext_ln5643_3_fu_614_p1;
wire   [63:0] zext_ln5643_fu_632_p1;
wire   [63:0] zext_ln5643_1_fu_743_p1;
wire   [63:0] zext_ln5643_2_fu_767_p1;
reg   [10:0] phi_urem_fu_100;
wire   [10:0] select_ln1027_fu_670_p3;
wire    ap_loop_init;
reg   [21:0] phi_mul_fu_104;
wire   [21:0] add_ln5643_fu_598_p2;
reg   [10:0] j_V_fu_108;
wire   [10:0] add_ln840_fu_548_p2;
reg   [10:0] ap_sig_allocacmp_j_V_1;
reg    ap_block_pp0_stage0_01001;
wire   [9:0] grp_fu_558_p0;
wire   [3:0] grp_fu_558_p1;
wire  signed [10:0] ret_V_fu_569_p3;
wire  signed [11:0] sext_ln5643_fu_580_p1;
wire   [7:0] tmp_fu_604_p4;
wire   [22:0] tmp_3_fu_623_p1;
wire  signed [22:0] grp_fu_805_p2;
wire   [8:0] tmp_3_fu_623_p4;
wire   [24:0] tmp_5_fu_641_p1;
wire  signed [24:0] grp_fu_812_p2;
wire   [10:0] add_ln1027_fu_658_p2;
wire   [0:0] icmp_ln1027_3_fu_664_p2;
wire   [2:0] tmp_s_fu_682_p6;
wire   [2:0] grp_fu_558_p2;
wire   [2:0] tmp_9_fu_702_p6;
wire   [11:0] ret_V_1_fu_723_p3;
wire   [24:0] tmp_4_fu_734_p1;
wire  signed [24:0] grp_fu_819_p2;
wire   [9:0] tmp_4_fu_734_p4;
wire   [31:0] bitcast_ln5643_1_fu_793_p1;
wire   [31:0] bitcast_ln5643_fu_790_p1;
wire   [10:0] grp_fu_805_p0;
wire   [11:0] grp_fu_805_p1;
wire   [11:0] grp_fu_812_p0;
wire   [12:0] grp_fu_812_p1;
wire   [11:0] grp_fu_819_p0;
wire   [12:0] grp_fu_819_p1;
reg    grp_fu_468_ce;
reg    grp_fu_472_ce;
reg    grp_fu_476_ce;
reg    grp_fu_480_ce;
reg    grp_fu_484_ce;
reg    grp_fu_488_ce;
reg    grp_fu_492_ce;
reg    grp_fu_496_ce;
reg    grp_fu_500_ce;
reg    grp_fu_504_ce;
reg    grp_fu_508_ce;
reg    grp_fu_512_ce;
reg    grp_fu_516_ce;
reg    grp_fu_520_ce;
reg    grp_fu_558_ce;
reg    grp_fu_805_ce;
reg    grp_fu_812_ce;
reg    grp_fu_819_ce;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg    ap_loop_exit_ready_pp0_iter18_reg;
reg    ap_loop_exit_ready_pp0_iter19_reg;
reg    ap_loop_exit_ready_pp0_iter20_reg;
reg    ap_loop_exit_ready_pp0_iter21_reg;
reg    ap_loop_exit_ready_pp0_iter22_reg;
reg    ap_loop_exit_ready_pp0_iter23_reg;
reg    ap_loop_exit_ready_pp0_iter24_reg;
reg    ap_loop_exit_ready_pp0_iter25_reg;
reg    ap_loop_exit_ready_pp0_iter26_reg;
reg    ap_loop_exit_ready_pp0_iter27_reg;
reg    ap_loop_exit_ready_pp0_iter28_reg;
reg    ap_loop_exit_ready_pp0_iter29_reg;
reg    ap_loop_exit_ready_pp0_iter30_reg;
reg    ap_loop_exit_ready_pp0_iter31_reg;
reg    ap_loop_exit_ready_pp0_iter32_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [22:0] grp_fu_805_p00;
wire   [24:0] grp_fu_812_p00;
wire   [24:0] grp_fu_819_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
#0 ap_enable_reg_pp0_iter30 = 1'b0;
#0 ap_enable_reg_pp0_iter31 = 1'b0;
#0 ap_enable_reg_pp0_iter32 = 1'b0;
#0 ap_enable_reg_pp0_iter33 = 1'b0;
#0 ap_done_reg = 1'b0;
end

Processing_HW_Windowing_Pipeline_VITIS_LOOP_5641_2_Hann_0_ROM_AUTO_1R #(
    .DataWidth( 32 ),
    .AddressRange( 820 ),
    .AddressWidth( 10 ))
Hann_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Hann_0_address0),
    .ce0(Hann_0_ce0),
    .q0(Hann_0_q0),
    .address1(Hann_0_address1),
    .ce1(Hann_0_ce1),
    .q1(Hann_0_q1),
    .address2(Hann_0_address2),
    .ce2(Hann_0_ce2),
    .q2(Hann_0_q2),
    .address3(Hann_0_address3),
    .ce3(Hann_0_ce3),
    .q3(Hann_0_q3)
);

Processing_HW_Windowing_Pipeline_VITIS_LOOP_5641_2_Hann_1_ROM_AUTO_1R #(
    .DataWidth( 32 ),
    .AddressRange( 820 ),
    .AddressWidth( 10 ))
Hann_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Hann_1_address0),
    .ce0(Hann_1_ce0),
    .q0(Hann_1_q0),
    .address1(Hann_1_address1),
    .ce1(Hann_1_ce1),
    .q1(Hann_1_q1),
    .address2(Hann_1_address2),
    .ce2(Hann_1_ce2),
    .q2(Hann_1_q2),
    .address3(Hann_1_address3),
    .ce3(Hann_1_ce3),
    .q3(Hann_1_q3)
);

Processing_HW_Windowing_Pipeline_VITIS_LOOP_5641_2_Hann_2_ROM_AUTO_1R #(
    .DataWidth( 32 ),
    .AddressRange( 820 ),
    .AddressWidth( 10 ))
Hann_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Hann_2_address0),
    .ce0(Hann_2_ce0),
    .q0(Hann_2_q0),
    .address1(Hann_2_address1),
    .ce1(Hann_2_ce1),
    .q1(Hann_2_q1),
    .address2(Hann_2_address2),
    .ce2(Hann_2_ce2),
    .q2(Hann_2_q2),
    .address3(Hann_2_address3),
    .ce3(Hann_2_ce3),
    .q3(Hann_2_q3)
);

Processing_HW_Windowing_Pipeline_VITIS_LOOP_5641_2_Hann_3_ROM_AUTO_1R #(
    .DataWidth( 32 ),
    .AddressRange( 820 ),
    .AddressWidth( 10 ))
Hann_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Hann_3_address0),
    .ce0(Hann_3_ce0),
    .q0(Hann_3_q0),
    .address1(Hann_3_address1),
    .ce1(Hann_3_ce1),
    .q1(Hann_3_q1),
    .address2(Hann_3_address2),
    .ce2(Hann_3_ce2),
    .q2(Hann_3_q2),
    .address3(Hann_3_address3),
    .ce3(Hann_3_ce3),
    .q3(Hann_3_q3)
);

Processing_HW_Windowing_Pipeline_VITIS_LOOP_5641_2_Hann_4_ROM_AUTO_1R #(
    .DataWidth( 32 ),
    .AddressRange( 820 ),
    .AddressWidth( 10 ))
Hann_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Hann_4_address0),
    .ce0(Hann_4_ce0),
    .q0(Hann_4_q0),
    .address1(Hann_4_address1),
    .ce1(Hann_4_ce1),
    .q1(Hann_4_q1),
    .address2(Hann_4_address2),
    .ce2(Hann_4_ce2),
    .q2(Hann_4_q2),
    .address3(Hann_4_address3),
    .ce3(Hann_4_ce3),
    .q3(Hann_4_q3)
);

Processing_HW_fadd_32ns_32ns_32_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_5_full_dsp_1_U41(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_re_31_reg_999),
    .din1(tmp_re_33_reg_1009),
    .ce(grp_fu_468_ce),
    .dout(grp_fu_468_p2)
);

Processing_HW_fadd_32ns_32ns_32_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_5_full_dsp_1_U42(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_im_31_reg_1004),
    .din1(tmp_im_33_reg_1014),
    .ce(grp_fu_472_ce),
    .dout(grp_fu_472_p2)
);

Processing_HW_fadd_32ns_32ns_32_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_5_full_dsp_1_U43(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_re_34_reg_1070),
    .din1(tmp_re_36_reg_1080),
    .ce(grp_fu_476_ce),
    .dout(grp_fu_476_p2)
);

Processing_HW_fadd_32ns_32ns_32_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_5_full_dsp_1_U44(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_im_34_reg_1075),
    .din1(tmp_im_36_reg_1085),
    .ce(grp_fu_480_ce),
    .dout(grp_fu_480_p2)
);

Processing_HW_fadd_32ns_32ns_32_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_5_full_dsp_1_U45(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_re_37_reg_1141),
    .din1(tmp_re_39_reg_1151),
    .ce(grp_fu_484_ce),
    .dout(grp_fu_484_p2)
);

Processing_HW_fadd_32ns_32ns_32_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_5_full_dsp_1_U46(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_im_37_reg_1146),
    .din1(tmp_im_39_reg_1156),
    .ce(grp_fu_488_ce),
    .dout(grp_fu_488_p2)
);

Processing_HW_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U47(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_re_reg_956),
    .din1(tmp_s_reg_966),
    .ce(grp_fu_492_ce),
    .dout(grp_fu_492_p2)
);

Processing_HW_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U48(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_im_reg_961),
    .din1(tmp_s_reg_966),
    .ce(grp_fu_496_ce),
    .dout(grp_fu_496_p2)
);

Processing_HW_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U49(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_re_32_reg_978),
    .din1(tmp_9_reg_988),
    .ce(grp_fu_500_ce),
    .dout(grp_fu_500_p2)
);

Processing_HW_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U50(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_im_32_reg_983),
    .din1(tmp_9_reg_988),
    .ce(grp_fu_504_ce),
    .dout(grp_fu_504_p2)
);

Processing_HW_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U51(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_re_35_reg_1054),
    .din1(tmp_1_reg_1064),
    .ce(grp_fu_508_ce),
    .dout(grp_fu_508_p2)
);

Processing_HW_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U52(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_im_35_reg_1059),
    .din1(tmp_1_reg_1064),
    .ce(grp_fu_512_ce),
    .dout(grp_fu_512_p2)
);

Processing_HW_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U53(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_re_38_reg_1125),
    .din1(tmp_2_reg_1135),
    .ce(grp_fu_516_ce),
    .dout(grp_fu_516_p2)
);

Processing_HW_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U54(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_im_38_reg_1130),
    .din1(tmp_2_reg_1135),
    .ce(grp_fu_520_ce),
    .dout(grp_fu_520_p2)
);

Processing_HW_urem_10ns_4ns_3_14_1 #(
    .ID( 1 ),
    .NUM_STAGE( 14 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 4 ),
    .dout_WIDTH( 3 ))
urem_10ns_4ns_3_14_1_U55(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_558_p0),
    .din1(grp_fu_558_p1),
    .ce(grp_fu_558_ce),
    .dout(grp_fu_558_p2)
);

Processing_HW_mux_53_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_53_32_1_1_U56(
    .din0(Hann_0_q3),
    .din1(Hann_1_q3),
    .din2(Hann_2_q3),
    .din3(Hann_3_q3),
    .din4(Hann_4_q3),
    .din5(tmp_s_fu_682_p6),
    .dout(tmp_s_fu_682_p7)
);

Processing_HW_mux_53_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_53_32_1_1_U57(
    .din0(Hann_4_q2),
    .din1(Hann_0_q2),
    .din2(Hann_1_q2),
    .din3(Hann_2_q2),
    .din4(Hann_3_q2),
    .din5(tmp_9_fu_702_p6),
    .dout(tmp_9_fu_702_p7)
);

Processing_HW_mux_53_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_53_32_1_1_U58(
    .din0(Hann_3_q1),
    .din1(Hann_4_q1),
    .din2(Hann_0_q1),
    .din3(Hann_1_q1),
    .din4(Hann_2_q1),
    .din5(trunc_ln5643_reg_972_pp0_iter17_reg),
    .dout(tmp_1_fu_752_p7)
);

Processing_HW_mux_53_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_53_32_1_1_U59(
    .din0(Hann_2_q0),
    .din1(Hann_3_q0),
    .din2(Hann_4_q0),
    .din3(Hann_0_q0),
    .din4(Hann_1_q0),
    .din5(trunc_ln5643_reg_972_pp0_iter22_reg),
    .dout(tmp_2_fu_775_p7)
);

Processing_HW_mul_mul_11ns_12ns_23_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 23 ))
mul_mul_11ns_12ns_23_4_1_U60(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_805_p0),
    .din1(grp_fu_805_p1),
    .ce(grp_fu_805_ce),
    .dout(grp_fu_805_p2)
);

Processing_HW_mul_mul_12ns_13ns_25_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 25 ))
mul_mul_12ns_13ns_25_4_1_U61(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_812_p0),
    .din1(grp_fu_812_p1),
    .ce(grp_fu_812_ce),
    .dout(grp_fu_812_p2)
);

Processing_HW_mul_mul_12ns_13ns_25_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 25 ))
mul_mul_12ns_13ns_25_4_1_U62(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_819_p0),
    .din1(grp_fu_819_p1),
    .ce(grp_fu_819_ce),
    .dout(grp_fu_819_p2)
);

Processing_HW_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter32_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter30 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter31 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter32 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter33 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter33 <= ap_enable_reg_pp0_iter32;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln1027_fu_542_p2 == 1'd0))) begin
            j_V_fu_108 <= add_ln840_fu_548_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            j_V_fu_108 <= 11'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            phi_mul_fu_104 <= 22'd0;
        end else if ((ap_enable_reg_pp0_iter12 == 1'b1)) begin
            phi_mul_fu_104 <= add_ln5643_fu_598_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            phi_urem_fu_100 <= 11'd0;
        end else if ((ap_enable_reg_pp0_iter13 == 1'b1)) begin
            phi_urem_fu_100 <= select_ln1027_fu_670_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
        ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
        ap_loop_exit_ready_pp0_iter19_reg <= ap_loop_exit_ready_pp0_iter18_reg;
        ap_loop_exit_ready_pp0_iter20_reg <= ap_loop_exit_ready_pp0_iter19_reg;
        ap_loop_exit_ready_pp0_iter21_reg <= ap_loop_exit_ready_pp0_iter20_reg;
        ap_loop_exit_ready_pp0_iter22_reg <= ap_loop_exit_ready_pp0_iter21_reg;
        ap_loop_exit_ready_pp0_iter23_reg <= ap_loop_exit_ready_pp0_iter22_reg;
        ap_loop_exit_ready_pp0_iter24_reg <= ap_loop_exit_ready_pp0_iter23_reg;
        ap_loop_exit_ready_pp0_iter25_reg <= ap_loop_exit_ready_pp0_iter24_reg;
        ap_loop_exit_ready_pp0_iter26_reg <= ap_loop_exit_ready_pp0_iter25_reg;
        ap_loop_exit_ready_pp0_iter27_reg <= ap_loop_exit_ready_pp0_iter26_reg;
        ap_loop_exit_ready_pp0_iter28_reg <= ap_loop_exit_ready_pp0_iter27_reg;
        ap_loop_exit_ready_pp0_iter29_reg <= ap_loop_exit_ready_pp0_iter28_reg;
        ap_loop_exit_ready_pp0_iter30_reg <= ap_loop_exit_ready_pp0_iter29_reg;
        ap_loop_exit_ready_pp0_iter31_reg <= ap_loop_exit_ready_pp0_iter30_reg;
        ap_loop_exit_ready_pp0_iter32_reg <= ap_loop_exit_ready_pp0_iter31_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        j_V_1_reg_847_pp0_iter10_reg <= j_V_1_reg_847_pp0_iter9_reg;
        j_V_1_reg_847_pp0_iter11_reg <= j_V_1_reg_847_pp0_iter10_reg;
        j_V_1_reg_847_pp0_iter2_reg <= j_V_1_reg_847_pp0_iter1_reg;
        j_V_1_reg_847_pp0_iter3_reg <= j_V_1_reg_847_pp0_iter2_reg;
        j_V_1_reg_847_pp0_iter4_reg <= j_V_1_reg_847_pp0_iter3_reg;
        j_V_1_reg_847_pp0_iter5_reg <= j_V_1_reg_847_pp0_iter4_reg;
        j_V_1_reg_847_pp0_iter6_reg <= j_V_1_reg_847_pp0_iter5_reg;
        j_V_1_reg_847_pp0_iter7_reg <= j_V_1_reg_847_pp0_iter6_reg;
        j_V_1_reg_847_pp0_iter8_reg <= j_V_1_reg_847_pp0_iter7_reg;
        j_V_1_reg_847_pp0_iter9_reg <= j_V_1_reg_847_pp0_iter8_reg;
        lhs_reg_856_pp0_iter10_reg <= lhs_reg_856_pp0_iter9_reg;
        lhs_reg_856_pp0_iter11_reg <= lhs_reg_856_pp0_iter10_reg;
        lhs_reg_856_pp0_iter12_reg <= lhs_reg_856_pp0_iter11_reg;
        lhs_reg_856_pp0_iter13_reg <= lhs_reg_856_pp0_iter12_reg;
        lhs_reg_856_pp0_iter2_reg <= lhs_reg_856_pp0_iter1_reg;
        lhs_reg_856_pp0_iter3_reg <= lhs_reg_856_pp0_iter2_reg;
        lhs_reg_856_pp0_iter4_reg <= lhs_reg_856_pp0_iter3_reg;
        lhs_reg_856_pp0_iter5_reg <= lhs_reg_856_pp0_iter4_reg;
        lhs_reg_856_pp0_iter6_reg <= lhs_reg_856_pp0_iter5_reg;
        lhs_reg_856_pp0_iter7_reg <= lhs_reg_856_pp0_iter6_reg;
        lhs_reg_856_pp0_iter8_reg <= lhs_reg_856_pp0_iter7_reg;
        lhs_reg_856_pp0_iter9_reg <= lhs_reg_856_pp0_iter8_reg;
        tmp_1_reg_1064 <= tmp_1_fu_752_p7;
        tmp_2_reg_1135 <= tmp_2_fu_775_p7;
        tmp_5_reg_951 <= {{tmp_5_fu_641_p1[24:15]}};
        tmp_5_reg_951_pp0_iter13_reg <= tmp_5_reg_951;
        tmp_5_reg_951_pp0_iter14_reg <= tmp_5_reg_951_pp0_iter13_reg;
        tmp_5_reg_951_pp0_iter15_reg <= tmp_5_reg_951_pp0_iter14_reg;
        tmp_5_reg_951_pp0_iter16_reg <= tmp_5_reg_951_pp0_iter15_reg;
        tmp_5_reg_951_pp0_iter17_reg <= tmp_5_reg_951_pp0_iter16_reg;
        tmp_5_reg_951_pp0_iter18_reg <= tmp_5_reg_951_pp0_iter17_reg;
        tmp_5_reg_951_pp0_iter19_reg <= tmp_5_reg_951_pp0_iter18_reg;
        tmp_5_reg_951_pp0_iter20_reg <= tmp_5_reg_951_pp0_iter19_reg;
        tmp_5_reg_951_pp0_iter21_reg <= tmp_5_reg_951_pp0_iter20_reg;
        tmp_9_reg_988 <= tmp_9_fu_702_p7;
        tmp_im_31_reg_1004 <= grp_fu_496_p2;
        tmp_im_32_reg_983 <= Buff1_im_q0;
        tmp_im_33_reg_1014 <= grp_fu_504_p2;
        tmp_im_34_reg_1075 <= grp_fu_472_p2;
        tmp_im_35_reg_1059 <= Buff2_im_q0;
        tmp_im_36_reg_1085 <= grp_fu_512_p2;
        tmp_im_37_reg_1146 <= grp_fu_480_p2;
        tmp_im_38_reg_1130 <= Buff3_im_q0;
        tmp_im_39_reg_1156 <= grp_fu_520_p2;
        tmp_im_40_reg_1166 <= grp_fu_488_p2;
        tmp_im_reg_961 <= Buff0_im_q0;
        tmp_re_31_reg_999 <= grp_fu_492_p2;
        tmp_re_32_reg_978 <= Buff1_re_q0;
        tmp_re_33_reg_1009 <= grp_fu_500_p2;
        tmp_re_34_reg_1070 <= grp_fu_468_p2;
        tmp_re_35_reg_1054 <= Buff2_re_q0;
        tmp_re_36_reg_1080 <= grp_fu_508_p2;
        tmp_re_37_reg_1141 <= grp_fu_476_p2;
        tmp_re_38_reg_1125 <= Buff3_re_q0;
        tmp_re_39_reg_1151 <= grp_fu_516_p2;
        tmp_re_40_reg_1161 <= grp_fu_484_p2;
        tmp_re_reg_956 <= Buff0_re_q0;
        tmp_s_reg_966 <= tmp_s_fu_682_p7;
        trunc_ln5643_reg_972 <= trunc_ln5643_fu_698_p1;
        trunc_ln5643_reg_972_pp0_iter14_reg <= trunc_ln5643_reg_972;
        trunc_ln5643_reg_972_pp0_iter15_reg <= trunc_ln5643_reg_972_pp0_iter14_reg;
        trunc_ln5643_reg_972_pp0_iter16_reg <= trunc_ln5643_reg_972_pp0_iter15_reg;
        trunc_ln5643_reg_972_pp0_iter17_reg <= trunc_ln5643_reg_972_pp0_iter16_reg;
        trunc_ln5643_reg_972_pp0_iter18_reg <= trunc_ln5643_reg_972_pp0_iter17_reg;
        trunc_ln5643_reg_972_pp0_iter19_reg <= trunc_ln5643_reg_972_pp0_iter18_reg;
        trunc_ln5643_reg_972_pp0_iter20_reg <= trunc_ln5643_reg_972_pp0_iter19_reg;
        trunc_ln5643_reg_972_pp0_iter21_reg <= trunc_ln5643_reg_972_pp0_iter20_reg;
        trunc_ln5643_reg_972_pp0_iter22_reg <= trunc_ln5643_reg_972_pp0_iter21_reg;
        zext_ln1027_reg_873[10 : 0] <= zext_ln1027_fu_591_p1[10 : 0];
        zext_ln1027_reg_873_pp0_iter13_reg[10 : 0] <= zext_ln1027_reg_873[10 : 0];
        zext_ln1027_reg_873_pp0_iter14_reg[10 : 0] <= zext_ln1027_reg_873_pp0_iter13_reg[10 : 0];
        zext_ln1027_reg_873_pp0_iter15_reg[10 : 0] <= zext_ln1027_reg_873_pp0_iter14_reg[10 : 0];
        zext_ln1027_reg_873_pp0_iter16_reg[10 : 0] <= zext_ln1027_reg_873_pp0_iter15_reg[10 : 0];
        zext_ln1027_reg_873_pp0_iter17_reg[10 : 0] <= zext_ln1027_reg_873_pp0_iter16_reg[10 : 0];
        zext_ln1027_reg_873_pp0_iter18_reg[10 : 0] <= zext_ln1027_reg_873_pp0_iter17_reg[10 : 0];
        zext_ln1027_reg_873_pp0_iter19_reg[10 : 0] <= zext_ln1027_reg_873_pp0_iter18_reg[10 : 0];
        zext_ln1027_reg_873_pp0_iter20_reg[10 : 0] <= zext_ln1027_reg_873_pp0_iter19_reg[10 : 0];
        zext_ln1027_reg_873_pp0_iter21_reg[10 : 0] <= zext_ln1027_reg_873_pp0_iter20_reg[10 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        j_V_1_reg_847 <= ap_sig_allocacmp_j_V_1;
        j_V_1_reg_847_pp0_iter1_reg <= j_V_1_reg_847;
        lhs_reg_856_pp0_iter1_reg <= lhs_reg_856;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1027_fu_542_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        lhs_reg_856 <= lhs_fu_554_p1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        Buff0_im_ce0 = 1'b1;
    end else begin
        Buff0_im_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        Buff0_re_ce0 = 1'b1;
    end else begin
        Buff0_re_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        Buff1_im_ce0 = 1'b1;
    end else begin
        Buff1_im_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        Buff1_re_ce0 = 1'b1;
    end else begin
        Buff1_re_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter17 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        Buff2_im_ce0 = 1'b1;
    end else begin
        Buff2_im_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter17 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        Buff2_re_ce0 = 1'b1;
    end else begin
        Buff2_re_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter22 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        Buff3_im_ce0 = 1'b1;
    end else begin
        Buff3_im_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter22 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        Buff3_re_ce0 = 1'b1;
    end else begin
        Buff3_re_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter33 == 1'b1))) begin
        D1_blk_n = D1_full_n;
    end else begin
        D1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter33 == 1'b1))) begin
        D1_write = 1'b1;
    end else begin
        D1_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter22 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        Hann_0_ce0 = 1'b1;
    end else begin
        Hann_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter17 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        Hann_0_ce1 = 1'b1;
    end else begin
        Hann_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        Hann_0_ce2 = 1'b1;
    end else begin
        Hann_0_ce2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        Hann_0_ce3 = 1'b1;
    end else begin
        Hann_0_ce3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter22 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        Hann_1_ce0 = 1'b1;
    end else begin
        Hann_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter17 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        Hann_1_ce1 = 1'b1;
    end else begin
        Hann_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        Hann_1_ce2 = 1'b1;
    end else begin
        Hann_1_ce2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        Hann_1_ce3 = 1'b1;
    end else begin
        Hann_1_ce3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter22 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        Hann_2_ce0 = 1'b1;
    end else begin
        Hann_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter17 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        Hann_2_ce1 = 1'b1;
    end else begin
        Hann_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        Hann_2_ce2 = 1'b1;
    end else begin
        Hann_2_ce2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        Hann_2_ce3 = 1'b1;
    end else begin
        Hann_2_ce3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter22 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        Hann_3_ce0 = 1'b1;
    end else begin
        Hann_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter17 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        Hann_3_ce1 = 1'b1;
    end else begin
        Hann_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        Hann_3_ce2 = 1'b1;
    end else begin
        Hann_3_ce2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        Hann_3_ce3 = 1'b1;
    end else begin
        Hann_3_ce3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter22 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        Hann_4_ce0 = 1'b1;
    end else begin
        Hann_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter17 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        Hann_4_ce1 = 1'b1;
    end else begin
        Hann_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        Hann_4_ce2 = 1'b1;
    end else begin
        Hann_4_ce2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        Hann_4_ce3 = 1'b1;
    end else begin
        Hann_4_ce3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1027_fu_542_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter32_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_j_V_1 = 11'd0;
    end else begin
        ap_sig_allocacmp_j_V_1 = j_V_fu_108;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_468_ce = 1'b1;
    end else begin
        grp_fu_468_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_472_ce = 1'b1;
    end else begin
        grp_fu_472_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_476_ce = 1'b1;
    end else begin
        grp_fu_476_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_480_ce = 1'b1;
    end else begin
        grp_fu_480_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_484_ce = 1'b1;
    end else begin
        grp_fu_484_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_488_ce = 1'b1;
    end else begin
        grp_fu_488_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_492_ce = 1'b1;
    end else begin
        grp_fu_492_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_496_ce = 1'b1;
    end else begin
        grp_fu_496_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_500_ce = 1'b1;
    end else begin
        grp_fu_500_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_504_ce = 1'b1;
    end else begin
        grp_fu_504_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_508_ce = 1'b1;
    end else begin
        grp_fu_508_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_512_ce = 1'b1;
    end else begin
        grp_fu_512_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_516_ce = 1'b1;
    end else begin
        grp_fu_516_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_520_ce = 1'b1;
    end else begin
        grp_fu_520_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_558_ce = 1'b1;
    end else begin
        grp_fu_558_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_805_ce = 1'b1;
    end else begin
        grp_fu_805_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_812_ce = 1'b1;
    end else begin
        grp_fu_812_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_819_ce = 1'b1;
    end else begin
        grp_fu_819_ce = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Buff0_im_address0 = zext_ln1027_fu_591_p1;

assign Buff0_re_address0 = zext_ln1027_fu_591_p1;

assign Buff1_im_address0 = zext_ln1027_fu_591_p1;

assign Buff1_re_address0 = zext_ln1027_fu_591_p1;

assign Buff2_im_address0 = zext_ln1027_reg_873_pp0_iter16_reg;

assign Buff2_re_address0 = zext_ln1027_reg_873_pp0_iter16_reg;

assign Buff3_im_address0 = zext_ln1027_reg_873_pp0_iter21_reg;

assign Buff3_re_address0 = zext_ln1027_reg_873_pp0_iter21_reg;

assign D1_din = {{bitcast_ln5643_1_fu_793_p1}, {bitcast_ln5643_fu_790_p1}};

assign Hann_0_address0 = zext_ln5643_2_fu_767_p1;

assign Hann_0_address1 = zext_ln5643_1_fu_743_p1;

assign Hann_0_address2 = zext_ln5643_fu_632_p1;

assign Hann_0_address3 = zext_ln5643_3_fu_614_p1;

assign Hann_1_address0 = zext_ln5643_2_fu_767_p1;

assign Hann_1_address1 = zext_ln5643_1_fu_743_p1;

assign Hann_1_address2 = zext_ln5643_fu_632_p1;

assign Hann_1_address3 = zext_ln5643_3_fu_614_p1;

assign Hann_2_address0 = zext_ln5643_2_fu_767_p1;

assign Hann_2_address1 = zext_ln5643_1_fu_743_p1;

assign Hann_2_address2 = zext_ln5643_fu_632_p1;

assign Hann_2_address3 = zext_ln5643_3_fu_614_p1;

assign Hann_3_address0 = zext_ln5643_2_fu_767_p1;

assign Hann_3_address1 = zext_ln5643_1_fu_743_p1;

assign Hann_3_address2 = zext_ln5643_fu_632_p1;

assign Hann_3_address3 = zext_ln5643_3_fu_614_p1;

assign Hann_4_address0 = zext_ln5643_2_fu_767_p1;

assign Hann_4_address1 = zext_ln5643_1_fu_743_p1;

assign Hann_4_address2 = zext_ln5643_fu_632_p1;

assign Hann_4_address3 = zext_ln5643_3_fu_614_p1;

assign add_ln1027_fu_658_p2 = (phi_urem_fu_100 + 11'd1);

assign add_ln5643_fu_598_p2 = (phi_mul_fu_104 + 22'd3277);

assign add_ln840_fu_548_p2 = (ap_sig_allocacmp_j_V_1 + 11'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((1'b0 == D1_full_n) & (ap_enable_reg_pp0_iter33 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((1'b0 == D1_full_n) & (ap_enable_reg_pp0_iter33 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((1'b0 == D1_full_n) & (ap_enable_reg_pp0_iter33 == 1'b1));
end

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage0_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage0_iter30 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage0_iter31 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage0_iter32 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state34_pp0_stage0_iter33 = (1'b0 == D1_full_n);
end

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign bitcast_ln5643_1_fu_793_p1 = tmp_im_40_reg_1166;

assign bitcast_ln5643_fu_790_p1 = tmp_re_40_reg_1161;

assign grp_fu_558_p0 = ap_sig_allocacmp_j_V_1[9:0];

assign grp_fu_558_p1 = 10'd5;

assign grp_fu_805_p0 = grp_fu_805_p00;

assign grp_fu_805_p00 = $unsigned(ret_V_fu_569_p3);

assign grp_fu_805_p1 = 23'd3277;

assign grp_fu_812_p0 = grp_fu_812_p00;

assign grp_fu_812_p00 = $unsigned(sext_ln5643_fu_580_p1);

assign grp_fu_812_p1 = 25'd6554;

assign grp_fu_819_p0 = grp_fu_819_p00;

assign grp_fu_819_p00 = ret_V_1_fu_723_p3;

assign grp_fu_819_p1 = 25'd6554;

assign icmp_ln1027_3_fu_664_p2 = ((add_ln1027_fu_658_p2 < 11'd5) ? 1'b1 : 1'b0);

assign icmp_ln1027_fu_542_p2 = ((ap_sig_allocacmp_j_V_1 == 11'd1024) ? 1'b1 : 1'b0);

assign lhs_fu_554_p1 = ap_sig_allocacmp_j_V_1[9:0];

assign ret_V_1_fu_723_p3 = {{2'd2}, {lhs_reg_856_pp0_iter13_reg}};

assign ret_V_fu_569_p3 = {{1'd1}, {lhs_reg_856_pp0_iter8_reg}};

assign select_ln1027_fu_670_p3 = ((icmp_ln1027_3_fu_664_p2[0:0] == 1'b1) ? add_ln1027_fu_658_p2 : 11'd0);

assign sext_ln5643_fu_580_p1 = ret_V_fu_569_p3;

assign tmp_3_fu_623_p1 = grp_fu_805_p2;

assign tmp_3_fu_623_p4 = {{tmp_3_fu_623_p1[22:14]}};

assign tmp_4_fu_734_p1 = grp_fu_819_p2;

assign tmp_4_fu_734_p4 = {{tmp_4_fu_734_p1[24:15]}};

assign tmp_5_fu_641_p1 = grp_fu_812_p2;

assign tmp_9_fu_702_p6 = grp_fu_558_p2[2:0];

assign tmp_fu_604_p4 = {{phi_mul_fu_104[21:14]}};

assign tmp_s_fu_682_p6 = phi_urem_fu_100[2:0];

assign trunc_ln5643_fu_698_p1 = grp_fu_558_p2[2:0];

assign zext_ln1027_fu_591_p1 = j_V_1_reg_847_pp0_iter11_reg;

assign zext_ln5643_1_fu_743_p1 = tmp_4_fu_734_p4;

assign zext_ln5643_2_fu_767_p1 = tmp_5_reg_951_pp0_iter21_reg;

assign zext_ln5643_3_fu_614_p1 = tmp_fu_604_p4;

assign zext_ln5643_fu_632_p1 = tmp_3_fu_623_p4;

always @ (posedge ap_clk) begin
    zext_ln1027_reg_873[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln1027_reg_873_pp0_iter13_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln1027_reg_873_pp0_iter14_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln1027_reg_873_pp0_iter15_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln1027_reg_873_pp0_iter16_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln1027_reg_873_pp0_iter17_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln1027_reg_873_pp0_iter18_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln1027_reg_873_pp0_iter19_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln1027_reg_873_pp0_iter20_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    zext_ln1027_reg_873_pp0_iter21_reg[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
end

endmodule //Processing_HW_Windowing_Pipeline_VITIS_LOOP_5641_2
